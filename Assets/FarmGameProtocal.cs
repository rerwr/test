// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class FarmGameProtocal {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_PMsg_StagePropUnit__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PMsg_StagePropUnit, global::PMsg_StagePropUnit.Builder> internal__static_PMsg_StagePropUnit__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PMsg_Plant__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PMsg_Plant, global::PMsg_Plant.Builder> internal__static_PMsg_Plant__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PMsg_MapUnit__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PMsg_MapUnit, global::PMsg_MapUnit.Builder> internal__static_PMsg_MapUnit__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PMsg_MessageUnit__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PMsg_MessageUnit, global::PMsg_MessageUnit.Builder> internal__static_PMsg_MessageUnit__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Shop_MessageUnit__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Shop_MessageUnit, global::Shop_MessageUnit.Builder> internal__static_Shop_MessageUnit__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_PMsg_ChatLog__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::PMsg_ChatLog, global::PMsg_ChatLog.Builder> internal__static_PMsg_ChatLog__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Tick_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Tick_Req, global::Farm_Tick_Req.Builder> internal__static_Farm_Tick_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Tick_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Tick_Anw, global::Farm_Tick_Anw.Builder> internal__static_Farm_Tick_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_CommAnswer__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_CommAnswer, global::Farm_CommAnswer.Builder> internal__static_Farm_CommAnswer__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ReqLoginSDK__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ReqLoginSDK, global::ReqLoginSDK.Builder> internal__static_ReqLoginSDK__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ResponeLoginSDK__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ResponeLoginSDK, global::ResponeLoginSDK.Builder> internal__static_ResponeLoginSDK__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ReqLogoutSDK__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ReqLogoutSDK, global::ReqLogoutSDK.Builder> internal__static_ReqLogoutSDK__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ReqLogin__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ReqLogin, global::ReqLogin.Builder> internal__static_ReqLogin__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ResponeLogin__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ResponeLogin, global::ResponeLogin.Builder> internal__static_ResponeLogin__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_SignRewardUnit__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::SignRewardUnit, global::SignRewardUnit.Builder> internal__static_SignRewardUnit__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ReqReLogin__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ReqReLogin, global::ReqReLogin.Builder> internal__static_ReqReLogin__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Register_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Register_Req, global::Farm_Game_Register_Req.Builder> internal__static_Farm_Game_Register_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_VeriCode_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_VeriCode_Req, global::Farm_Game_VeriCode_Req.Builder> internal__static_Farm_Game_VeriCode_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_UserInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_UserInfo_Req, global::Farm_Game_UserInfo_Req.Builder> internal__static_Farm_Game_UserInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_UserInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_UserInfo_Anw, global::Farm_Game_UserInfo_Anw.Builder> internal__static_Farm_Game_UserInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_MapInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MapInfo_Req, global::Farm_Game_MapInfo_Req.Builder> internal__static_Farm_Game_MapInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_MapInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MapInfo_Anw, global::Farm_Game_MapInfo_Anw.Builder> internal__static_Farm_Game_MapInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_NewUser_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_NewUser_Req, global::Farm_Game_NewUser_Req.Builder> internal__static_Farm_Game_NewUser_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_NewUser_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_NewUser_Anw, global::Farm_Game_NewUser_Anw.Builder> internal__static_Farm_Game_NewUser_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_RankInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_RankInfo_Req, global::Farm_Game_RankInfo_Req.Builder> internal__static_Farm_Game_RankInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_RankInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_RankInfo_Anw, global::Farm_Game_RankInfo_Anw.Builder> internal__static_Farm_Game_RankInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_StoreInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_StoreInfo_Req, global::Farm_Game_StoreInfo_Req.Builder> internal__static_Farm_Game_StoreInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_StoreInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_StoreInfo_Anw, global::Farm_Game_StoreInfo_Anw.Builder> internal__static_Farm_Game_StoreInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_FriendsInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FriendsInfo_Req, global::Farm_Game_FriendsInfo_Req.Builder> internal__static_Farm_Game_FriendsInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_FriendsInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FriendsInfo_Anw, global::Farm_Game_FriendsInfo_Anw.Builder> internal__static_Farm_Game_FriendsInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ShopInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ShopInfo_Req, global::Farm_Game_ShopInfo_Req.Builder> internal__static_Farm_Game_ShopInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ShopInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ShopInfo_Anw, global::Farm_Game_ShopInfo_Anw.Builder> internal__static_Farm_Game_ShopInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_AnnouncementInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AnnouncementInfo_Req, global::Farm_Game_AnnouncementInfo_Req.Builder> internal__static_Farm_Game_AnnouncementInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_AnnouncementInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AnnouncementInfo_Anw, global::Farm_Game_AnnouncementInfo_Anw.Builder> internal__static_Farm_Game_AnnouncementInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Store_Update__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Store_Update, global::Farm_Game_Store_Update.Builder> internal__static_Farm_Game_Store_Update__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Action_Fandi_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Fandi_Req, global::Farm_Game_Action_Fandi_Req.Builder> internal__static_Farm_Game_Action_Fandi_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Action_Fandi_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Fandi_Anw, global::Farm_Game_Action_Fandi_Anw.Builder> internal__static_Farm_Game_Action_Fandi_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Seed_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Seed_Req, global::Farm_Game_Seed_Req.Builder> internal__static_Farm_Game_Seed_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Seed_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Seed_Anw, global::Farm_Game_Seed_Anw.Builder> internal__static_Farm_Game_Seed_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Action_WF_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_WF_Req, global::Farm_Game_Action_WF_Req.Builder> internal__static_Farm_Game_Action_WF_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Action_WF_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_WF_Anw, global::Farm_Game_Action_WF_Anw.Builder> internal__static_Farm_Game_Action_WF_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Action_Pluck_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Pluck_Req, global::Farm_Game_Action_Pluck_Req.Builder> internal__static_Farm_Game_Action_Pluck_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Action_Pluck_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Pluck_Anw, global::Farm_Game_Action_Pluck_Anw.Builder> internal__static_Farm_Game_Action_Pluck_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Action_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Anw, global::Farm_Game_Action_Anw.Builder> internal__static_Farm_Game_Action_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_buyOrSell_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_buyOrSell_Req, global::Farm_Game_buyOrSell_Req.Builder> internal__static_Farm_Game_buyOrSell_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_buyOrSell_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_buyOrSell_Anw, global::Farm_Game_buyOrSell_Anw.Builder> internal__static_Farm_Game_buyOrSell_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_pay_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_pay_Req, global::Farm_Game_pay_Req.Builder> internal__static_Farm_Game_pay_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_pay_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_pay_Anw, global::Farm_Game_pay_Anw.Builder> internal__static_Farm_Game_pay_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_SingleFriendInfo_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SingleFriendInfo_Req, global::Farm_Game_SingleFriendInfo_Req.Builder> internal__static_Farm_Game_SingleFriendInfo_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_SingleFriendInfo_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SingleFriendInfo_Anw, global::Farm_Game_SingleFriendInfo_Anw.Builder> internal__static_Farm_Game_SingleFriendInfo_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_OidUpgrade_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OidUpgrade_Req, global::Farm_Game_OidUpgrade_Req.Builder> internal__static_Farm_Game_OidUpgrade_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_OilUpgrade_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OilUpgrade_Anw, global::Farm_Game_OilUpgrade_Anw.Builder> internal__static_Farm_Game_OilUpgrade_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_AddFriend_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AddFriend_Req, global::Farm_Game_AddFriend_Req.Builder> internal__static_Farm_Game_AddFriend_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Sign_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Sign_Req, global::Farm_Game_Sign_Req.Builder> internal__static_Farm_Game_Sign_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Sign_Awn__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Sign_Awn, global::Farm_Game_Sign_Awn.Builder> internal__static_Farm_Game_Sign_Awn__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_DogUpgrad_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_DogUpgrad_Req, global::Farm_Game_DogUpgrad_Req.Builder> internal__static_Farm_Game_DogUpgrad_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ReClaim_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ReClaim_Req, global::Farm_Game_ReClaim_Req.Builder> internal__static_Farm_Game_ReClaim_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ReClaim_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ReClaim_Anw, global::Farm_Game_ReClaim_Anw.Builder> internal__static_Farm_Game_ReClaim_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ScanQRcodeOrRecommand_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ScanQRcodeOrRecommand_Req, global::Farm_Game_ScanQRcodeOrRecommand_Req.Builder> internal__static_Farm_Game_ScanQRcodeOrRecommand_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ScanQRcodeOrRecommand_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ScanQRcodeOrRecommand_Anw, global::Farm_Game_ScanQRcodeOrRecommand_Anw.Builder> internal__static_Farm_Game_ScanQRcodeOrRecommand_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Chant_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Chant_Req, global::Farm_Game_Chant_Req.Builder> internal__static_Farm_Game_Chant_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Chat_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Chat_Anw, global::Farm_Game_Chat_Anw.Builder> internal__static_Farm_Game_Chat_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_CoinOrExpChange_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_CoinOrExpChange_Anw, global::Farm_Game_CoinOrExpChange_Anw.Builder> internal__static_Farm_Game_CoinOrExpChange_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_MessageSend_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MessageSend_Req, global::Farm_Game_MessageSend_Req.Builder> internal__static_Farm_Game_MessageSend_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_MessageSend_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MessageSend_Anw, global::Farm_Game_MessageSend_Anw.Builder> internal__static_Farm_Game_MessageSend_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_AgreeAdd_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AgreeAdd_Req, global::Farm_Game_AgreeAdd_Req.Builder> internal__static_Farm_Game_AgreeAdd_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_SearchFriend_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SearchFriend_Req, global::Farm_Game_SearchFriend_Req.Builder> internal__static_Farm_Game_SearchFriend_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_SearchFriend_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SearchFriend_Anw, global::Farm_Game_SearchFriend_Anw.Builder> internal__static_Farm_Game_SearchFriend_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ChatLog_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ChatLog_Req, global::Farm_Game_ChatLog_Req.Builder> internal__static_Farm_Game_ChatLog_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_ChatLog_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ChatLog_Anw, global::Farm_Game_ChatLog_Anw.Builder> internal__static_Farm_Game_ChatLog_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_DeleteMsg_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_DeleteMsg_Req, global::Farm_Game_DeleteMsg_Req.Builder> internal__static_Farm_Game_DeleteMsg_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_FeedDog_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FeedDog_Req, global::Farm_Game_FeedDog_Req.Builder> internal__static_Farm_Game_FeedDog_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_FeedDog_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FeedDog_Anw, global::Farm_Game_FeedDog_Anw.Builder> internal__static_Farm_Game_FeedDog_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_TotalSell_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_TotalSell_Req, global::Farm_Game_TotalSell_Req.Builder> internal__static_Farm_Game_TotalSell_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_InfoLog_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_InfoLog_Req, global::Farm_Game_InfoLog_Req.Builder> internal__static_Farm_Game_InfoLog_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_InfoLog_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_InfoLog_Anw, global::Farm_Game_InfoLog_Anw.Builder> internal__static_Farm_Game_InfoLog_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_OidExchange_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OidExchange_Req, global::Farm_Game_OidExchange_Req.Builder> internal__static_Farm_Game_OidExchange_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_OidExchange_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OidExchange_Anw, global::Farm_Game_OidExchange_Anw.Builder> internal__static_Farm_Game_OidExchange_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Postage_Req__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Postage_Req, global::Farm_Game_Postage_Req.Builder> internal__static_Farm_Game_Postage_Req__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_Postage_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Postage_Anw, global::Farm_Game_Postage_Anw.Builder> internal__static_Farm_Game_Postage_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_PaySucc_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_PaySucc_Anw, global::Farm_Game_PaySucc_Anw.Builder> internal__static_Farm_Game_PaySucc_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_CheckOrder_REQ__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_CheckOrder_REQ, global::Farm_Game_CheckOrder_REQ.Builder> internal__static_Farm_Game_CheckOrder_REQ__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_CheckOrder_Anw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_CheckOrder_Anw, global::Farm_Game_CheckOrder_Anw.Builder> internal__static_Farm_Game_CheckOrder_Anw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_Farm_Game_LogisticsOrder__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::Farm_Game_LogisticsOrder, global::Farm_Game_LogisticsOrder.Builder> internal__static_Farm_Game_LogisticsOrder__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static FarmGameProtocal() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChxpbnB1dC9GYXJtR2FtZVByb3RvY2FsLnByb3RvIi8KElBNc2dfU3RhZ2VQ", 
          "cm9wVW5pdBIKCgJpZBgCIAEoBRINCgVjb3VudBgDIAEoBSJyCgpQTXNnX1Bs", 
          "YW50EgoKAmlkGAQgASgFEhEKCXN0YXJ0VGltZRgFIAEoBRIPCgdpc1N0ZWFs", 
          "GAYgASgFEg4KBmlzV29ybRgJIAEoBRIPCgdpc0dyYXNzGAogASgFEhMKC2lz", 
          "TGVzc1dhdGVyGAsgAigFIksKDFBNc2dfTWFwVW5pdBIKCgJpZBgCIAEoBRIT", 
          "CgtlbmFibGVQbGFudBgEIAEoBRIaCgVwbGFudBgIIAEoCzILLlBNc2dfUGxh", 
          "bnQiigEKEFBNc2dfTWVzc2FnZVVuaXQSDQoFTXNnSUQYASABKAUSDwoHTXNn", 
          "VHlwZRgCIAEoBRIPCgdDb250ZW50GAMgASgJEhAKCFNlbmRUaW1lGAQgASgF", 
          "Eg8KB0Zyb21VaWQYBSABKAUSEAoIRnJvbUhlYWQYBiABKAkSEAoIRnJvbU5h", 
          "bWUYByABKAkiRgoQU2hvcF9NZXNzYWdlVW5pdBIjCgZPYmplY3QYASABKAsy", 
          "Ey5QTXNnX1N0YWdlUHJvcFVuaXQSDQoFUHJpY2UYAiABKAUiPgoMUE1zZ19D", 
          "aGF0TG9nEgsKA3VpZBgBIAEoBRIPCgdDb250ZW50GAIgASgJEhAKCHNlbmRU", 
          "aW1lGAMgASgFIg8KDUZhcm1fVGlja19SZXEiIQoNRmFybV9UaWNrX0FudxIQ", 
          "Cgh1bml4dGltZRgBIAEoBSIyCg9GYXJtX0NvbW1BbnN3ZXISDwoHY29udGVu", 
          "dBgBIAEoCRIOCgZyZXN1bHQYAiABKAUi6QEKC1JlcUxvZ2luU0RLEg8KB2Fj", 
          "Y291bnQYASABKAkSEAoIcGFzc3dvcmQYAiABKAkSEAoIcGxhdGZvcm0YAyAB", 
          "KAUSDAoEc2lnbhgEIAEoCRIMCgR0eXBlGAUgASgJEg4KBm9wZW5pZBgGIAEo", 
          "CRISCgpoZWFkaW1ndXJsGAcgASgJEhAKCHByb3ZpbmNlGAggASgJEhAKCG5p", 
          "Y2tuYW1lGAkgASgJEgwKBGNpdHkYCiABKAkSCwoDc2V4GAsgASgJEhAKCGxh", 
          "bmd1YWdlGAwgASgJEhQKDHZlcmlmaWNhdGlvbhgNIAEoCSJACg9SZXNwb25l", 
          "TG9naW5TREsSCwoDdWlkGAEgASgFEg0KBXRva2VuGAIgASgJEhEKCWlzQmlu", 
          "ZGluZxgDIAEoBSIOCgxSZXFMb2dvdXRTREsiJgoIUmVxTG9naW4SCwoDdWlk", 
          "GAEgASgFEg0KBXRva2VuGAIgASgJIu8CCgxSZXNwb25lTG9naW4SCwoDdWlk", 
          "GAEgASgFEhAKCHVzZXJuYW1lGAIgASgJEgwKBGhlYWQYAyABKAkSCgoCbHYY", 
          "BCABKAUSCwoDZXhwGAUgASgFEhMKC0xldmVsTWF4RXhwGAYgASgFEgsKA29p", 
          "bBgHIAEoBRIOCgZkb2dfbHYYCCABKAUSHwoIbWFwQXJyYXkYCSADKAsyDS5Q", 
          "TXNnX01hcFVuaXQSIwoKYXdhcmRJbmZvcxgLIAMoCzIPLlNpZ25SZXdhcmRV", 
          "bml0EhQKDENvbnRpbnVlRGF5cxgMIAEoBRIMCgRnb2xkGA0gASgFEhgKEERv", 
          "Z1VwZ3JhZGVNYXhFWFAYESABKAUSFQoNRG9nQ3VycmVudEVYUBgSIAEoBRIO", 
          "CgZDaGFuY2UYEyABKAUSDwoHYWNjb3VudBgUIAEoCRIWCg5JbnZpdGF0aW9u", 
          "Q29kZRgVIAEoCRITCgtpc1BheUZvckFQUBgWIAEoBSJCCg5TaWduUmV3YXJk", 
          "VW5pdBIMCgRDb2lkGAEgASgFEiIKBWF3YXJkGAIgASgLMhMuUE1zZ19TdGFn", 
          "ZVByb3BVbml0IigKClJlcVJlTG9naW4SCwoDdWlkGAEgASgFEg0KBXRva2Vu", 
          "GAIgASgJInoKFkZhcm1fR2FtZV9SZWdpc3Rlcl9SZXESEAoIUGhvbmVOdW0Y", 
          "ASABKAkSEAoIVmVyaUNvZGUYAiABKAkSEAoIcGFzc3dvcmQYAyABKAkSDwoH", 
          "cGF0dGVybhgEIAEoBRIZChFCZVJlY29tbWFuZGVkQ29kZRgFIAEoCSIqChZG", 
          "YXJtX0dhbWVfVmVyaUNvZGVfUmVxEhAKCFBob25lTnVtGAEgASgJIiUKFkZh", 
          "cm1fR2FtZV9Vc2VySW5mb19SZXESCwoDVWlkGAEgASgFIrICChZGYXJtX0dh", 
          "bWVfVXNlckluZm9fQW53EhIKClVzZXJHYW1lSUQYASABKAUSEAoIR2FtZU5h", 
          "bWUYAiABKAkSEgoKSGVhZGVySWNvbhgEIAEoCRIRCglHYW1lTW9uZXkYBSAB", 
          "KAUSEQoJVXNlckxldmVsGAggASgFEhUKDXJlY29tbW9uZENvZGUYCSABKAUS", 
          "DwoHVXNlckV4cBgKIAEoBRITCgtMZXZlbE1heEV4cBgLIAEoBRILCgN1cmwY", 
          "DSABKAkSDAoEUmFuaxgOIAEoBRIPCgdBY2NvdW50GA8gAigJEg4KBkFjaXRv", 
          "bhgQIAEoBRIYChBEb2dVcGdyYWRlTWF4RVhQGBEgASgFEhUKDURvZ0N1cnJl", 
          "bnRFWFAYEiABKAUSDgoGZG9nX2x2GBMgASgFIisKFUZhcm1fR2FtZV9NYXBJ", 
          "bmZvX1JlcRISCgpVc2VyR2FtZUlEGAEgASgFIjgKFUZhcm1fR2FtZV9NYXBJ", 
          "bmZvX0FudxIfCghNYXBBcnJheRgEIAMoCzINLlBNc2dfTWFwVW5pdCJKChVG", 
          "YXJtX0dhbWVfTmV3VXNlcl9SZXESEAoIR2FtZU5hbWUYASABKAkSCwoDU2V4", 
          "GAIgASgFEhIKCkhlYWRlckljb24YAyABKAkiQQoVRmFybV9HYW1lX05ld1Vz", 
          "ZXJfQW53EhQKDENyZWF0ZVJlc3VsdBgBIAEoBRISCgpVc2VyR2FtZUlEGAIg", 
          "ASgFIkEKFkZhcm1fR2FtZV9SYW5rSW5mb19SZXESEgoKVXNlckdhbWVJRBgB", 
          "IAEoBRITCgtDdXJyZW50UGFnZRgCIAEoBSJEChZGYXJtX0dhbWVfUmFua0lu", 
          "Zm9fQW53EioKCVVzZXJJbmZvcxgBIAMoCzIXLkZhcm1fR2FtZV9Vc2VySW5m", 
          "b19BbnciLQoXRmFybV9HYW1lX1N0b3JlSW5mb19SZXESEgoKVXNlckdhbWVJ", 
          "RBgBIAEoBSI/ChdGYXJtX0dhbWVfU3RvcmVJbmZvX0FudxIkCgdzdUFycmF5", 
          "GAQgAygLMhMuUE1zZ19TdGFnZVByb3BVbml0IkQKGUZhcm1fR2FtZV9Gcmll", 
          "bmRzSW5mb19SZXESEgoKVXNlckdhbWVJRBgBIAEoBRITCgtDdXJyZW50UGFn", 
          "ZRgCIAEoBSJCChlGYXJtX0dhbWVfRnJpZW5kc0luZm9fQW53EiUKBEluZm8Y", 
          "AiADKAsyFy5GYXJtX0dhbWVfVXNlckluZm9fQW53IiwKFkZhcm1fR2FtZV9T", 
          "aG9wSW5mb19SZXESEgoKVXNlckdhbWVJRBgBIAEoBSI8ChZGYXJtX0dhbWVf", 
          "U2hvcEluZm9fQW53EiIKB29iamVjdHMYAiADKAsyES5TaG9wX01lc3NhZ2VV", 
          "bml0IkMKHkZhcm1fR2FtZV9Bbm5vdW5jZW1lbnRJbmZvX1JlcRISCgpVc2Vy", 
          "R2FtZUlEGAEgASgFEg0KBXRva2VuGAIgASgJImkKHkZhcm1fR2FtZV9Bbm5v", 
          "dW5jZW1lbnRJbmZvX0FudxIUCgxBbm5vdW5jZW1lbnQYASABKAkSEgoKVmVy", 
          "c2lvbk51bRgCIAEoCRIQCghpc1VwZGF0ZRgDIAEoBRILCgN1cmwYBCABKAki", 
          "PgoWRmFybV9HYW1lX1N0b3JlX1VwZGF0ZRIkCgdvYmplY3RzGAEgAygLMhMu", 
          "UE1zZ19TdGFnZVByb3BVbml0IkIKGkZhcm1fR2FtZV9BY3Rpb25fRmFuZGlf", 
          "UmVxEhIKClVzZXJHYW1lSUQYASABKAUSEAoIRmllbGRzSUQYAiABKAUiLgoa", 
          "RmFybV9HYW1lX0FjdGlvbl9GYW5kaV9BbncSEAoIRmllbGRzSUQYASABKAUi", 
          "SgoSRmFybV9HYW1lX1NlZWRfUmVxEhIKClVzZXJHYW1lSUQYASABKAUSEAoI", 
          "RmllbGRzSUQYAiABKAUSDgoGU2VlZElEGAMgASgFIi8KEkZhcm1fR2FtZV9T", 
          "ZWVkX0FudxIZCgRpbmZvGAMgASgLMgsuUE1zZ19QbGFudCJoChdGYXJtX0dh", 
          "bWVfQWN0aW9uX1dGX1JlcRISCgpVc2VyR2FtZUlEGAEgASgFEhAKCEZpZWxk", 
          "c0lEGAMgASgFEhAKCEFjdGlvbklEGAQgASgFEhUKDUZlcnRpbGl6ZXJzSUQY", 
          "BSABKAUiPQoXRmFybV9HYW1lX0FjdGlvbl9XRl9BbncSEAoIRmllbGRzSUQY", 
          "AyABKAUSEAoIQWN0aW9uSUQYBCABKAUiWQoaRmFybV9HYW1lX0FjdGlvbl9Q", 
          "bHVja19SZXESEgoKVXNlckdhbWVJRBgBIAEoBRIQCghGaWVsZHNJRBgCIAEo", 
          "BRIVCg1WaXNpdGVkR2FtZUlEGAMgASgFIisKGkZhcm1fR2FtZV9BY3Rpb25f", 
          "UGx1Y2tfQW53Eg0KBWFycmF5GAIgAygFIjoKFEZhcm1fR2FtZV9BY3Rpb25f", 
          "QW53EhAKCEZpZWxkc0lEGAEgASgFEhAKCEFjdGlvbklEGAIgASgFImcKF0Zh", 
          "cm1fR2FtZV9idXlPclNlbGxfUmVxEhIKClVzZXJHYW1lSUQYASABKAUSFgoO", 
          "U2hvcHBpbmdJdGVtSUQYAiABKAUSDQoFQ291bnQYAyABKAUSEQoJYnV5T3JT", 
          "ZWxsGAUgASgFIhkKF0Zhcm1fR2FtZV9idXlPclNlbGxfQW53IjYKEUZhcm1f", 
          "R2FtZV9wYXlfUmVxEhIKClVzZXJHYW1lSUQYASABKAUSDQoFQ291bnQYAiAB", 
          "KAUiEwoRRmFybV9HYW1lX3BheV9BbnciSwoeRmFybV9HYW1lX1NpbmdsZUZy", 
          "aWVuZEluZm9fUmVxEhIKClVzZXJHYW1lSUQYASABKAUSFQoNVmlzaXRlZEdh", 
          "bWVJRBgCIAEoBSJyCh5GYXJtX0dhbWVfU2luZ2xlRnJpZW5kSW5mb19BbncS", 
          "LwoOT25lX0ZyaWVuZEluZm8YASABKAsyFy5GYXJtX0dhbWVfVXNlckluZm9f", 
          "QW53Eh8KCG1hcEFycmF5GAIgAygLMg0uUE1zZ19NYXBVbml0ImIKGEZhcm1f", 
          "R2FtZV9PaWRVcGdyYWRlX1JlcRISCgpVc2VyR2FtZUlEGAEgASgFEhEKCVBy", 
          "b2R1Y2VJRBgCIAEoBRIOCgZOdW1iZXIYAyABKAUSDwoHUGF0dGVybhgEIAEo", 
          "BSIaChhGYXJtX0dhbWVfT2lsVXBncmFkZV9BbnciQAoXRmFybV9HYW1lX0Fk", 
          "ZEZyaWVuZF9SZXESEgoKVXNlckdhbWVJRBgBIAEoBRIRCglBZGRHYW1lSUQY", 
          "AiABKAUiKAoSRmFybV9HYW1lX1NpZ25fUmVxEhIKClVzZXJHYW1lSUQYASAB", 
          "KAUiFAoSRmFybV9HYW1lX1NpZ25fQXduIk8KF0Zhcm1fR2FtZV9Eb2dVcGdy", 
          "YWRfUmVxEhAKCERvZ0xldmVsGAEgASgFEhIKCkN1cnJlbnRFWFAYAiABKAUS", 
          "DgoGTWF4RVhQGAMgASgFIj0KFUZhcm1fR2FtZV9SZUNsYWltX1JlcRIQCghG", 
          "aWVsZHNJRBgBIAEoBRISCgpVc2VyR2FtZUlEGAIgASgFIikKFUZhcm1fR2Ft", 
          "ZV9SZUNsYWltX0FudxIQCghGaWVsZHNJRBgCIAEoBSJYCiNGYXJtX0dhbWVf", 
          "U2NhblFSY29kZU9yUmVjb21tYW5kX1JlcRISCgpVc2VyR2FtZUlEGAEgASgF", 
          "EgwKBEluZm8YAiABKAkSDwoHcGF0dGVybhgDIAEoBSIlCiNGYXJtX0dhbWVf", 
          "U2NhblFSY29kZU9yUmVjb21tYW5kX0FudyJRChNGYXJtX0dhbWVfQ2hhbnRf", 
          "UmVxEhIKClVzZXJHYW1lSUQYASABKAUSFQoNVmlzaXRlZEdhbWVJRBgCIAEo", 
          "BRIPCgdDb250ZW50GAMgASgJIiUKEkZhcm1fR2FtZV9DaGF0X0FudxIPCgdD", 
          "b250ZW50GAEgASgJIlYKHUZhcm1fR2FtZV9Db2luT3JFeHBDaGFuZ2VfQW53", 
          "EgwKBENvaW4YASABKAUSCwoDRVhQGAIgASgFEgoKAkxWGAMgASgFEg4KBk1h", 
          "eEVYUBgEIAEoBSIvChlGYXJtX0dhbWVfTWVzc2FnZVNlbmRfUmVxEhIKClVz", 
          "ZXJHYW1lSUQYASABKAUiPwoZRmFybV9HYW1lX01lc3NhZ2VTZW5kX0FudxIi", 
          "CgdNc2dMaXN0GAEgAygLMhEuUE1zZ19NZXNzYWdlVW5pdCI/ChZGYXJtX0dh", 
          "bWVfQWdyZWVBZGRfUmVxEhIKClVzZXJHYW1lSUQYASABKAUSEQoJQWRkR2Ft", 
          "ZUlEGAIgASgFIioKGkZhcm1fR2FtZV9TZWFyY2hGcmllbmRfUmVxEgwKBE5h", 
          "bWUYASABKAkiSQoaRmFybV9HYW1lX1NlYXJjaEZyaWVuZF9BbncSKwoKU2Vh", 
          "cmNoTGlzdBgCIAMoCzIXLkZhcm1fR2FtZV9Vc2VySW5mb19BbnciNwoVRmFy", 
          "bV9HYW1lX0NoYXRMb2dfUmVxEhAKCEZyaWVuZElEGAEgASgFEgwKBFBhZ2UY", 
          "AiABKAUiOAoVRmFybV9HYW1lX0NoYXRMb2dfQW53Eh8KCENoYXRMaXN0GAIg", 
          "AygLMg0uUE1zZ19DaGF0TG9nIigKF0Zhcm1fR2FtZV9EZWxldGVNc2dfUmVx", 
          "Eg0KBU1zZ0lkGAEgASgFIisKFUZhcm1fR2FtZV9GZWVkRG9nX1JlcRISCgpV", 
          "c2VyR2FtZUlEGAEgASgFImgKFUZhcm1fR2FtZV9GZWVkRG9nX0FudxIYChBE", 
          "b2dVcGdyYWRlTWF4RVhQGAEgASgFEhUKDURvZ0N1cnJlbnRFWFAYAiABKAUS", 
          "DgoGZG9nX2x2GAMgASgFEg4KBmNoYW5jZRgEIAEoBSInChdGYXJtX0dhbWVf", 
          "VG90YWxTZWxsX1JlcRIMCgRUeXBlGAEgASgFIiQKFUZhcm1fR2FtZV9JbmZv", 
          "TG9nX1JlcRILCgN1aWQYASABKAUiqgEKFUZhcm1fR2FtZV9JbmZvTG9nX0Fu", 
          "dxIRCglMb2dpbkluZm8YASABKAkSEwoLZXhwcmVzc0luZm8YAiABKAkSEwoL", 
          "Q29tcGFueUluZm8YAyABKAkSFAoMZXhwcmVzc01vbmV5GAQgASgFEhAKCHN0", 
          "cmF0ZWd5GAUgASgJEgwKBGluZm8YBiABKAkSDgoGb3RoZXIyGAcgASgJEg4K", 
          "Bm90aGVyMxgIIAEoCSL+AQoZRmFybV9HYW1lX09pZEV4Y2hhbmdlX1JlcRIS", 
          "CgpVc2VyR2FtZUlEGAEgASgFEg8KB1BhdHRlcm4YAiABKAUSFAoMUmVjaWV2", 
          "ZXJOYW1lGAMgASgJEhAKCFBob25lTnVtGAQgASgJEg0KBWJlYXR5GAYgASgJ", 
          "EiEKBG9ianMYByADKAsyEy5QTXNnX1N0YWdlUHJvcFVuaXQSEgoKUGF5UGF0", 
          "dGVybhgIIAEoBRIOCgZhZHJlc3MYCSABKAkSEAoIcHJvdmluY2UYCiABKAkS", 
          "DAoEY2l0eRgLIAEoCRIOCgZjb3VudHkYDCABKAkSDgoGUGluUGFpGA0gASgF", 
          "IisKGUZhcm1fR2FtZV9PaWRFeGNoYW5nZV9BbncSDgoGcmVzdWx0GAEgASgF", 
          "IjoKFUZhcm1fR2FtZV9Qb3N0YWdlX1JlcRIhCgRvYmpzGAEgAygLMhMuUE1z", 
          "Z19TdGFnZVByb3BVbml0IigKFUZhcm1fR2FtZV9Qb3N0YWdlX0FudxIPCgdQ", 
          "b3N0YWdlGAEgASgFIncKFUZhcm1fR2FtZV9QYXlTdWNjX0FudxIMCgR0eXBl", 
          "GAEgASgFEhAKCG9yZGVybnVtGAIgASgJEg0KBW1vbmV5GAMgASgJEgwKBHRp", 
          "bWUYBCABKAkSIQoEb2JqcxgFIAMoCzITLlBNc2dfU3RhZ2VQcm9wVW5pdCIa", 
          "ChhGYXJtX0dhbWVfQ2hlY2tPcmRlcl9SRVEiRwoYRmFybV9HYW1lX0NoZWNr", 
          "T3JkZXJfQW53EisKCGxpc3RJbmZvGAEgAygLMhkuRmFybV9HYW1lX0xvZ2lz", 
          "dGljc09yZGVyIpkBChhGYXJtX0dhbWVfTG9naXN0aWNzT3JkZXISFgoObG9n", 
          "aXN0aWNzT3JkZXIYASABKAkSEAoIU2VuZHRpbWUYAiABKAkSEAoIb3JkZXJu", 
          "dW0YBCABKAkSDQoFbW9uZXkYBSABKAkSIQoEb2JqcxgHIAMoCzITLlBNc2df", 
        "U3RhZ2VQcm9wVW5pdBIPCgdDb21wYW55GAYgASgJ"));
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_PMsg_StagePropUnit__Descriptor = Descriptor.MessageTypes[0];
      internal__static_PMsg_StagePropUnit__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PMsg_StagePropUnit, global::PMsg_StagePropUnit.Builder>(internal__static_PMsg_StagePropUnit__Descriptor,
              new string[] { "Id", "Count", });
      internal__static_PMsg_Plant__Descriptor = Descriptor.MessageTypes[1];
      internal__static_PMsg_Plant__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PMsg_Plant, global::PMsg_Plant.Builder>(internal__static_PMsg_Plant__Descriptor,
              new string[] { "Id", "StartTime", "IsSteal", "IsWorm", "IsGrass", "IsLessWater", });
      internal__static_PMsg_MapUnit__Descriptor = Descriptor.MessageTypes[2];
      internal__static_PMsg_MapUnit__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PMsg_MapUnit, global::PMsg_MapUnit.Builder>(internal__static_PMsg_MapUnit__Descriptor,
              new string[] { "Id", "EnablePlant", "Plant", });
      internal__static_PMsg_MessageUnit__Descriptor = Descriptor.MessageTypes[3];
      internal__static_PMsg_MessageUnit__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PMsg_MessageUnit, global::PMsg_MessageUnit.Builder>(internal__static_PMsg_MessageUnit__Descriptor,
              new string[] { "MsgID", "MsgType", "Content", "SendTime", "FromUid", "FromHead", "FromName", });
      internal__static_Shop_MessageUnit__Descriptor = Descriptor.MessageTypes[4];
      internal__static_Shop_MessageUnit__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Shop_MessageUnit, global::Shop_MessageUnit.Builder>(internal__static_Shop_MessageUnit__Descriptor,
              new string[] { "Object", "Price", });
      internal__static_PMsg_ChatLog__Descriptor = Descriptor.MessageTypes[5];
      internal__static_PMsg_ChatLog__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::PMsg_ChatLog, global::PMsg_ChatLog.Builder>(internal__static_PMsg_ChatLog__Descriptor,
              new string[] { "Uid", "Content", "SendTime", });
      internal__static_Farm_Tick_Req__Descriptor = Descriptor.MessageTypes[6];
      internal__static_Farm_Tick_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Tick_Req, global::Farm_Tick_Req.Builder>(internal__static_Farm_Tick_Req__Descriptor,
              new string[] { });
      internal__static_Farm_Tick_Anw__Descriptor = Descriptor.MessageTypes[7];
      internal__static_Farm_Tick_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Tick_Anw, global::Farm_Tick_Anw.Builder>(internal__static_Farm_Tick_Anw__Descriptor,
              new string[] { "Unixtime", });
      internal__static_Farm_CommAnswer__Descriptor = Descriptor.MessageTypes[8];
      internal__static_Farm_CommAnswer__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_CommAnswer, global::Farm_CommAnswer.Builder>(internal__static_Farm_CommAnswer__Descriptor,
              new string[] { "Content", "Result", });
      internal__static_ReqLoginSDK__Descriptor = Descriptor.MessageTypes[9];
      internal__static_ReqLoginSDK__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ReqLoginSDK, global::ReqLoginSDK.Builder>(internal__static_ReqLoginSDK__Descriptor,
              new string[] { "Account", "Password", "Platform", "Sign", "Type", "Openid", "Headimgurl", "Province", "Nickname", "City", "Sex", "Language", "Verification", });
      internal__static_ResponeLoginSDK__Descriptor = Descriptor.MessageTypes[10];
      internal__static_ResponeLoginSDK__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ResponeLoginSDK, global::ResponeLoginSDK.Builder>(internal__static_ResponeLoginSDK__Descriptor,
              new string[] { "Uid", "Token", "IsBinding", });
      internal__static_ReqLogoutSDK__Descriptor = Descriptor.MessageTypes[11];
      internal__static_ReqLogoutSDK__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ReqLogoutSDK, global::ReqLogoutSDK.Builder>(internal__static_ReqLogoutSDK__Descriptor,
              new string[] { });
      internal__static_ReqLogin__Descriptor = Descriptor.MessageTypes[12];
      internal__static_ReqLogin__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ReqLogin, global::ReqLogin.Builder>(internal__static_ReqLogin__Descriptor,
              new string[] { "Uid", "Token", });
      internal__static_ResponeLogin__Descriptor = Descriptor.MessageTypes[13];
      internal__static_ResponeLogin__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ResponeLogin, global::ResponeLogin.Builder>(internal__static_ResponeLogin__Descriptor,
              new string[] { "Uid", "Username", "Head", "Lv", "Exp", "LevelMaxExp", "Oil", "DogLv", "MapArray", "AwardInfos", "ContinueDays", "Gold", "DogUpgradeMaxEXP", "DogCurrentEXP", "Chance", "Account", "InvitationCode", "IsPayForAPP", });
      internal__static_SignRewardUnit__Descriptor = Descriptor.MessageTypes[14];
      internal__static_SignRewardUnit__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::SignRewardUnit, global::SignRewardUnit.Builder>(internal__static_SignRewardUnit__Descriptor,
              new string[] { "Coid", "Award", });
      internal__static_ReqReLogin__Descriptor = Descriptor.MessageTypes[15];
      internal__static_ReqReLogin__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ReqReLogin, global::ReqReLogin.Builder>(internal__static_ReqReLogin__Descriptor,
              new string[] { "Uid", "Token", });
      internal__static_Farm_Game_Register_Req__Descriptor = Descriptor.MessageTypes[16];
      internal__static_Farm_Game_Register_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Register_Req, global::Farm_Game_Register_Req.Builder>(internal__static_Farm_Game_Register_Req__Descriptor,
              new string[] { "PhoneNum", "VeriCode", "Password", "Pattern", "BeRecommandedCode", });
      internal__static_Farm_Game_VeriCode_Req__Descriptor = Descriptor.MessageTypes[17];
      internal__static_Farm_Game_VeriCode_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_VeriCode_Req, global::Farm_Game_VeriCode_Req.Builder>(internal__static_Farm_Game_VeriCode_Req__Descriptor,
              new string[] { "PhoneNum", });
      internal__static_Farm_Game_UserInfo_Req__Descriptor = Descriptor.MessageTypes[18];
      internal__static_Farm_Game_UserInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_UserInfo_Req, global::Farm_Game_UserInfo_Req.Builder>(internal__static_Farm_Game_UserInfo_Req__Descriptor,
              new string[] { "Uid", });
      internal__static_Farm_Game_UserInfo_Anw__Descriptor = Descriptor.MessageTypes[19];
      internal__static_Farm_Game_UserInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_UserInfo_Anw, global::Farm_Game_UserInfo_Anw.Builder>(internal__static_Farm_Game_UserInfo_Anw__Descriptor,
              new string[] { "UserGameID", "GameName", "HeaderIcon", "GameMoney", "UserLevel", "RecommondCode", "UserExp", "LevelMaxExp", "Url", "Rank", "Account", "Aciton", "DogUpgradeMaxEXP", "DogCurrentEXP", "DogLv", });
      internal__static_Farm_Game_MapInfo_Req__Descriptor = Descriptor.MessageTypes[20];
      internal__static_Farm_Game_MapInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MapInfo_Req, global::Farm_Game_MapInfo_Req.Builder>(internal__static_Farm_Game_MapInfo_Req__Descriptor,
              new string[] { "UserGameID", });
      internal__static_Farm_Game_MapInfo_Anw__Descriptor = Descriptor.MessageTypes[21];
      internal__static_Farm_Game_MapInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MapInfo_Anw, global::Farm_Game_MapInfo_Anw.Builder>(internal__static_Farm_Game_MapInfo_Anw__Descriptor,
              new string[] { "MapArray", });
      internal__static_Farm_Game_NewUser_Req__Descriptor = Descriptor.MessageTypes[22];
      internal__static_Farm_Game_NewUser_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_NewUser_Req, global::Farm_Game_NewUser_Req.Builder>(internal__static_Farm_Game_NewUser_Req__Descriptor,
              new string[] { "GameName", "Sex", "HeaderIcon", });
      internal__static_Farm_Game_NewUser_Anw__Descriptor = Descriptor.MessageTypes[23];
      internal__static_Farm_Game_NewUser_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_NewUser_Anw, global::Farm_Game_NewUser_Anw.Builder>(internal__static_Farm_Game_NewUser_Anw__Descriptor,
              new string[] { "CreateResult", "UserGameID", });
      internal__static_Farm_Game_RankInfo_Req__Descriptor = Descriptor.MessageTypes[24];
      internal__static_Farm_Game_RankInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_RankInfo_Req, global::Farm_Game_RankInfo_Req.Builder>(internal__static_Farm_Game_RankInfo_Req__Descriptor,
              new string[] { "UserGameID", "CurrentPage", });
      internal__static_Farm_Game_RankInfo_Anw__Descriptor = Descriptor.MessageTypes[25];
      internal__static_Farm_Game_RankInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_RankInfo_Anw, global::Farm_Game_RankInfo_Anw.Builder>(internal__static_Farm_Game_RankInfo_Anw__Descriptor,
              new string[] { "UserInfos", });
      internal__static_Farm_Game_StoreInfo_Req__Descriptor = Descriptor.MessageTypes[26];
      internal__static_Farm_Game_StoreInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_StoreInfo_Req, global::Farm_Game_StoreInfo_Req.Builder>(internal__static_Farm_Game_StoreInfo_Req__Descriptor,
              new string[] { "UserGameID", });
      internal__static_Farm_Game_StoreInfo_Anw__Descriptor = Descriptor.MessageTypes[27];
      internal__static_Farm_Game_StoreInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_StoreInfo_Anw, global::Farm_Game_StoreInfo_Anw.Builder>(internal__static_Farm_Game_StoreInfo_Anw__Descriptor,
              new string[] { "SuArray", });
      internal__static_Farm_Game_FriendsInfo_Req__Descriptor = Descriptor.MessageTypes[28];
      internal__static_Farm_Game_FriendsInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FriendsInfo_Req, global::Farm_Game_FriendsInfo_Req.Builder>(internal__static_Farm_Game_FriendsInfo_Req__Descriptor,
              new string[] { "UserGameID", "CurrentPage", });
      internal__static_Farm_Game_FriendsInfo_Anw__Descriptor = Descriptor.MessageTypes[29];
      internal__static_Farm_Game_FriendsInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FriendsInfo_Anw, global::Farm_Game_FriendsInfo_Anw.Builder>(internal__static_Farm_Game_FriendsInfo_Anw__Descriptor,
              new string[] { "Info", });
      internal__static_Farm_Game_ShopInfo_Req__Descriptor = Descriptor.MessageTypes[30];
      internal__static_Farm_Game_ShopInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ShopInfo_Req, global::Farm_Game_ShopInfo_Req.Builder>(internal__static_Farm_Game_ShopInfo_Req__Descriptor,
              new string[] { "UserGameID", });
      internal__static_Farm_Game_ShopInfo_Anw__Descriptor = Descriptor.MessageTypes[31];
      internal__static_Farm_Game_ShopInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ShopInfo_Anw, global::Farm_Game_ShopInfo_Anw.Builder>(internal__static_Farm_Game_ShopInfo_Anw__Descriptor,
              new string[] { "Objects", });
      internal__static_Farm_Game_AnnouncementInfo_Req__Descriptor = Descriptor.MessageTypes[32];
      internal__static_Farm_Game_AnnouncementInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AnnouncementInfo_Req, global::Farm_Game_AnnouncementInfo_Req.Builder>(internal__static_Farm_Game_AnnouncementInfo_Req__Descriptor,
              new string[] { "UserGameID", "Token", });
      internal__static_Farm_Game_AnnouncementInfo_Anw__Descriptor = Descriptor.MessageTypes[33];
      internal__static_Farm_Game_AnnouncementInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AnnouncementInfo_Anw, global::Farm_Game_AnnouncementInfo_Anw.Builder>(internal__static_Farm_Game_AnnouncementInfo_Anw__Descriptor,
              new string[] { "Announcement", "VersionNum", "IsUpdate", "Url", });
      internal__static_Farm_Game_Store_Update__Descriptor = Descriptor.MessageTypes[34];
      internal__static_Farm_Game_Store_Update__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Store_Update, global::Farm_Game_Store_Update.Builder>(internal__static_Farm_Game_Store_Update__Descriptor,
              new string[] { "Objects", });
      internal__static_Farm_Game_Action_Fandi_Req__Descriptor = Descriptor.MessageTypes[35];
      internal__static_Farm_Game_Action_Fandi_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Fandi_Req, global::Farm_Game_Action_Fandi_Req.Builder>(internal__static_Farm_Game_Action_Fandi_Req__Descriptor,
              new string[] { "UserGameID", "FieldsID", });
      internal__static_Farm_Game_Action_Fandi_Anw__Descriptor = Descriptor.MessageTypes[36];
      internal__static_Farm_Game_Action_Fandi_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Fandi_Anw, global::Farm_Game_Action_Fandi_Anw.Builder>(internal__static_Farm_Game_Action_Fandi_Anw__Descriptor,
              new string[] { "FieldsID", });
      internal__static_Farm_Game_Seed_Req__Descriptor = Descriptor.MessageTypes[37];
      internal__static_Farm_Game_Seed_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Seed_Req, global::Farm_Game_Seed_Req.Builder>(internal__static_Farm_Game_Seed_Req__Descriptor,
              new string[] { "UserGameID", "FieldsID", "SeedID", });
      internal__static_Farm_Game_Seed_Anw__Descriptor = Descriptor.MessageTypes[38];
      internal__static_Farm_Game_Seed_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Seed_Anw, global::Farm_Game_Seed_Anw.Builder>(internal__static_Farm_Game_Seed_Anw__Descriptor,
              new string[] { "Info", });
      internal__static_Farm_Game_Action_WF_Req__Descriptor = Descriptor.MessageTypes[39];
      internal__static_Farm_Game_Action_WF_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_WF_Req, global::Farm_Game_Action_WF_Req.Builder>(internal__static_Farm_Game_Action_WF_Req__Descriptor,
              new string[] { "UserGameID", "FieldsID", "ActionID", "FertilizersID", });
      internal__static_Farm_Game_Action_WF_Anw__Descriptor = Descriptor.MessageTypes[40];
      internal__static_Farm_Game_Action_WF_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_WF_Anw, global::Farm_Game_Action_WF_Anw.Builder>(internal__static_Farm_Game_Action_WF_Anw__Descriptor,
              new string[] { "FieldsID", "ActionID", });
      internal__static_Farm_Game_Action_Pluck_Req__Descriptor = Descriptor.MessageTypes[41];
      internal__static_Farm_Game_Action_Pluck_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Pluck_Req, global::Farm_Game_Action_Pluck_Req.Builder>(internal__static_Farm_Game_Action_Pluck_Req__Descriptor,
              new string[] { "UserGameID", "FieldsID", "VisitedGameID", });
      internal__static_Farm_Game_Action_Pluck_Anw__Descriptor = Descriptor.MessageTypes[42];
      internal__static_Farm_Game_Action_Pluck_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Pluck_Anw, global::Farm_Game_Action_Pluck_Anw.Builder>(internal__static_Farm_Game_Action_Pluck_Anw__Descriptor,
              new string[] { "Array", });
      internal__static_Farm_Game_Action_Anw__Descriptor = Descriptor.MessageTypes[43];
      internal__static_Farm_Game_Action_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Action_Anw, global::Farm_Game_Action_Anw.Builder>(internal__static_Farm_Game_Action_Anw__Descriptor,
              new string[] { "FieldsID", "ActionID", });
      internal__static_Farm_Game_buyOrSell_Req__Descriptor = Descriptor.MessageTypes[44];
      internal__static_Farm_Game_buyOrSell_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_buyOrSell_Req, global::Farm_Game_buyOrSell_Req.Builder>(internal__static_Farm_Game_buyOrSell_Req__Descriptor,
              new string[] { "UserGameID", "ShoppingItemID", "Count", "BuyOrSell", });
      internal__static_Farm_Game_buyOrSell_Anw__Descriptor = Descriptor.MessageTypes[45];
      internal__static_Farm_Game_buyOrSell_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_buyOrSell_Anw, global::Farm_Game_buyOrSell_Anw.Builder>(internal__static_Farm_Game_buyOrSell_Anw__Descriptor,
              new string[] { });
      internal__static_Farm_Game_pay_Req__Descriptor = Descriptor.MessageTypes[46];
      internal__static_Farm_Game_pay_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_pay_Req, global::Farm_Game_pay_Req.Builder>(internal__static_Farm_Game_pay_Req__Descriptor,
              new string[] { "UserGameID", "Count", });
      internal__static_Farm_Game_pay_Anw__Descriptor = Descriptor.MessageTypes[47];
      internal__static_Farm_Game_pay_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_pay_Anw, global::Farm_Game_pay_Anw.Builder>(internal__static_Farm_Game_pay_Anw__Descriptor,
              new string[] { });
      internal__static_Farm_Game_SingleFriendInfo_Req__Descriptor = Descriptor.MessageTypes[48];
      internal__static_Farm_Game_SingleFriendInfo_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SingleFriendInfo_Req, global::Farm_Game_SingleFriendInfo_Req.Builder>(internal__static_Farm_Game_SingleFriendInfo_Req__Descriptor,
              new string[] { "UserGameID", "VisitedGameID", });
      internal__static_Farm_Game_SingleFriendInfo_Anw__Descriptor = Descriptor.MessageTypes[49];
      internal__static_Farm_Game_SingleFriendInfo_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SingleFriendInfo_Anw, global::Farm_Game_SingleFriendInfo_Anw.Builder>(internal__static_Farm_Game_SingleFriendInfo_Anw__Descriptor,
              new string[] { "OneFriendInfo", "MapArray", });
      internal__static_Farm_Game_OidUpgrade_Req__Descriptor = Descriptor.MessageTypes[50];
      internal__static_Farm_Game_OidUpgrade_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OidUpgrade_Req, global::Farm_Game_OidUpgrade_Req.Builder>(internal__static_Farm_Game_OidUpgrade_Req__Descriptor,
              new string[] { "UserGameID", "ProduceID", "Number", "Pattern", });
      internal__static_Farm_Game_OilUpgrade_Anw__Descriptor = Descriptor.MessageTypes[51];
      internal__static_Farm_Game_OilUpgrade_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OilUpgrade_Anw, global::Farm_Game_OilUpgrade_Anw.Builder>(internal__static_Farm_Game_OilUpgrade_Anw__Descriptor,
              new string[] { });
      internal__static_Farm_Game_AddFriend_Req__Descriptor = Descriptor.MessageTypes[52];
      internal__static_Farm_Game_AddFriend_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AddFriend_Req, global::Farm_Game_AddFriend_Req.Builder>(internal__static_Farm_Game_AddFriend_Req__Descriptor,
              new string[] { "UserGameID", "AddGameID", });
      internal__static_Farm_Game_Sign_Req__Descriptor = Descriptor.MessageTypes[53];
      internal__static_Farm_Game_Sign_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Sign_Req, global::Farm_Game_Sign_Req.Builder>(internal__static_Farm_Game_Sign_Req__Descriptor,
              new string[] { "UserGameID", });
      internal__static_Farm_Game_Sign_Awn__Descriptor = Descriptor.MessageTypes[54];
      internal__static_Farm_Game_Sign_Awn__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Sign_Awn, global::Farm_Game_Sign_Awn.Builder>(internal__static_Farm_Game_Sign_Awn__Descriptor,
              new string[] { });
      internal__static_Farm_Game_DogUpgrad_Req__Descriptor = Descriptor.MessageTypes[55];
      internal__static_Farm_Game_DogUpgrad_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_DogUpgrad_Req, global::Farm_Game_DogUpgrad_Req.Builder>(internal__static_Farm_Game_DogUpgrad_Req__Descriptor,
              new string[] { "DogLevel", "CurrentEXP", "MaxEXP", });
      internal__static_Farm_Game_ReClaim_Req__Descriptor = Descriptor.MessageTypes[56];
      internal__static_Farm_Game_ReClaim_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ReClaim_Req, global::Farm_Game_ReClaim_Req.Builder>(internal__static_Farm_Game_ReClaim_Req__Descriptor,
              new string[] { "FieldsID", "UserGameID", });
      internal__static_Farm_Game_ReClaim_Anw__Descriptor = Descriptor.MessageTypes[57];
      internal__static_Farm_Game_ReClaim_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ReClaim_Anw, global::Farm_Game_ReClaim_Anw.Builder>(internal__static_Farm_Game_ReClaim_Anw__Descriptor,
              new string[] { "FieldsID", });
      internal__static_Farm_Game_ScanQRcodeOrRecommand_Req__Descriptor = Descriptor.MessageTypes[58];
      internal__static_Farm_Game_ScanQRcodeOrRecommand_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ScanQRcodeOrRecommand_Req, global::Farm_Game_ScanQRcodeOrRecommand_Req.Builder>(internal__static_Farm_Game_ScanQRcodeOrRecommand_Req__Descriptor,
              new string[] { "UserGameID", "Info", "Pattern", });
      internal__static_Farm_Game_ScanQRcodeOrRecommand_Anw__Descriptor = Descriptor.MessageTypes[59];
      internal__static_Farm_Game_ScanQRcodeOrRecommand_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ScanQRcodeOrRecommand_Anw, global::Farm_Game_ScanQRcodeOrRecommand_Anw.Builder>(internal__static_Farm_Game_ScanQRcodeOrRecommand_Anw__Descriptor,
              new string[] { });
      internal__static_Farm_Game_Chant_Req__Descriptor = Descriptor.MessageTypes[60];
      internal__static_Farm_Game_Chant_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Chant_Req, global::Farm_Game_Chant_Req.Builder>(internal__static_Farm_Game_Chant_Req__Descriptor,
              new string[] { "UserGameID", "VisitedGameID", "Content", });
      internal__static_Farm_Game_Chat_Anw__Descriptor = Descriptor.MessageTypes[61];
      internal__static_Farm_Game_Chat_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Chat_Anw, global::Farm_Game_Chat_Anw.Builder>(internal__static_Farm_Game_Chat_Anw__Descriptor,
              new string[] { "Content", });
      internal__static_Farm_Game_CoinOrExpChange_Anw__Descriptor = Descriptor.MessageTypes[62];
      internal__static_Farm_Game_CoinOrExpChange_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_CoinOrExpChange_Anw, global::Farm_Game_CoinOrExpChange_Anw.Builder>(internal__static_Farm_Game_CoinOrExpChange_Anw__Descriptor,
              new string[] { "Coin", "EXP", "LV", "MaxEXP", });
      internal__static_Farm_Game_MessageSend_Req__Descriptor = Descriptor.MessageTypes[63];
      internal__static_Farm_Game_MessageSend_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MessageSend_Req, global::Farm_Game_MessageSend_Req.Builder>(internal__static_Farm_Game_MessageSend_Req__Descriptor,
              new string[] { "UserGameID", });
      internal__static_Farm_Game_MessageSend_Anw__Descriptor = Descriptor.MessageTypes[64];
      internal__static_Farm_Game_MessageSend_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_MessageSend_Anw, global::Farm_Game_MessageSend_Anw.Builder>(internal__static_Farm_Game_MessageSend_Anw__Descriptor,
              new string[] { "MsgList", });
      internal__static_Farm_Game_AgreeAdd_Req__Descriptor = Descriptor.MessageTypes[65];
      internal__static_Farm_Game_AgreeAdd_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_AgreeAdd_Req, global::Farm_Game_AgreeAdd_Req.Builder>(internal__static_Farm_Game_AgreeAdd_Req__Descriptor,
              new string[] { "UserGameID", "AddGameID", });
      internal__static_Farm_Game_SearchFriend_Req__Descriptor = Descriptor.MessageTypes[66];
      internal__static_Farm_Game_SearchFriend_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SearchFriend_Req, global::Farm_Game_SearchFriend_Req.Builder>(internal__static_Farm_Game_SearchFriend_Req__Descriptor,
              new string[] { "Name", });
      internal__static_Farm_Game_SearchFriend_Anw__Descriptor = Descriptor.MessageTypes[67];
      internal__static_Farm_Game_SearchFriend_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_SearchFriend_Anw, global::Farm_Game_SearchFriend_Anw.Builder>(internal__static_Farm_Game_SearchFriend_Anw__Descriptor,
              new string[] { "SearchList", });
      internal__static_Farm_Game_ChatLog_Req__Descriptor = Descriptor.MessageTypes[68];
      internal__static_Farm_Game_ChatLog_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ChatLog_Req, global::Farm_Game_ChatLog_Req.Builder>(internal__static_Farm_Game_ChatLog_Req__Descriptor,
              new string[] { "FriendID", "Page", });
      internal__static_Farm_Game_ChatLog_Anw__Descriptor = Descriptor.MessageTypes[69];
      internal__static_Farm_Game_ChatLog_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_ChatLog_Anw, global::Farm_Game_ChatLog_Anw.Builder>(internal__static_Farm_Game_ChatLog_Anw__Descriptor,
              new string[] { "ChatList", });
      internal__static_Farm_Game_DeleteMsg_Req__Descriptor = Descriptor.MessageTypes[70];
      internal__static_Farm_Game_DeleteMsg_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_DeleteMsg_Req, global::Farm_Game_DeleteMsg_Req.Builder>(internal__static_Farm_Game_DeleteMsg_Req__Descriptor,
              new string[] { "MsgId", });
      internal__static_Farm_Game_FeedDog_Req__Descriptor = Descriptor.MessageTypes[71];
      internal__static_Farm_Game_FeedDog_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FeedDog_Req, global::Farm_Game_FeedDog_Req.Builder>(internal__static_Farm_Game_FeedDog_Req__Descriptor,
              new string[] { "UserGameID", });
      internal__static_Farm_Game_FeedDog_Anw__Descriptor = Descriptor.MessageTypes[72];
      internal__static_Farm_Game_FeedDog_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_FeedDog_Anw, global::Farm_Game_FeedDog_Anw.Builder>(internal__static_Farm_Game_FeedDog_Anw__Descriptor,
              new string[] { "DogUpgradeMaxEXP", "DogCurrentEXP", "DogLv", "Chance", });
      internal__static_Farm_Game_TotalSell_Req__Descriptor = Descriptor.MessageTypes[73];
      internal__static_Farm_Game_TotalSell_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_TotalSell_Req, global::Farm_Game_TotalSell_Req.Builder>(internal__static_Farm_Game_TotalSell_Req__Descriptor,
              new string[] { "Type", });
      internal__static_Farm_Game_InfoLog_Req__Descriptor = Descriptor.MessageTypes[74];
      internal__static_Farm_Game_InfoLog_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_InfoLog_Req, global::Farm_Game_InfoLog_Req.Builder>(internal__static_Farm_Game_InfoLog_Req__Descriptor,
              new string[] { "Uid", });
      internal__static_Farm_Game_InfoLog_Anw__Descriptor = Descriptor.MessageTypes[75];
      internal__static_Farm_Game_InfoLog_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_InfoLog_Anw, global::Farm_Game_InfoLog_Anw.Builder>(internal__static_Farm_Game_InfoLog_Anw__Descriptor,
              new string[] { "LoginInfo", "ExpressInfo", "CompanyInfo", "ExpressMoney", "Strategy", "Info", "Other2", "Other3", });
      internal__static_Farm_Game_OidExchange_Req__Descriptor = Descriptor.MessageTypes[76];
      internal__static_Farm_Game_OidExchange_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OidExchange_Req, global::Farm_Game_OidExchange_Req.Builder>(internal__static_Farm_Game_OidExchange_Req__Descriptor,
              new string[] { "UserGameID", "Pattern", "RecieverName", "PhoneNum", "Beaty", "Objs", "PayPattern", "Adress", "Province", "City", "County", "PinPai", });
      internal__static_Farm_Game_OidExchange_Anw__Descriptor = Descriptor.MessageTypes[77];
      internal__static_Farm_Game_OidExchange_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_OidExchange_Anw, global::Farm_Game_OidExchange_Anw.Builder>(internal__static_Farm_Game_OidExchange_Anw__Descriptor,
              new string[] { "Result", });
      internal__static_Farm_Game_Postage_Req__Descriptor = Descriptor.MessageTypes[78];
      internal__static_Farm_Game_Postage_Req__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Postage_Req, global::Farm_Game_Postage_Req.Builder>(internal__static_Farm_Game_Postage_Req__Descriptor,
              new string[] { "Objs", });
      internal__static_Farm_Game_Postage_Anw__Descriptor = Descriptor.MessageTypes[79];
      internal__static_Farm_Game_Postage_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_Postage_Anw, global::Farm_Game_Postage_Anw.Builder>(internal__static_Farm_Game_Postage_Anw__Descriptor,
              new string[] { "Postage", });
      internal__static_Farm_Game_PaySucc_Anw__Descriptor = Descriptor.MessageTypes[80];
      internal__static_Farm_Game_PaySucc_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_PaySucc_Anw, global::Farm_Game_PaySucc_Anw.Builder>(internal__static_Farm_Game_PaySucc_Anw__Descriptor,
              new string[] { "Type", "Ordernum", "Money", "Time", "Objs", });
      internal__static_Farm_Game_CheckOrder_REQ__Descriptor = Descriptor.MessageTypes[81];
      internal__static_Farm_Game_CheckOrder_REQ__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_CheckOrder_REQ, global::Farm_Game_CheckOrder_REQ.Builder>(internal__static_Farm_Game_CheckOrder_REQ__Descriptor,
              new string[] { });
      internal__static_Farm_Game_CheckOrder_Anw__Descriptor = Descriptor.MessageTypes[82];
      internal__static_Farm_Game_CheckOrder_Anw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_CheckOrder_Anw, global::Farm_Game_CheckOrder_Anw.Builder>(internal__static_Farm_Game_CheckOrder_Anw__Descriptor,
              new string[] { "ListInfo", });
      internal__static_Farm_Game_LogisticsOrder__Descriptor = Descriptor.MessageTypes[83];
      internal__static_Farm_Game_LogisticsOrder__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::Farm_Game_LogisticsOrder, global::Farm_Game_LogisticsOrder.Builder>(internal__static_Farm_Game_LogisticsOrder__Descriptor,
              new string[] { "LogisticsOrder", "Sendtime", "Ordernum", "Money", "Objs", "Company", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class PMsg_StagePropUnit : pb::GeneratedMessage<PMsg_StagePropUnit, PMsg_StagePropUnit.Builder> {
  private PMsg_StagePropUnit() { }
  private static readonly PMsg_StagePropUnit defaultInstance = new PMsg_StagePropUnit().MakeReadOnly();
  private static readonly string[] _pMsgStagePropUnitFieldNames = new string[] { "count", "id" };
  private static readonly uint[] _pMsgStagePropUnitFieldTags = new uint[] { 24, 16 };
  public static PMsg_StagePropUnit DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PMsg_StagePropUnit DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PMsg_StagePropUnit ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_PMsg_StagePropUnit__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PMsg_StagePropUnit, PMsg_StagePropUnit.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_PMsg_StagePropUnit__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 2;
  private bool hasId;
  private int id_;
  public bool HasId {
    get { return hasId; }
  }
  public int Id {
    get { return id_; }
  }
  
  public const int CountFieldNumber = 3;
  private bool hasCount;
  private int count_;
  public bool HasCount {
    get { return hasCount; }
  }
  public int Count {
    get { return count_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _pMsgStagePropUnitFieldNames;
    if (hasId) {
      output.WriteInt32(2, field_names[1], Id);
    }
    if (hasCount) {
      output.WriteInt32(3, field_names[0], Count);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasId) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Id);
    }
    if (hasCount) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, Count);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PMsg_StagePropUnit ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_StagePropUnit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PMsg_StagePropUnit MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PMsg_StagePropUnit prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PMsg_StagePropUnit, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PMsg_StagePropUnit cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PMsg_StagePropUnit result;
    
    private PMsg_StagePropUnit PrepareBuilder() {
      if (resultIsReadOnly) {
        PMsg_StagePropUnit original = result;
        result = new PMsg_StagePropUnit();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PMsg_StagePropUnit MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PMsg_StagePropUnit.Descriptor; }
    }
    
    public override PMsg_StagePropUnit DefaultInstanceForType {
      get { return global::PMsg_StagePropUnit.DefaultInstance; }
    }
    
    public override PMsg_StagePropUnit BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PMsg_StagePropUnit) {
        return MergeFrom((PMsg_StagePropUnit) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PMsg_StagePropUnit other) {
      if (other == global::PMsg_StagePropUnit.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_pMsgStagePropUnitFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _pMsgStagePropUnitFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 16: {
            result.hasId = input.ReadInt32(ref result.id_);
            break;
          }
          case 24: {
            result.hasCount = input.ReadInt32(ref result.count_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    public int Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(int value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasCount {
      get { return result.hasCount; }
    }
    public int Count {
      get { return result.Count; }
      set { SetCount(value); }
    }
    public Builder SetCount(int value) {
      PrepareBuilder();
      result.hasCount = true;
      result.count_ = value;
      return this;
    }
    public Builder ClearCount() {
      PrepareBuilder();
      result.hasCount = false;
      result.count_ = 0;
      return this;
    }
  }
  static PMsg_StagePropUnit() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class PMsg_Plant : pb::GeneratedMessage<PMsg_Plant, PMsg_Plant.Builder> {
  private PMsg_Plant() { }
  private static readonly PMsg_Plant defaultInstance = new PMsg_Plant().MakeReadOnly();
  private static readonly string[] _pMsgPlantFieldNames = new string[] { "id", "isGrass", "isLessWater", "isSteal", "isWorm", "startTime" };
  private static readonly uint[] _pMsgPlantFieldTags = new uint[] { 32, 80, 88, 48, 72, 40 };
  public static PMsg_Plant DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PMsg_Plant DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PMsg_Plant ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_PMsg_Plant__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PMsg_Plant, PMsg_Plant.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_PMsg_Plant__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 4;
  private bool hasId;
  private int id_;
  public bool HasId {
    get { return hasId; }
  }
  public int Id {
    get { return id_; }
  }
  
  public const int StartTimeFieldNumber = 5;
  private bool hasStartTime;
  private int startTime_;
  public bool HasStartTime {
    get { return hasStartTime; }
  }
  public int StartTime {
    get { return startTime_; }
  }
  
  public const int IsStealFieldNumber = 6;
  private bool hasIsSteal;
  private int isSteal_;
  public bool HasIsSteal {
    get { return hasIsSteal; }
  }
  public int IsSteal {
    get { return isSteal_; }
  }
  
  public const int IsWormFieldNumber = 9;
  private bool hasIsWorm;
  private int isWorm_;
  public bool HasIsWorm {
    get { return hasIsWorm; }
  }
  public int IsWorm {
    get { return isWorm_; }
  }
  
  public const int IsGrassFieldNumber = 10;
  private bool hasIsGrass;
  private int isGrass_;
  public bool HasIsGrass {
    get { return hasIsGrass; }
  }
  public int IsGrass {
    get { return isGrass_; }
  }
  
  public const int IsLessWaterFieldNumber = 11;
  private bool hasIsLessWater;
  private int isLessWater_;
  public bool HasIsLessWater {
    get { return hasIsLessWater; }
  }
  public int IsLessWater {
    get { return isLessWater_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasIsLessWater) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _pMsgPlantFieldNames;
    if (hasId) {
      output.WriteInt32(4, field_names[0], Id);
    }
    if (hasStartTime) {
      output.WriteInt32(5, field_names[5], StartTime);
    }
    if (hasIsSteal) {
      output.WriteInt32(6, field_names[3], IsSteal);
    }
    if (hasIsWorm) {
      output.WriteInt32(9, field_names[4], IsWorm);
    }
    if (hasIsGrass) {
      output.WriteInt32(10, field_names[1], IsGrass);
    }
    if (hasIsLessWater) {
      output.WriteInt32(11, field_names[2], IsLessWater);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasId) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, Id);
    }
    if (hasStartTime) {
      size += pb::CodedOutputStream.ComputeInt32Size(5, StartTime);
    }
    if (hasIsSteal) {
      size += pb::CodedOutputStream.ComputeInt32Size(6, IsSteal);
    }
    if (hasIsWorm) {
      size += pb::CodedOutputStream.ComputeInt32Size(9, IsWorm);
    }
    if (hasIsGrass) {
      size += pb::CodedOutputStream.ComputeInt32Size(10, IsGrass);
    }
    if (hasIsLessWater) {
      size += pb::CodedOutputStream.ComputeInt32Size(11, IsLessWater);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PMsg_Plant ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_Plant ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_Plant ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_Plant ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_Plant ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_Plant ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PMsg_Plant ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PMsg_Plant ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PMsg_Plant ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_Plant ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PMsg_Plant MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PMsg_Plant prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PMsg_Plant, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PMsg_Plant cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PMsg_Plant result;
    
    private PMsg_Plant PrepareBuilder() {
      if (resultIsReadOnly) {
        PMsg_Plant original = result;
        result = new PMsg_Plant();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PMsg_Plant MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PMsg_Plant.Descriptor; }
    }
    
    public override PMsg_Plant DefaultInstanceForType {
      get { return global::PMsg_Plant.DefaultInstance; }
    }
    
    public override PMsg_Plant BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PMsg_Plant) {
        return MergeFrom((PMsg_Plant) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PMsg_Plant other) {
      if (other == global::PMsg_Plant.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasStartTime) {
        StartTime = other.StartTime;
      }
      if (other.HasIsSteal) {
        IsSteal = other.IsSteal;
      }
      if (other.HasIsWorm) {
        IsWorm = other.IsWorm;
      }
      if (other.HasIsGrass) {
        IsGrass = other.IsGrass;
      }
      if (other.HasIsLessWater) {
        IsLessWater = other.IsLessWater;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_pMsgPlantFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _pMsgPlantFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 32: {
            result.hasId = input.ReadInt32(ref result.id_);
            break;
          }
          case 40: {
            result.hasStartTime = input.ReadInt32(ref result.startTime_);
            break;
          }
          case 48: {
            result.hasIsSteal = input.ReadInt32(ref result.isSteal_);
            break;
          }
          case 72: {
            result.hasIsWorm = input.ReadInt32(ref result.isWorm_);
            break;
          }
          case 80: {
            result.hasIsGrass = input.ReadInt32(ref result.isGrass_);
            break;
          }
          case 88: {
            result.hasIsLessWater = input.ReadInt32(ref result.isLessWater_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    public int Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(int value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasStartTime {
      get { return result.hasStartTime; }
    }
    public int StartTime {
      get { return result.StartTime; }
      set { SetStartTime(value); }
    }
    public Builder SetStartTime(int value) {
      PrepareBuilder();
      result.hasStartTime = true;
      result.startTime_ = value;
      return this;
    }
    public Builder ClearStartTime() {
      PrepareBuilder();
      result.hasStartTime = false;
      result.startTime_ = 0;
      return this;
    }
    
    public bool HasIsSteal {
      get { return result.hasIsSteal; }
    }
    public int IsSteal {
      get { return result.IsSteal; }
      set { SetIsSteal(value); }
    }
    public Builder SetIsSteal(int value) {
      PrepareBuilder();
      result.hasIsSteal = true;
      result.isSteal_ = value;
      return this;
    }
    public Builder ClearIsSteal() {
      PrepareBuilder();
      result.hasIsSteal = false;
      result.isSteal_ = 0;
      return this;
    }
    
    public bool HasIsWorm {
      get { return result.hasIsWorm; }
    }
    public int IsWorm {
      get { return result.IsWorm; }
      set { SetIsWorm(value); }
    }
    public Builder SetIsWorm(int value) {
      PrepareBuilder();
      result.hasIsWorm = true;
      result.isWorm_ = value;
      return this;
    }
    public Builder ClearIsWorm() {
      PrepareBuilder();
      result.hasIsWorm = false;
      result.isWorm_ = 0;
      return this;
    }
    
    public bool HasIsGrass {
      get { return result.hasIsGrass; }
    }
    public int IsGrass {
      get { return result.IsGrass; }
      set { SetIsGrass(value); }
    }
    public Builder SetIsGrass(int value) {
      PrepareBuilder();
      result.hasIsGrass = true;
      result.isGrass_ = value;
      return this;
    }
    public Builder ClearIsGrass() {
      PrepareBuilder();
      result.hasIsGrass = false;
      result.isGrass_ = 0;
      return this;
    }
    
    public bool HasIsLessWater {
      get { return result.hasIsLessWater; }
    }
    public int IsLessWater {
      get { return result.IsLessWater; }
      set { SetIsLessWater(value); }
    }
    public Builder SetIsLessWater(int value) {
      PrepareBuilder();
      result.hasIsLessWater = true;
      result.isLessWater_ = value;
      return this;
    }
    public Builder ClearIsLessWater() {
      PrepareBuilder();
      result.hasIsLessWater = false;
      result.isLessWater_ = 0;
      return this;
    }
  }
  static PMsg_Plant() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class PMsg_MapUnit : pb::GeneratedMessage<PMsg_MapUnit, PMsg_MapUnit.Builder> {
  private PMsg_MapUnit() { }
  private static readonly PMsg_MapUnit defaultInstance = new PMsg_MapUnit().MakeReadOnly();
  private static readonly string[] _pMsgMapUnitFieldNames = new string[] { "enablePlant", "id", "plant" };
  private static readonly uint[] _pMsgMapUnitFieldTags = new uint[] { 32, 16, 66 };
  public static PMsg_MapUnit DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PMsg_MapUnit DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PMsg_MapUnit ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_PMsg_MapUnit__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PMsg_MapUnit, PMsg_MapUnit.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_PMsg_MapUnit__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 2;
  private bool hasId;
  private int id_;
  public bool HasId {
    get { return hasId; }
  }
  public int Id {
    get { return id_; }
  }
  
  public const int EnablePlantFieldNumber = 4;
  private bool hasEnablePlant;
  private int enablePlant_;
  public bool HasEnablePlant {
    get { return hasEnablePlant; }
  }
  public int EnablePlant {
    get { return enablePlant_; }
  }
  
  public const int PlantFieldNumber = 8;
  private bool hasPlant;
  private global::PMsg_Plant plant_;
  public bool HasPlant {
    get { return hasPlant; }
  }
  public global::PMsg_Plant Plant {
    get { return plant_ ?? global::PMsg_Plant.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (HasPlant) {
        if (!Plant.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _pMsgMapUnitFieldNames;
    if (hasId) {
      output.WriteInt32(2, field_names[1], Id);
    }
    if (hasEnablePlant) {
      output.WriteInt32(4, field_names[0], EnablePlant);
    }
    if (hasPlant) {
      output.WriteMessage(8, field_names[2], Plant);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasId) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Id);
    }
    if (hasEnablePlant) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, EnablePlant);
    }
    if (hasPlant) {
      size += pb::CodedOutputStream.ComputeMessageSize(8, Plant);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PMsg_MapUnit ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_MapUnit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_MapUnit ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_MapUnit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_MapUnit ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_MapUnit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PMsg_MapUnit ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PMsg_MapUnit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PMsg_MapUnit ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_MapUnit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PMsg_MapUnit MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PMsg_MapUnit prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PMsg_MapUnit, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PMsg_MapUnit cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PMsg_MapUnit result;
    
    private PMsg_MapUnit PrepareBuilder() {
      if (resultIsReadOnly) {
        PMsg_MapUnit original = result;
        result = new PMsg_MapUnit();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PMsg_MapUnit MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PMsg_MapUnit.Descriptor; }
    }
    
    public override PMsg_MapUnit DefaultInstanceForType {
      get { return global::PMsg_MapUnit.DefaultInstance; }
    }
    
    public override PMsg_MapUnit BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PMsg_MapUnit) {
        return MergeFrom((PMsg_MapUnit) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PMsg_MapUnit other) {
      if (other == global::PMsg_MapUnit.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasEnablePlant) {
        EnablePlant = other.EnablePlant;
      }
      if (other.HasPlant) {
        MergePlant(other.Plant);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_pMsgMapUnitFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _pMsgMapUnitFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 16: {
            result.hasId = input.ReadInt32(ref result.id_);
            break;
          }
          case 32: {
            result.hasEnablePlant = input.ReadInt32(ref result.enablePlant_);
            break;
          }
          case 66: {
            global::PMsg_Plant.Builder subBuilder = global::PMsg_Plant.CreateBuilder();
            if (result.hasPlant) {
              subBuilder.MergeFrom(Plant);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Plant = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    public int Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(int value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0;
      return this;
    }
    
    public bool HasEnablePlant {
      get { return result.hasEnablePlant; }
    }
    public int EnablePlant {
      get { return result.EnablePlant; }
      set { SetEnablePlant(value); }
    }
    public Builder SetEnablePlant(int value) {
      PrepareBuilder();
      result.hasEnablePlant = true;
      result.enablePlant_ = value;
      return this;
    }
    public Builder ClearEnablePlant() {
      PrepareBuilder();
      result.hasEnablePlant = false;
      result.enablePlant_ = 0;
      return this;
    }
    
    public bool HasPlant {
     get { return result.hasPlant; }
    }
    public global::PMsg_Plant Plant {
      get { return result.Plant; }
      set { SetPlant(value); }
    }
    public Builder SetPlant(global::PMsg_Plant value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPlant = true;
      result.plant_ = value;
      return this;
    }
    public Builder SetPlant(global::PMsg_Plant.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasPlant = true;
      result.plant_ = builderForValue.Build();
      return this;
    }
    public Builder MergePlant(global::PMsg_Plant value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasPlant &&
          result.plant_ != global::PMsg_Plant.DefaultInstance) {
          result.plant_ = global::PMsg_Plant.CreateBuilder(result.plant_).MergeFrom(value).BuildPartial();
      } else {
        result.plant_ = value;
      }
      result.hasPlant = true;
      return this;
    }
    public Builder ClearPlant() {
      PrepareBuilder();
      result.hasPlant = false;
      result.plant_ = null;
      return this;
    }
  }
  static PMsg_MapUnit() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class PMsg_MessageUnit : pb::GeneratedMessage<PMsg_MessageUnit, PMsg_MessageUnit.Builder> {
  private PMsg_MessageUnit() { }
  private static readonly PMsg_MessageUnit defaultInstance = new PMsg_MessageUnit().MakeReadOnly();
  private static readonly string[] _pMsgMessageUnitFieldNames = new string[] { "Content", "FromHead", "FromName", "FromUid", "MsgID", "MsgType", "SendTime" };
  private static readonly uint[] _pMsgMessageUnitFieldTags = new uint[] { 26, 50, 58, 40, 8, 16, 32 };
  public static PMsg_MessageUnit DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PMsg_MessageUnit DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PMsg_MessageUnit ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_PMsg_MessageUnit__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PMsg_MessageUnit, PMsg_MessageUnit.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_PMsg_MessageUnit__FieldAccessorTable; }
  }
  
  public const int MsgIDFieldNumber = 1;
  private bool hasMsgID;
  private int msgID_;
  public bool HasMsgID {
    get { return hasMsgID; }
  }
  public int MsgID {
    get { return msgID_; }
  }
  
  public const int MsgTypeFieldNumber = 2;
  private bool hasMsgType;
  private int msgType_;
  public bool HasMsgType {
    get { return hasMsgType; }
  }
  public int MsgType {
    get { return msgType_; }
  }
  
  public const int ContentFieldNumber = 3;
  private bool hasContent;
  private string content_ = "";
  public bool HasContent {
    get { return hasContent; }
  }
  public string Content {
    get { return content_; }
  }
  
  public const int SendTimeFieldNumber = 4;
  private bool hasSendTime;
  private int sendTime_;
  public bool HasSendTime {
    get { return hasSendTime; }
  }
  public int SendTime {
    get { return sendTime_; }
  }
  
  public const int FromUidFieldNumber = 5;
  private bool hasFromUid;
  private int fromUid_;
  public bool HasFromUid {
    get { return hasFromUid; }
  }
  public int FromUid {
    get { return fromUid_; }
  }
  
  public const int FromHeadFieldNumber = 6;
  private bool hasFromHead;
  private string fromHead_ = "";
  public bool HasFromHead {
    get { return hasFromHead; }
  }
  public string FromHead {
    get { return fromHead_; }
  }
  
  public const int FromNameFieldNumber = 7;
  private bool hasFromName;
  private string fromName_ = "";
  public bool HasFromName {
    get { return hasFromName; }
  }
  public string FromName {
    get { return fromName_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _pMsgMessageUnitFieldNames;
    if (hasMsgID) {
      output.WriteInt32(1, field_names[4], MsgID);
    }
    if (hasMsgType) {
      output.WriteInt32(2, field_names[5], MsgType);
    }
    if (hasContent) {
      output.WriteString(3, field_names[0], Content);
    }
    if (hasSendTime) {
      output.WriteInt32(4, field_names[6], SendTime);
    }
    if (hasFromUid) {
      output.WriteInt32(5, field_names[3], FromUid);
    }
    if (hasFromHead) {
      output.WriteString(6, field_names[1], FromHead);
    }
    if (hasFromName) {
      output.WriteString(7, field_names[2], FromName);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasMsgID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, MsgID);
    }
    if (hasMsgType) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, MsgType);
    }
    if (hasContent) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Content);
    }
    if (hasSendTime) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, SendTime);
    }
    if (hasFromUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(5, FromUid);
    }
    if (hasFromHead) {
      size += pb::CodedOutputStream.ComputeStringSize(6, FromHead);
    }
    if (hasFromName) {
      size += pb::CodedOutputStream.ComputeStringSize(7, FromName);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PMsg_MessageUnit ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_MessageUnit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_MessageUnit ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_MessageUnit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_MessageUnit ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_MessageUnit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PMsg_MessageUnit ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PMsg_MessageUnit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PMsg_MessageUnit ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_MessageUnit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PMsg_MessageUnit MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PMsg_MessageUnit prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PMsg_MessageUnit, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PMsg_MessageUnit cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PMsg_MessageUnit result;
    
    private PMsg_MessageUnit PrepareBuilder() {
      if (resultIsReadOnly) {
        PMsg_MessageUnit original = result;
        result = new PMsg_MessageUnit();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PMsg_MessageUnit MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PMsg_MessageUnit.Descriptor; }
    }
    
    public override PMsg_MessageUnit DefaultInstanceForType {
      get { return global::PMsg_MessageUnit.DefaultInstance; }
    }
    
    public override PMsg_MessageUnit BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PMsg_MessageUnit) {
        return MergeFrom((PMsg_MessageUnit) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PMsg_MessageUnit other) {
      if (other == global::PMsg_MessageUnit.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMsgID) {
        MsgID = other.MsgID;
      }
      if (other.HasMsgType) {
        MsgType = other.MsgType;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasSendTime) {
        SendTime = other.SendTime;
      }
      if (other.HasFromUid) {
        FromUid = other.FromUid;
      }
      if (other.HasFromHead) {
        FromHead = other.FromHead;
      }
      if (other.HasFromName) {
        FromName = other.FromName;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_pMsgMessageUnitFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _pMsgMessageUnitFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMsgID = input.ReadInt32(ref result.msgID_);
            break;
          }
          case 16: {
            result.hasMsgType = input.ReadInt32(ref result.msgType_);
            break;
          }
          case 26: {
            result.hasContent = input.ReadString(ref result.content_);
            break;
          }
          case 32: {
            result.hasSendTime = input.ReadInt32(ref result.sendTime_);
            break;
          }
          case 40: {
            result.hasFromUid = input.ReadInt32(ref result.fromUid_);
            break;
          }
          case 50: {
            result.hasFromHead = input.ReadString(ref result.fromHead_);
            break;
          }
          case 58: {
            result.hasFromName = input.ReadString(ref result.fromName_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMsgID {
      get { return result.hasMsgID; }
    }
    public int MsgID {
      get { return result.MsgID; }
      set { SetMsgID(value); }
    }
    public Builder SetMsgID(int value) {
      PrepareBuilder();
      result.hasMsgID = true;
      result.msgID_ = value;
      return this;
    }
    public Builder ClearMsgID() {
      PrepareBuilder();
      result.hasMsgID = false;
      result.msgID_ = 0;
      return this;
    }
    
    public bool HasMsgType {
      get { return result.hasMsgType; }
    }
    public int MsgType {
      get { return result.MsgType; }
      set { SetMsgType(value); }
    }
    public Builder SetMsgType(int value) {
      PrepareBuilder();
      result.hasMsgType = true;
      result.msgType_ = value;
      return this;
    }
    public Builder ClearMsgType() {
      PrepareBuilder();
      result.hasMsgType = false;
      result.msgType_ = 0;
      return this;
    }
    
    public bool HasContent {
      get { return result.hasContent; }
    }
    public string Content {
      get { return result.Content; }
      set { SetContent(value); }
    }
    public Builder SetContent(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasContent = true;
      result.content_ = value;
      return this;
    }
    public Builder ClearContent() {
      PrepareBuilder();
      result.hasContent = false;
      result.content_ = "";
      return this;
    }
    
    public bool HasSendTime {
      get { return result.hasSendTime; }
    }
    public int SendTime {
      get { return result.SendTime; }
      set { SetSendTime(value); }
    }
    public Builder SetSendTime(int value) {
      PrepareBuilder();
      result.hasSendTime = true;
      result.sendTime_ = value;
      return this;
    }
    public Builder ClearSendTime() {
      PrepareBuilder();
      result.hasSendTime = false;
      result.sendTime_ = 0;
      return this;
    }
    
    public bool HasFromUid {
      get { return result.hasFromUid; }
    }
    public int FromUid {
      get { return result.FromUid; }
      set { SetFromUid(value); }
    }
    public Builder SetFromUid(int value) {
      PrepareBuilder();
      result.hasFromUid = true;
      result.fromUid_ = value;
      return this;
    }
    public Builder ClearFromUid() {
      PrepareBuilder();
      result.hasFromUid = false;
      result.fromUid_ = 0;
      return this;
    }
    
    public bool HasFromHead {
      get { return result.hasFromHead; }
    }
    public string FromHead {
      get { return result.FromHead; }
      set { SetFromHead(value); }
    }
    public Builder SetFromHead(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasFromHead = true;
      result.fromHead_ = value;
      return this;
    }
    public Builder ClearFromHead() {
      PrepareBuilder();
      result.hasFromHead = false;
      result.fromHead_ = "";
      return this;
    }
    
    public bool HasFromName {
      get { return result.hasFromName; }
    }
    public string FromName {
      get { return result.FromName; }
      set { SetFromName(value); }
    }
    public Builder SetFromName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasFromName = true;
      result.fromName_ = value;
      return this;
    }
    public Builder ClearFromName() {
      PrepareBuilder();
      result.hasFromName = false;
      result.fromName_ = "";
      return this;
    }
  }
  static PMsg_MessageUnit() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Shop_MessageUnit : pb::GeneratedMessage<Shop_MessageUnit, Shop_MessageUnit.Builder> {
  private Shop_MessageUnit() { }
  private static readonly Shop_MessageUnit defaultInstance = new Shop_MessageUnit().MakeReadOnly();
  private static readonly string[] _shopMessageUnitFieldNames = new string[] { "Object", "Price" };
  private static readonly uint[] _shopMessageUnitFieldTags = new uint[] { 10, 16 };
  public static Shop_MessageUnit DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Shop_MessageUnit DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Shop_MessageUnit ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Shop_MessageUnit__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Shop_MessageUnit, Shop_MessageUnit.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Shop_MessageUnit__FieldAccessorTable; }
  }
  
  public const int ObjectFieldNumber = 1;
  private bool hasObject;
  private global::PMsg_StagePropUnit object_;
  public bool HasObject {
    get { return hasObject; }
  }
  public global::PMsg_StagePropUnit Object {
    get { return object_ ?? global::PMsg_StagePropUnit.DefaultInstance; }
  }
  
  public const int PriceFieldNumber = 2;
  private bool hasPrice;
  private int price_;
  public bool HasPrice {
    get { return hasPrice; }
  }
  public int Price {
    get { return price_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _shopMessageUnitFieldNames;
    if (hasObject) {
      output.WriteMessage(1, field_names[0], Object);
    }
    if (hasPrice) {
      output.WriteInt32(2, field_names[1], Price);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasObject) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, Object);
    }
    if (hasPrice) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Price);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Shop_MessageUnit ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Shop_MessageUnit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Shop_MessageUnit ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Shop_MessageUnit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Shop_MessageUnit ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Shop_MessageUnit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Shop_MessageUnit ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Shop_MessageUnit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Shop_MessageUnit ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Shop_MessageUnit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Shop_MessageUnit MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Shop_MessageUnit prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Shop_MessageUnit, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Shop_MessageUnit cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Shop_MessageUnit result;
    
    private Shop_MessageUnit PrepareBuilder() {
      if (resultIsReadOnly) {
        Shop_MessageUnit original = result;
        result = new Shop_MessageUnit();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Shop_MessageUnit MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Shop_MessageUnit.Descriptor; }
    }
    
    public override Shop_MessageUnit DefaultInstanceForType {
      get { return global::Shop_MessageUnit.DefaultInstance; }
    }
    
    public override Shop_MessageUnit BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Shop_MessageUnit) {
        return MergeFrom((Shop_MessageUnit) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Shop_MessageUnit other) {
      if (other == global::Shop_MessageUnit.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasObject) {
        MergeObject(other.Object);
      }
      if (other.HasPrice) {
        Price = other.Price;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_shopMessageUnitFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _shopMessageUnitFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::PMsg_StagePropUnit.Builder subBuilder = global::PMsg_StagePropUnit.CreateBuilder();
            if (result.hasObject) {
              subBuilder.MergeFrom(Object);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Object = subBuilder.BuildPartial();
            break;
          }
          case 16: {
            result.hasPrice = input.ReadInt32(ref result.price_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasObject {
     get { return result.hasObject; }
    }
    public global::PMsg_StagePropUnit Object {
      get { return result.Object; }
      set { SetObject(value); }
    }
    public Builder SetObject(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasObject = true;
      result.object_ = value;
      return this;
    }
    public Builder SetObject(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasObject = true;
      result.object_ = builderForValue.Build();
      return this;
    }
    public Builder MergeObject(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasObject &&
          result.object_ != global::PMsg_StagePropUnit.DefaultInstance) {
          result.object_ = global::PMsg_StagePropUnit.CreateBuilder(result.object_).MergeFrom(value).BuildPartial();
      } else {
        result.object_ = value;
      }
      result.hasObject = true;
      return this;
    }
    public Builder ClearObject() {
      PrepareBuilder();
      result.hasObject = false;
      result.object_ = null;
      return this;
    }
    
    public bool HasPrice {
      get { return result.hasPrice; }
    }
    public int Price {
      get { return result.Price; }
      set { SetPrice(value); }
    }
    public Builder SetPrice(int value) {
      PrepareBuilder();
      result.hasPrice = true;
      result.price_ = value;
      return this;
    }
    public Builder ClearPrice() {
      PrepareBuilder();
      result.hasPrice = false;
      result.price_ = 0;
      return this;
    }
  }
  static Shop_MessageUnit() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class PMsg_ChatLog : pb::GeneratedMessage<PMsg_ChatLog, PMsg_ChatLog.Builder> {
  private PMsg_ChatLog() { }
  private static readonly PMsg_ChatLog defaultInstance = new PMsg_ChatLog().MakeReadOnly();
  private static readonly string[] _pMsgChatLogFieldNames = new string[] { "Content", "sendTime", "uid" };
  private static readonly uint[] _pMsgChatLogFieldTags = new uint[] { 18, 24, 8 };
  public static PMsg_ChatLog DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override PMsg_ChatLog DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override PMsg_ChatLog ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_PMsg_ChatLog__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<PMsg_ChatLog, PMsg_ChatLog.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_PMsg_ChatLog__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private int uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public int Uid {
    get { return uid_; }
  }
  
  public const int ContentFieldNumber = 2;
  private bool hasContent;
  private string content_ = "";
  public bool HasContent {
    get { return hasContent; }
  }
  public string Content {
    get { return content_; }
  }
  
  public const int SendTimeFieldNumber = 3;
  private bool hasSendTime;
  private int sendTime_;
  public bool HasSendTime {
    get { return hasSendTime; }
  }
  public int SendTime {
    get { return sendTime_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _pMsgChatLogFieldNames;
    if (hasUid) {
      output.WriteInt32(1, field_names[2], Uid);
    }
    if (hasContent) {
      output.WriteString(2, field_names[0], Content);
    }
    if (hasSendTime) {
      output.WriteInt32(3, field_names[1], SendTime);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Uid);
    }
    if (hasContent) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Content);
    }
    if (hasSendTime) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, SendTime);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static PMsg_ChatLog ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_ChatLog ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_ChatLog ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static PMsg_ChatLog ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static PMsg_ChatLog ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_ChatLog ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static PMsg_ChatLog ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static PMsg_ChatLog ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static PMsg_ChatLog ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static PMsg_ChatLog ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private PMsg_ChatLog MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(PMsg_ChatLog prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<PMsg_ChatLog, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(PMsg_ChatLog cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private PMsg_ChatLog result;
    
    private PMsg_ChatLog PrepareBuilder() {
      if (resultIsReadOnly) {
        PMsg_ChatLog original = result;
        result = new PMsg_ChatLog();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override PMsg_ChatLog MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::PMsg_ChatLog.Descriptor; }
    }
    
    public override PMsg_ChatLog DefaultInstanceForType {
      get { return global::PMsg_ChatLog.DefaultInstance; }
    }
    
    public override PMsg_ChatLog BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is PMsg_ChatLog) {
        return MergeFrom((PMsg_ChatLog) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(PMsg_ChatLog other) {
      if (other == global::PMsg_ChatLog.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasSendTime) {
        SendTime = other.SendTime;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_pMsgChatLogFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _pMsgChatLogFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt32(ref result.uid_);
            break;
          }
          case 18: {
            result.hasContent = input.ReadString(ref result.content_);
            break;
          }
          case 24: {
            result.hasSendTime = input.ReadInt32(ref result.sendTime_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public int Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(int value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0;
      return this;
    }
    
    public bool HasContent {
      get { return result.hasContent; }
    }
    public string Content {
      get { return result.Content; }
      set { SetContent(value); }
    }
    public Builder SetContent(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasContent = true;
      result.content_ = value;
      return this;
    }
    public Builder ClearContent() {
      PrepareBuilder();
      result.hasContent = false;
      result.content_ = "";
      return this;
    }
    
    public bool HasSendTime {
      get { return result.hasSendTime; }
    }
    public int SendTime {
      get { return result.SendTime; }
      set { SetSendTime(value); }
    }
    public Builder SetSendTime(int value) {
      PrepareBuilder();
      result.hasSendTime = true;
      result.sendTime_ = value;
      return this;
    }
    public Builder ClearSendTime() {
      PrepareBuilder();
      result.hasSendTime = false;
      result.sendTime_ = 0;
      return this;
    }
  }
  static PMsg_ChatLog() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Tick_Req : pb::GeneratedMessage<Farm_Tick_Req, Farm_Tick_Req.Builder> {
  private Farm_Tick_Req() { }
  private static readonly Farm_Tick_Req defaultInstance = new Farm_Tick_Req().MakeReadOnly();
  private static readonly string[] _farmTickReqFieldNames = new string[] {  };
  private static readonly uint[] _farmTickReqFieldTags = new uint[] {  };
  public static Farm_Tick_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Tick_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Tick_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Tick_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Tick_Req, Farm_Tick_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Tick_Req__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmTickReqFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Tick_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Tick_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Tick_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Tick_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Tick_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Tick_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Tick_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Tick_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Tick_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Tick_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Tick_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Tick_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Tick_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Tick_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Tick_Req result;
    
    private Farm_Tick_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Tick_Req original = result;
        result = new Farm_Tick_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Tick_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Tick_Req.Descriptor; }
    }
    
    public override Farm_Tick_Req DefaultInstanceForType {
      get { return global::Farm_Tick_Req.DefaultInstance; }
    }
    
    public override Farm_Tick_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Tick_Req) {
        return MergeFrom((Farm_Tick_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Tick_Req other) {
      if (other == global::Farm_Tick_Req.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmTickReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmTickReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static Farm_Tick_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Tick_Anw : pb::GeneratedMessage<Farm_Tick_Anw, Farm_Tick_Anw.Builder> {
  private Farm_Tick_Anw() { }
  private static readonly Farm_Tick_Anw defaultInstance = new Farm_Tick_Anw().MakeReadOnly();
  private static readonly string[] _farmTickAnwFieldNames = new string[] { "unixtime" };
  private static readonly uint[] _farmTickAnwFieldTags = new uint[] { 8 };
  public static Farm_Tick_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Tick_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Tick_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Tick_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Tick_Anw, Farm_Tick_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Tick_Anw__FieldAccessorTable; }
  }
  
  public const int UnixtimeFieldNumber = 1;
  private bool hasUnixtime;
  private int unixtime_;
  public bool HasUnixtime {
    get { return hasUnixtime; }
  }
  public int Unixtime {
    get { return unixtime_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmTickAnwFieldNames;
    if (hasUnixtime) {
      output.WriteInt32(1, field_names[0], Unixtime);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUnixtime) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Unixtime);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Tick_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Tick_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Tick_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Tick_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Tick_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Tick_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Tick_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Tick_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Tick_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Tick_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Tick_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Tick_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Tick_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Tick_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Tick_Anw result;
    
    private Farm_Tick_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Tick_Anw original = result;
        result = new Farm_Tick_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Tick_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Tick_Anw.Descriptor; }
    }
    
    public override Farm_Tick_Anw DefaultInstanceForType {
      get { return global::Farm_Tick_Anw.DefaultInstance; }
    }
    
    public override Farm_Tick_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Tick_Anw) {
        return MergeFrom((Farm_Tick_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Tick_Anw other) {
      if (other == global::Farm_Tick_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUnixtime) {
        Unixtime = other.Unixtime;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmTickAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmTickAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUnixtime = input.ReadInt32(ref result.unixtime_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUnixtime {
      get { return result.hasUnixtime; }
    }
    public int Unixtime {
      get { return result.Unixtime; }
      set { SetUnixtime(value); }
    }
    public Builder SetUnixtime(int value) {
      PrepareBuilder();
      result.hasUnixtime = true;
      result.unixtime_ = value;
      return this;
    }
    public Builder ClearUnixtime() {
      PrepareBuilder();
      result.hasUnixtime = false;
      result.unixtime_ = 0;
      return this;
    }
  }
  static Farm_Tick_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_CommAnswer : pb::GeneratedMessage<Farm_CommAnswer, Farm_CommAnswer.Builder> {
  private Farm_CommAnswer() { }
  private static readonly Farm_CommAnswer defaultInstance = new Farm_CommAnswer().MakeReadOnly();
  private static readonly string[] _farmCommAnswerFieldNames = new string[] { "content", "result" };
  private static readonly uint[] _farmCommAnswerFieldTags = new uint[] { 10, 16 };
  public static Farm_CommAnswer DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_CommAnswer DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_CommAnswer ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_CommAnswer__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_CommAnswer, Farm_CommAnswer.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_CommAnswer__FieldAccessorTable; }
  }
  
  public const int ContentFieldNumber = 1;
  private bool hasContent;
  private string content_ = "";
  public bool HasContent {
    get { return hasContent; }
  }
  public string Content {
    get { return content_; }
  }
  
  public const int ResultFieldNumber = 2;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmCommAnswerFieldNames;
    if (hasContent) {
      output.WriteString(1, field_names[0], Content);
    }
    if (hasResult) {
      output.WriteInt32(2, field_names[1], Result);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasContent) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Content);
    }
    if (hasResult) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Result);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_CommAnswer ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_CommAnswer ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_CommAnswer ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_CommAnswer ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_CommAnswer ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_CommAnswer ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_CommAnswer ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_CommAnswer ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_CommAnswer ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_CommAnswer ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_CommAnswer MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_CommAnswer prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_CommAnswer, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_CommAnswer cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_CommAnswer result;
    
    private Farm_CommAnswer PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_CommAnswer original = result;
        result = new Farm_CommAnswer();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_CommAnswer MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_CommAnswer.Descriptor; }
    }
    
    public override Farm_CommAnswer DefaultInstanceForType {
      get { return global::Farm_CommAnswer.DefaultInstance; }
    }
    
    public override Farm_CommAnswer BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_CommAnswer) {
        return MergeFrom((Farm_CommAnswer) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_CommAnswer other) {
      if (other == global::Farm_CommAnswer.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasContent) {
        Content = other.Content;
      }
      if (other.HasResult) {
        Result = other.Result;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmCommAnswerFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmCommAnswerFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasContent = input.ReadString(ref result.content_);
            break;
          }
          case 16: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasContent {
      get { return result.hasContent; }
    }
    public string Content {
      get { return result.Content; }
      set { SetContent(value); }
    }
    public Builder SetContent(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasContent = true;
      result.content_ = value;
      return this;
    }
    public Builder ClearContent() {
      PrepareBuilder();
      result.hasContent = false;
      result.content_ = "";
      return this;
    }
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
  }
  static Farm_CommAnswer() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ReqLoginSDK : pb::GeneratedMessage<ReqLoginSDK, ReqLoginSDK.Builder> {
  private ReqLoginSDK() { }
  private static readonly ReqLoginSDK defaultInstance = new ReqLoginSDK().MakeReadOnly();
  private static readonly string[] _reqLoginSDKFieldNames = new string[] { "account", "city", "headimgurl", "language", "nickname", "openid", "password", "platform", "province", "sex", "sign", "type", "verification" };
  private static readonly uint[] _reqLoginSDKFieldTags = new uint[] { 10, 82, 58, 98, 74, 50, 18, 24, 66, 90, 34, 42, 106 };
  public static ReqLoginSDK DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ReqLoginSDK DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ReqLoginSDK ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_ReqLoginSDK__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ReqLoginSDK, ReqLoginSDK.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_ReqLoginSDK__FieldAccessorTable; }
  }
  
  public const int AccountFieldNumber = 1;
  private bool hasAccount;
  private string account_ = "";
  public bool HasAccount {
    get { return hasAccount; }
  }
  public string Account {
    get { return account_; }
  }
  
  public const int PasswordFieldNumber = 2;
  private bool hasPassword;
  private string password_ = "";
  public bool HasPassword {
    get { return hasPassword; }
  }
  public string Password {
    get { return password_; }
  }
  
  public const int PlatformFieldNumber = 3;
  private bool hasPlatform;
  private int platform_;
  public bool HasPlatform {
    get { return hasPlatform; }
  }
  public int Platform {
    get { return platform_; }
  }
  
  public const int SignFieldNumber = 4;
  private bool hasSign;
  private string sign_ = "";
  public bool HasSign {
    get { return hasSign; }
  }
  public string Sign {
    get { return sign_; }
  }
  
  public const int TypeFieldNumber = 5;
  private bool hasType;
  private string type_ = "";
  public bool HasType {
    get { return hasType; }
  }
  public string Type {
    get { return type_; }
  }
  
  public const int OpenidFieldNumber = 6;
  private bool hasOpenid;
  private string openid_ = "";
  public bool HasOpenid {
    get { return hasOpenid; }
  }
  public string Openid {
    get { return openid_; }
  }
  
  public const int HeadimgurlFieldNumber = 7;
  private bool hasHeadimgurl;
  private string headimgurl_ = "";
  public bool HasHeadimgurl {
    get { return hasHeadimgurl; }
  }
  public string Headimgurl {
    get { return headimgurl_; }
  }
  
  public const int ProvinceFieldNumber = 8;
  private bool hasProvince;
  private string province_ = "";
  public bool HasProvince {
    get { return hasProvince; }
  }
  public string Province {
    get { return province_; }
  }
  
  public const int NicknameFieldNumber = 9;
  private bool hasNickname;
  private string nickname_ = "";
  public bool HasNickname {
    get { return hasNickname; }
  }
  public string Nickname {
    get { return nickname_; }
  }
  
  public const int CityFieldNumber = 10;
  private bool hasCity;
  private string city_ = "";
  public bool HasCity {
    get { return hasCity; }
  }
  public string City {
    get { return city_; }
  }
  
  public const int SexFieldNumber = 11;
  private bool hasSex;
  private string sex_ = "";
  public bool HasSex {
    get { return hasSex; }
  }
  public string Sex {
    get { return sex_; }
  }
  
  public const int LanguageFieldNumber = 12;
  private bool hasLanguage;
  private string language_ = "";
  public bool HasLanguage {
    get { return hasLanguage; }
  }
  public string Language {
    get { return language_; }
  }
  
  public const int VerificationFieldNumber = 13;
  private bool hasVerification;
  private string verification_ = "";
  public bool HasVerification {
    get { return hasVerification; }
  }
  public string Verification {
    get { return verification_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _reqLoginSDKFieldNames;
    if (hasAccount) {
      output.WriteString(1, field_names[0], Account);
    }
    if (hasPassword) {
      output.WriteString(2, field_names[6], Password);
    }
    if (hasPlatform) {
      output.WriteInt32(3, field_names[7], Platform);
    }
    if (hasSign) {
      output.WriteString(4, field_names[10], Sign);
    }
    if (hasType) {
      output.WriteString(5, field_names[11], Type);
    }
    if (hasOpenid) {
      output.WriteString(6, field_names[5], Openid);
    }
    if (hasHeadimgurl) {
      output.WriteString(7, field_names[2], Headimgurl);
    }
    if (hasProvince) {
      output.WriteString(8, field_names[8], Province);
    }
    if (hasNickname) {
      output.WriteString(9, field_names[4], Nickname);
    }
    if (hasCity) {
      output.WriteString(10, field_names[1], City);
    }
    if (hasSex) {
      output.WriteString(11, field_names[9], Sex);
    }
    if (hasLanguage) {
      output.WriteString(12, field_names[3], Language);
    }
    if (hasVerification) {
      output.WriteString(13, field_names[12], Verification);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasAccount) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Account);
    }
    if (hasPassword) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Password);
    }
    if (hasPlatform) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, Platform);
    }
    if (hasSign) {
      size += pb::CodedOutputStream.ComputeStringSize(4, Sign);
    }
    if (hasType) {
      size += pb::CodedOutputStream.ComputeStringSize(5, Type);
    }
    if (hasOpenid) {
      size += pb::CodedOutputStream.ComputeStringSize(6, Openid);
    }
    if (hasHeadimgurl) {
      size += pb::CodedOutputStream.ComputeStringSize(7, Headimgurl);
    }
    if (hasProvince) {
      size += pb::CodedOutputStream.ComputeStringSize(8, Province);
    }
    if (hasNickname) {
      size += pb::CodedOutputStream.ComputeStringSize(9, Nickname);
    }
    if (hasCity) {
      size += pb::CodedOutputStream.ComputeStringSize(10, City);
    }
    if (hasSex) {
      size += pb::CodedOutputStream.ComputeStringSize(11, Sex);
    }
    if (hasLanguage) {
      size += pb::CodedOutputStream.ComputeStringSize(12, Language);
    }
    if (hasVerification) {
      size += pb::CodedOutputStream.ComputeStringSize(13, Verification);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ReqLoginSDK ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqLoginSDK ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqLoginSDK ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqLoginSDK ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqLoginSDK ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqLoginSDK ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ReqLoginSDK ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ReqLoginSDK ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ReqLoginSDK ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqLoginSDK ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ReqLoginSDK MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ReqLoginSDK prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ReqLoginSDK, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ReqLoginSDK cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ReqLoginSDK result;
    
    private ReqLoginSDK PrepareBuilder() {
      if (resultIsReadOnly) {
        ReqLoginSDK original = result;
        result = new ReqLoginSDK();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ReqLoginSDK MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ReqLoginSDK.Descriptor; }
    }
    
    public override ReqLoginSDK DefaultInstanceForType {
      get { return global::ReqLoginSDK.DefaultInstance; }
    }
    
    public override ReqLoginSDK BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ReqLoginSDK) {
        return MergeFrom((ReqLoginSDK) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ReqLoginSDK other) {
      if (other == global::ReqLoginSDK.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAccount) {
        Account = other.Account;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      if (other.HasPlatform) {
        Platform = other.Platform;
      }
      if (other.HasSign) {
        Sign = other.Sign;
      }
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasOpenid) {
        Openid = other.Openid;
      }
      if (other.HasHeadimgurl) {
        Headimgurl = other.Headimgurl;
      }
      if (other.HasProvince) {
        Province = other.Province;
      }
      if (other.HasNickname) {
        Nickname = other.Nickname;
      }
      if (other.HasCity) {
        City = other.City;
      }
      if (other.HasSex) {
        Sex = other.Sex;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      if (other.HasVerification) {
        Verification = other.Verification;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_reqLoginSDKFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _reqLoginSDKFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasAccount = input.ReadString(ref result.account_);
            break;
          }
          case 18: {
            result.hasPassword = input.ReadString(ref result.password_);
            break;
          }
          case 24: {
            result.hasPlatform = input.ReadInt32(ref result.platform_);
            break;
          }
          case 34: {
            result.hasSign = input.ReadString(ref result.sign_);
            break;
          }
          case 42: {
            result.hasType = input.ReadString(ref result.type_);
            break;
          }
          case 50: {
            result.hasOpenid = input.ReadString(ref result.openid_);
            break;
          }
          case 58: {
            result.hasHeadimgurl = input.ReadString(ref result.headimgurl_);
            break;
          }
          case 66: {
            result.hasProvince = input.ReadString(ref result.province_);
            break;
          }
          case 74: {
            result.hasNickname = input.ReadString(ref result.nickname_);
            break;
          }
          case 82: {
            result.hasCity = input.ReadString(ref result.city_);
            break;
          }
          case 90: {
            result.hasSex = input.ReadString(ref result.sex_);
            break;
          }
          case 98: {
            result.hasLanguage = input.ReadString(ref result.language_);
            break;
          }
          case 106: {
            result.hasVerification = input.ReadString(ref result.verification_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAccount {
      get { return result.hasAccount; }
    }
    public string Account {
      get { return result.Account; }
      set { SetAccount(value); }
    }
    public Builder SetAccount(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAccount = true;
      result.account_ = value;
      return this;
    }
    public Builder ClearAccount() {
      PrepareBuilder();
      result.hasAccount = false;
      result.account_ = "";
      return this;
    }
    
    public bool HasPassword {
      get { return result.hasPassword; }
    }
    public string Password {
      get { return result.Password; }
      set { SetPassword(value); }
    }
    public Builder SetPassword(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPassword = true;
      result.password_ = value;
      return this;
    }
    public Builder ClearPassword() {
      PrepareBuilder();
      result.hasPassword = false;
      result.password_ = "";
      return this;
    }
    
    public bool HasPlatform {
      get { return result.hasPlatform; }
    }
    public int Platform {
      get { return result.Platform; }
      set { SetPlatform(value); }
    }
    public Builder SetPlatform(int value) {
      PrepareBuilder();
      result.hasPlatform = true;
      result.platform_ = value;
      return this;
    }
    public Builder ClearPlatform() {
      PrepareBuilder();
      result.hasPlatform = false;
      result.platform_ = 0;
      return this;
    }
    
    public bool HasSign {
      get { return result.hasSign; }
    }
    public string Sign {
      get { return result.Sign; }
      set { SetSign(value); }
    }
    public Builder SetSign(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSign = true;
      result.sign_ = value;
      return this;
    }
    public Builder ClearSign() {
      PrepareBuilder();
      result.hasSign = false;
      result.sign_ = "";
      return this;
    }
    
    public bool HasType {
      get { return result.hasType; }
    }
    public string Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = "";
      return this;
    }
    
    public bool HasOpenid {
      get { return result.hasOpenid; }
    }
    public string Openid {
      get { return result.Openid; }
      set { SetOpenid(value); }
    }
    public Builder SetOpenid(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOpenid = true;
      result.openid_ = value;
      return this;
    }
    public Builder ClearOpenid() {
      PrepareBuilder();
      result.hasOpenid = false;
      result.openid_ = "";
      return this;
    }
    
    public bool HasHeadimgurl {
      get { return result.hasHeadimgurl; }
    }
    public string Headimgurl {
      get { return result.Headimgurl; }
      set { SetHeadimgurl(value); }
    }
    public Builder SetHeadimgurl(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasHeadimgurl = true;
      result.headimgurl_ = value;
      return this;
    }
    public Builder ClearHeadimgurl() {
      PrepareBuilder();
      result.hasHeadimgurl = false;
      result.headimgurl_ = "";
      return this;
    }
    
    public bool HasProvince {
      get { return result.hasProvince; }
    }
    public string Province {
      get { return result.Province; }
      set { SetProvince(value); }
    }
    public Builder SetProvince(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasProvince = true;
      result.province_ = value;
      return this;
    }
    public Builder ClearProvince() {
      PrepareBuilder();
      result.hasProvince = false;
      result.province_ = "";
      return this;
    }
    
    public bool HasNickname {
      get { return result.hasNickname; }
    }
    public string Nickname {
      get { return result.Nickname; }
      set { SetNickname(value); }
    }
    public Builder SetNickname(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasNickname = true;
      result.nickname_ = value;
      return this;
    }
    public Builder ClearNickname() {
      PrepareBuilder();
      result.hasNickname = false;
      result.nickname_ = "";
      return this;
    }
    
    public bool HasCity {
      get { return result.hasCity; }
    }
    public string City {
      get { return result.City; }
      set { SetCity(value); }
    }
    public Builder SetCity(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCity = true;
      result.city_ = value;
      return this;
    }
    public Builder ClearCity() {
      PrepareBuilder();
      result.hasCity = false;
      result.city_ = "";
      return this;
    }
    
    public bool HasSex {
      get { return result.hasSex; }
    }
    public string Sex {
      get { return result.Sex; }
      set { SetSex(value); }
    }
    public Builder SetSex(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSex = true;
      result.sex_ = value;
      return this;
    }
    public Builder ClearSex() {
      PrepareBuilder();
      result.hasSex = false;
      result.sex_ = "";
      return this;
    }
    
    public bool HasLanguage {
      get { return result.hasLanguage; }
    }
    public string Language {
      get { return result.Language; }
      set { SetLanguage(value); }
    }
    public Builder SetLanguage(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLanguage = true;
      result.language_ = value;
      return this;
    }
    public Builder ClearLanguage() {
      PrepareBuilder();
      result.hasLanguage = false;
      result.language_ = "";
      return this;
    }
    
    public bool HasVerification {
      get { return result.hasVerification; }
    }
    public string Verification {
      get { return result.Verification; }
      set { SetVerification(value); }
    }
    public Builder SetVerification(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVerification = true;
      result.verification_ = value;
      return this;
    }
    public Builder ClearVerification() {
      PrepareBuilder();
      result.hasVerification = false;
      result.verification_ = "";
      return this;
    }
  }
  static ReqLoginSDK() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ResponeLoginSDK : pb::GeneratedMessage<ResponeLoginSDK, ResponeLoginSDK.Builder> {
  private ResponeLoginSDK() { }
  private static readonly ResponeLoginSDK defaultInstance = new ResponeLoginSDK().MakeReadOnly();
  private static readonly string[] _responeLoginSDKFieldNames = new string[] { "isBinding", "token", "uid" };
  private static readonly uint[] _responeLoginSDKFieldTags = new uint[] { 24, 18, 8 };
  public static ResponeLoginSDK DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ResponeLoginSDK DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ResponeLoginSDK ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_ResponeLoginSDK__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ResponeLoginSDK, ResponeLoginSDK.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_ResponeLoginSDK__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private int uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public int Uid {
    get { return uid_; }
  }
  
  public const int TokenFieldNumber = 2;
  private bool hasToken;
  private string token_ = "";
  public bool HasToken {
    get { return hasToken; }
  }
  public string Token {
    get { return token_; }
  }
  
  public const int IsBindingFieldNumber = 3;
  private bool hasIsBinding;
  private int isBinding_;
  public bool HasIsBinding {
    get { return hasIsBinding; }
  }
  public int IsBinding {
    get { return isBinding_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _responeLoginSDKFieldNames;
    if (hasUid) {
      output.WriteInt32(1, field_names[2], Uid);
    }
    if (hasToken) {
      output.WriteString(2, field_names[1], Token);
    }
    if (hasIsBinding) {
      output.WriteInt32(3, field_names[0], IsBinding);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Uid);
    }
    if (hasToken) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Token);
    }
    if (hasIsBinding) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, IsBinding);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ResponeLoginSDK ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ResponeLoginSDK ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ResponeLoginSDK ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ResponeLoginSDK ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ResponeLoginSDK ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ResponeLoginSDK ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ResponeLoginSDK ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ResponeLoginSDK ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ResponeLoginSDK ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ResponeLoginSDK ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ResponeLoginSDK MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ResponeLoginSDK prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ResponeLoginSDK, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ResponeLoginSDK cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ResponeLoginSDK result;
    
    private ResponeLoginSDK PrepareBuilder() {
      if (resultIsReadOnly) {
        ResponeLoginSDK original = result;
        result = new ResponeLoginSDK();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ResponeLoginSDK MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ResponeLoginSDK.Descriptor; }
    }
    
    public override ResponeLoginSDK DefaultInstanceForType {
      get { return global::ResponeLoginSDK.DefaultInstance; }
    }
    
    public override ResponeLoginSDK BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ResponeLoginSDK) {
        return MergeFrom((ResponeLoginSDK) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ResponeLoginSDK other) {
      if (other == global::ResponeLoginSDK.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      if (other.HasIsBinding) {
        IsBinding = other.IsBinding;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_responeLoginSDKFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _responeLoginSDKFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt32(ref result.uid_);
            break;
          }
          case 18: {
            result.hasToken = input.ReadString(ref result.token_);
            break;
          }
          case 24: {
            result.hasIsBinding = input.ReadInt32(ref result.isBinding_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public int Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(int value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0;
      return this;
    }
    
    public bool HasToken {
      get { return result.hasToken; }
    }
    public string Token {
      get { return result.Token; }
      set { SetToken(value); }
    }
    public Builder SetToken(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasToken = true;
      result.token_ = value;
      return this;
    }
    public Builder ClearToken() {
      PrepareBuilder();
      result.hasToken = false;
      result.token_ = "";
      return this;
    }
    
    public bool HasIsBinding {
      get { return result.hasIsBinding; }
    }
    public int IsBinding {
      get { return result.IsBinding; }
      set { SetIsBinding(value); }
    }
    public Builder SetIsBinding(int value) {
      PrepareBuilder();
      result.hasIsBinding = true;
      result.isBinding_ = value;
      return this;
    }
    public Builder ClearIsBinding() {
      PrepareBuilder();
      result.hasIsBinding = false;
      result.isBinding_ = 0;
      return this;
    }
  }
  static ResponeLoginSDK() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ReqLogoutSDK : pb::GeneratedMessage<ReqLogoutSDK, ReqLogoutSDK.Builder> {
  private ReqLogoutSDK() { }
  private static readonly ReqLogoutSDK defaultInstance = new ReqLogoutSDK().MakeReadOnly();
  private static readonly string[] _reqLogoutSDKFieldNames = new string[] {  };
  private static readonly uint[] _reqLogoutSDKFieldTags = new uint[] {  };
  public static ReqLogoutSDK DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ReqLogoutSDK DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ReqLogoutSDK ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_ReqLogoutSDK__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ReqLogoutSDK, ReqLogoutSDK.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_ReqLogoutSDK__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _reqLogoutSDKFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ReqLogoutSDK ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqLogoutSDK ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqLogoutSDK ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqLogoutSDK ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqLogoutSDK ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqLogoutSDK ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ReqLogoutSDK ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ReqLogoutSDK ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ReqLogoutSDK ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqLogoutSDK ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ReqLogoutSDK MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ReqLogoutSDK prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ReqLogoutSDK, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ReqLogoutSDK cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ReqLogoutSDK result;
    
    private ReqLogoutSDK PrepareBuilder() {
      if (resultIsReadOnly) {
        ReqLogoutSDK original = result;
        result = new ReqLogoutSDK();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ReqLogoutSDK MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ReqLogoutSDK.Descriptor; }
    }
    
    public override ReqLogoutSDK DefaultInstanceForType {
      get { return global::ReqLogoutSDK.DefaultInstance; }
    }
    
    public override ReqLogoutSDK BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ReqLogoutSDK) {
        return MergeFrom((ReqLogoutSDK) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ReqLogoutSDK other) {
      if (other == global::ReqLogoutSDK.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_reqLogoutSDKFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _reqLogoutSDKFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static ReqLogoutSDK() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ReqLogin : pb::GeneratedMessage<ReqLogin, ReqLogin.Builder> {
  private ReqLogin() { }
  private static readonly ReqLogin defaultInstance = new ReqLogin().MakeReadOnly();
  private static readonly string[] _reqLoginFieldNames = new string[] { "token", "uid" };
  private static readonly uint[] _reqLoginFieldTags = new uint[] { 18, 8 };
  public static ReqLogin DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ReqLogin DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ReqLogin ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_ReqLogin__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ReqLogin, ReqLogin.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_ReqLogin__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private int uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public int Uid {
    get { return uid_; }
  }
  
  public const int TokenFieldNumber = 2;
  private bool hasToken;
  private string token_ = "";
  public bool HasToken {
    get { return hasToken; }
  }
  public string Token {
    get { return token_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _reqLoginFieldNames;
    if (hasUid) {
      output.WriteInt32(1, field_names[1], Uid);
    }
    if (hasToken) {
      output.WriteString(2, field_names[0], Token);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Uid);
    }
    if (hasToken) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Token);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ReqLogin ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqLogin ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqLogin ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ReqLogin ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ReqLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ReqLogin ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ReqLogin MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ReqLogin prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ReqLogin, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ReqLogin cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ReqLogin result;
    
    private ReqLogin PrepareBuilder() {
      if (resultIsReadOnly) {
        ReqLogin original = result;
        result = new ReqLogin();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ReqLogin MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ReqLogin.Descriptor; }
    }
    
    public override ReqLogin DefaultInstanceForType {
      get { return global::ReqLogin.DefaultInstance; }
    }
    
    public override ReqLogin BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ReqLogin) {
        return MergeFrom((ReqLogin) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ReqLogin other) {
      if (other == global::ReqLogin.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_reqLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _reqLoginFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt32(ref result.uid_);
            break;
          }
          case 18: {
            result.hasToken = input.ReadString(ref result.token_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public int Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(int value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0;
      return this;
    }
    
    public bool HasToken {
      get { return result.hasToken; }
    }
    public string Token {
      get { return result.Token; }
      set { SetToken(value); }
    }
    public Builder SetToken(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasToken = true;
      result.token_ = value;
      return this;
    }
    public Builder ClearToken() {
      PrepareBuilder();
      result.hasToken = false;
      result.token_ = "";
      return this;
    }
  }
  static ReqLogin() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ResponeLogin : pb::GeneratedMessage<ResponeLogin, ResponeLogin.Builder> {
  private ResponeLogin() { }
  private static readonly ResponeLogin defaultInstance = new ResponeLogin().MakeReadOnly();
  private static readonly string[] _responeLoginFieldNames = new string[] { "Chance", "ContinueDays", "DogCurrentEXP", "DogUpgradeMaxEXP", "InvitationCode", "LevelMaxExp", "account", "awardInfos", "dog_lv", "exp", "gold", "head", "isPayForAPP", "lv", "mapArray", "oil", "uid", "username" };
  private static readonly uint[] _responeLoginFieldTags = new uint[] { 152, 96, 144, 136, 170, 48, 162, 90, 64, 40, 104, 26, 176, 32, 74, 56, 8, 18 };
  public static ResponeLogin DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ResponeLogin DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ResponeLogin ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_ResponeLogin__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ResponeLogin, ResponeLogin.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_ResponeLogin__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private int uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public int Uid {
    get { return uid_; }
  }
  
  public const int UsernameFieldNumber = 2;
  private bool hasUsername;
  private string username_ = "";
  public bool HasUsername {
    get { return hasUsername; }
  }
  public string Username {
    get { return username_; }
  }
  
  public const int HeadFieldNumber = 3;
  private bool hasHead;
  private string head_ = "";
  public bool HasHead {
    get { return hasHead; }
  }
  public string Head {
    get { return head_; }
  }
  
  public const int LvFieldNumber = 4;
  private bool hasLv;
  private int lv_;
  public bool HasLv {
    get { return hasLv; }
  }
  public int Lv {
    get { return lv_; }
  }
  
  public const int ExpFieldNumber = 5;
  private bool hasExp;
  private int exp_;
  public bool HasExp {
    get { return hasExp; }
  }
  public int Exp {
    get { return exp_; }
  }
  
  public const int LevelMaxExpFieldNumber = 6;
  private bool hasLevelMaxExp;
  private int levelMaxExp_;
  public bool HasLevelMaxExp {
    get { return hasLevelMaxExp; }
  }
  public int LevelMaxExp {
    get { return levelMaxExp_; }
  }
  
  public const int OilFieldNumber = 7;
  private bool hasOil;
  private int oil_;
  public bool HasOil {
    get { return hasOil; }
  }
  public int Oil {
    get { return oil_; }
  }
  
  public const int DogLvFieldNumber = 8;
  private bool hasDogLv;
  private int dogLv_;
  public bool HasDogLv {
    get { return hasDogLv; }
  }
  public int DogLv {
    get { return dogLv_; }
  }
  
  public const int MapArrayFieldNumber = 9;
  private pbc::PopsicleList<global::PMsg_MapUnit> mapArray_ = new pbc::PopsicleList<global::PMsg_MapUnit>();
  public scg::IList<global::PMsg_MapUnit> MapArrayList {
    get { return mapArray_; }
  }
  public int MapArrayCount {
    get { return mapArray_.Count; }
  }
  public global::PMsg_MapUnit GetMapArray(int index) {
    return mapArray_[index];
  }
  
  public const int AwardInfosFieldNumber = 11;
  private pbc::PopsicleList<global::SignRewardUnit> awardInfos_ = new pbc::PopsicleList<global::SignRewardUnit>();
  public scg::IList<global::SignRewardUnit> AwardInfosList {
    get { return awardInfos_; }
  }
  public int AwardInfosCount {
    get { return awardInfos_.Count; }
  }
  public global::SignRewardUnit GetAwardInfos(int index) {
    return awardInfos_[index];
  }
  
  public const int ContinueDaysFieldNumber = 12;
  private bool hasContinueDays;
  private int continueDays_;
  public bool HasContinueDays {
    get { return hasContinueDays; }
  }
  public int ContinueDays {
    get { return continueDays_; }
  }
  
  public const int GoldFieldNumber = 13;
  private bool hasGold;
  private int gold_;
  public bool HasGold {
    get { return hasGold; }
  }
  public int Gold {
    get { return gold_; }
  }
  
  public const int DogUpgradeMaxEXPFieldNumber = 17;
  private bool hasDogUpgradeMaxEXP;
  private int dogUpgradeMaxEXP_;
  public bool HasDogUpgradeMaxEXP {
    get { return hasDogUpgradeMaxEXP; }
  }
  public int DogUpgradeMaxEXP {
    get { return dogUpgradeMaxEXP_; }
  }
  
  public const int DogCurrentEXPFieldNumber = 18;
  private bool hasDogCurrentEXP;
  private int dogCurrentEXP_;
  public bool HasDogCurrentEXP {
    get { return hasDogCurrentEXP; }
  }
  public int DogCurrentEXP {
    get { return dogCurrentEXP_; }
  }
  
  public const int ChanceFieldNumber = 19;
  private bool hasChance;
  private int chance_;
  public bool HasChance {
    get { return hasChance; }
  }
  public int Chance {
    get { return chance_; }
  }
  
  public const int AccountFieldNumber = 20;
  private bool hasAccount;
  private string account_ = "";
  public bool HasAccount {
    get { return hasAccount; }
  }
  public string Account {
    get { return account_; }
  }
  
  public const int InvitationCodeFieldNumber = 21;
  private bool hasInvitationCode;
  private string invitationCode_ = "";
  public bool HasInvitationCode {
    get { return hasInvitationCode; }
  }
  public string InvitationCode {
    get { return invitationCode_; }
  }
  
  public const int IsPayForAPPFieldNumber = 22;
  private bool hasIsPayForAPP;
  private int isPayForAPP_;
  public bool HasIsPayForAPP {
    get { return hasIsPayForAPP; }
  }
  public int IsPayForAPP {
    get { return isPayForAPP_; }
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::PMsg_MapUnit element in MapArrayList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _responeLoginFieldNames;
    if (hasUid) {
      output.WriteInt32(1, field_names[16], Uid);
    }
    if (hasUsername) {
      output.WriteString(2, field_names[17], Username);
    }
    if (hasHead) {
      output.WriteString(3, field_names[11], Head);
    }
    if (hasLv) {
      output.WriteInt32(4, field_names[13], Lv);
    }
    if (hasExp) {
      output.WriteInt32(5, field_names[9], Exp);
    }
    if (hasLevelMaxExp) {
      output.WriteInt32(6, field_names[5], LevelMaxExp);
    }
    if (hasOil) {
      output.WriteInt32(7, field_names[15], Oil);
    }
    if (hasDogLv) {
      output.WriteInt32(8, field_names[8], DogLv);
    }
    if (mapArray_.Count > 0) {
      output.WriteMessageArray(9, field_names[14], mapArray_);
    }
    if (awardInfos_.Count > 0) {
      output.WriteMessageArray(11, field_names[7], awardInfos_);
    }
    if (hasContinueDays) {
      output.WriteInt32(12, field_names[1], ContinueDays);
    }
    if (hasGold) {
      output.WriteInt32(13, field_names[10], Gold);
    }
    if (hasDogUpgradeMaxEXP) {
      output.WriteInt32(17, field_names[3], DogUpgradeMaxEXP);
    }
    if (hasDogCurrentEXP) {
      output.WriteInt32(18, field_names[2], DogCurrentEXP);
    }
    if (hasChance) {
      output.WriteInt32(19, field_names[0], Chance);
    }
    if (hasAccount) {
      output.WriteString(20, field_names[6], Account);
    }
    if (hasInvitationCode) {
      output.WriteString(21, field_names[4], InvitationCode);
    }
    if (hasIsPayForAPP) {
      output.WriteInt32(22, field_names[12], IsPayForAPP);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Uid);
    }
    if (hasUsername) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Username);
    }
    if (hasHead) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Head);
    }
    if (hasLv) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, Lv);
    }
    if (hasExp) {
      size += pb::CodedOutputStream.ComputeInt32Size(5, Exp);
    }
    if (hasLevelMaxExp) {
      size += pb::CodedOutputStream.ComputeInt32Size(6, LevelMaxExp);
    }
    if (hasOil) {
      size += pb::CodedOutputStream.ComputeInt32Size(7, Oil);
    }
    if (hasDogLv) {
      size += pb::CodedOutputStream.ComputeInt32Size(8, DogLv);
    }
    foreach (global::PMsg_MapUnit element in MapArrayList) {
      size += pb::CodedOutputStream.ComputeMessageSize(9, element);
    }
    foreach (global::SignRewardUnit element in AwardInfosList) {
      size += pb::CodedOutputStream.ComputeMessageSize(11, element);
    }
    if (hasContinueDays) {
      size += pb::CodedOutputStream.ComputeInt32Size(12, ContinueDays);
    }
    if (hasGold) {
      size += pb::CodedOutputStream.ComputeInt32Size(13, Gold);
    }
    if (hasDogUpgradeMaxEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(17, DogUpgradeMaxEXP);
    }
    if (hasDogCurrentEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(18, DogCurrentEXP);
    }
    if (hasChance) {
      size += pb::CodedOutputStream.ComputeInt32Size(19, Chance);
    }
    if (hasAccount) {
      size += pb::CodedOutputStream.ComputeStringSize(20, Account);
    }
    if (hasInvitationCode) {
      size += pb::CodedOutputStream.ComputeStringSize(21, InvitationCode);
    }
    if (hasIsPayForAPP) {
      size += pb::CodedOutputStream.ComputeInt32Size(22, IsPayForAPP);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ResponeLogin ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ResponeLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ResponeLogin ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ResponeLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ResponeLogin ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ResponeLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ResponeLogin ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ResponeLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ResponeLogin ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ResponeLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ResponeLogin MakeReadOnly() {
    mapArray_.MakeReadOnly();
    awardInfos_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ResponeLogin prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ResponeLogin, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ResponeLogin cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ResponeLogin result;
    
    private ResponeLogin PrepareBuilder() {
      if (resultIsReadOnly) {
        ResponeLogin original = result;
        result = new ResponeLogin();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ResponeLogin MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ResponeLogin.Descriptor; }
    }
    
    public override ResponeLogin DefaultInstanceForType {
      get { return global::ResponeLogin.DefaultInstance; }
    }
    
    public override ResponeLogin BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ResponeLogin) {
        return MergeFrom((ResponeLogin) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ResponeLogin other) {
      if (other == global::ResponeLogin.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasUsername) {
        Username = other.Username;
      }
      if (other.HasHead) {
        Head = other.Head;
      }
      if (other.HasLv) {
        Lv = other.Lv;
      }
      if (other.HasExp) {
        Exp = other.Exp;
      }
      if (other.HasLevelMaxExp) {
        LevelMaxExp = other.LevelMaxExp;
      }
      if (other.HasOil) {
        Oil = other.Oil;
      }
      if (other.HasDogLv) {
        DogLv = other.DogLv;
      }
      if (other.mapArray_.Count != 0) {
        result.mapArray_.Add(other.mapArray_);
      }
      if (other.awardInfos_.Count != 0) {
        result.awardInfos_.Add(other.awardInfos_);
      }
      if (other.HasContinueDays) {
        ContinueDays = other.ContinueDays;
      }
      if (other.HasGold) {
        Gold = other.Gold;
      }
      if (other.HasDogUpgradeMaxEXP) {
        DogUpgradeMaxEXP = other.DogUpgradeMaxEXP;
      }
      if (other.HasDogCurrentEXP) {
        DogCurrentEXP = other.DogCurrentEXP;
      }
      if (other.HasChance) {
        Chance = other.Chance;
      }
      if (other.HasAccount) {
        Account = other.Account;
      }
      if (other.HasInvitationCode) {
        InvitationCode = other.InvitationCode;
      }
      if (other.HasIsPayForAPP) {
        IsPayForAPP = other.IsPayForAPP;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_responeLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _responeLoginFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt32(ref result.uid_);
            break;
          }
          case 18: {
            result.hasUsername = input.ReadString(ref result.username_);
            break;
          }
          case 26: {
            result.hasHead = input.ReadString(ref result.head_);
            break;
          }
          case 32: {
            result.hasLv = input.ReadInt32(ref result.lv_);
            break;
          }
          case 40: {
            result.hasExp = input.ReadInt32(ref result.exp_);
            break;
          }
          case 48: {
            result.hasLevelMaxExp = input.ReadInt32(ref result.levelMaxExp_);
            break;
          }
          case 56: {
            result.hasOil = input.ReadInt32(ref result.oil_);
            break;
          }
          case 64: {
            result.hasDogLv = input.ReadInt32(ref result.dogLv_);
            break;
          }
          case 74: {
            input.ReadMessageArray(tag, field_name, result.mapArray_, global::PMsg_MapUnit.DefaultInstance, extensionRegistry);
            break;
          }
          case 90: {
            input.ReadMessageArray(tag, field_name, result.awardInfos_, global::SignRewardUnit.DefaultInstance, extensionRegistry);
            break;
          }
          case 96: {
            result.hasContinueDays = input.ReadInt32(ref result.continueDays_);
            break;
          }
          case 104: {
            result.hasGold = input.ReadInt32(ref result.gold_);
            break;
          }
          case 136: {
            result.hasDogUpgradeMaxEXP = input.ReadInt32(ref result.dogUpgradeMaxEXP_);
            break;
          }
          case 144: {
            result.hasDogCurrentEXP = input.ReadInt32(ref result.dogCurrentEXP_);
            break;
          }
          case 152: {
            result.hasChance = input.ReadInt32(ref result.chance_);
            break;
          }
          case 162: {
            result.hasAccount = input.ReadString(ref result.account_);
            break;
          }
          case 170: {
            result.hasInvitationCode = input.ReadString(ref result.invitationCode_);
            break;
          }
          case 176: {
            result.hasIsPayForAPP = input.ReadInt32(ref result.isPayForAPP_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public int Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(int value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0;
      return this;
    }
    
    public bool HasUsername {
      get { return result.hasUsername; }
    }
    public string Username {
      get { return result.Username; }
      set { SetUsername(value); }
    }
    public Builder SetUsername(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUsername = true;
      result.username_ = value;
      return this;
    }
    public Builder ClearUsername() {
      PrepareBuilder();
      result.hasUsername = false;
      result.username_ = "";
      return this;
    }
    
    public bool HasHead {
      get { return result.hasHead; }
    }
    public string Head {
      get { return result.Head; }
      set { SetHead(value); }
    }
    public Builder SetHead(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasHead = true;
      result.head_ = value;
      return this;
    }
    public Builder ClearHead() {
      PrepareBuilder();
      result.hasHead = false;
      result.head_ = "";
      return this;
    }
    
    public bool HasLv {
      get { return result.hasLv; }
    }
    public int Lv {
      get { return result.Lv; }
      set { SetLv(value); }
    }
    public Builder SetLv(int value) {
      PrepareBuilder();
      result.hasLv = true;
      result.lv_ = value;
      return this;
    }
    public Builder ClearLv() {
      PrepareBuilder();
      result.hasLv = false;
      result.lv_ = 0;
      return this;
    }
    
    public bool HasExp {
      get { return result.hasExp; }
    }
    public int Exp {
      get { return result.Exp; }
      set { SetExp(value); }
    }
    public Builder SetExp(int value) {
      PrepareBuilder();
      result.hasExp = true;
      result.exp_ = value;
      return this;
    }
    public Builder ClearExp() {
      PrepareBuilder();
      result.hasExp = false;
      result.exp_ = 0;
      return this;
    }
    
    public bool HasLevelMaxExp {
      get { return result.hasLevelMaxExp; }
    }
    public int LevelMaxExp {
      get { return result.LevelMaxExp; }
      set { SetLevelMaxExp(value); }
    }
    public Builder SetLevelMaxExp(int value) {
      PrepareBuilder();
      result.hasLevelMaxExp = true;
      result.levelMaxExp_ = value;
      return this;
    }
    public Builder ClearLevelMaxExp() {
      PrepareBuilder();
      result.hasLevelMaxExp = false;
      result.levelMaxExp_ = 0;
      return this;
    }
    
    public bool HasOil {
      get { return result.hasOil; }
    }
    public int Oil {
      get { return result.Oil; }
      set { SetOil(value); }
    }
    public Builder SetOil(int value) {
      PrepareBuilder();
      result.hasOil = true;
      result.oil_ = value;
      return this;
    }
    public Builder ClearOil() {
      PrepareBuilder();
      result.hasOil = false;
      result.oil_ = 0;
      return this;
    }
    
    public bool HasDogLv {
      get { return result.hasDogLv; }
    }
    public int DogLv {
      get { return result.DogLv; }
      set { SetDogLv(value); }
    }
    public Builder SetDogLv(int value) {
      PrepareBuilder();
      result.hasDogLv = true;
      result.dogLv_ = value;
      return this;
    }
    public Builder ClearDogLv() {
      PrepareBuilder();
      result.hasDogLv = false;
      result.dogLv_ = 0;
      return this;
    }
    
    public pbc::IPopsicleList<global::PMsg_MapUnit> MapArrayList {
      get { return PrepareBuilder().mapArray_; }
    }
    public int MapArrayCount {
      get { return result.MapArrayCount; }
    }
    public global::PMsg_MapUnit GetMapArray(int index) {
      return result.GetMapArray(index);
    }
    public Builder SetMapArray(int index, global::PMsg_MapUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.mapArray_[index] = value;
      return this;
    }
    public Builder SetMapArray(int index, global::PMsg_MapUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.mapArray_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddMapArray(global::PMsg_MapUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.mapArray_.Add(value);
      return this;
    }
    public Builder AddMapArray(global::PMsg_MapUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.mapArray_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeMapArray(scg::IEnumerable<global::PMsg_MapUnit> values) {
      PrepareBuilder();
      result.mapArray_.Add(values);
      return this;
    }
    public Builder ClearMapArray() {
      PrepareBuilder();
      result.mapArray_.Clear();
      return this;
    }
    
    public pbc::IPopsicleList<global::SignRewardUnit> AwardInfosList {
      get { return PrepareBuilder().awardInfos_; }
    }
    public int AwardInfosCount {
      get { return result.AwardInfosCount; }
    }
    public global::SignRewardUnit GetAwardInfos(int index) {
      return result.GetAwardInfos(index);
    }
    public Builder SetAwardInfos(int index, global::SignRewardUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.awardInfos_[index] = value;
      return this;
    }
    public Builder SetAwardInfos(int index, global::SignRewardUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.awardInfos_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddAwardInfos(global::SignRewardUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.awardInfos_.Add(value);
      return this;
    }
    public Builder AddAwardInfos(global::SignRewardUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.awardInfos_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeAwardInfos(scg::IEnumerable<global::SignRewardUnit> values) {
      PrepareBuilder();
      result.awardInfos_.Add(values);
      return this;
    }
    public Builder ClearAwardInfos() {
      PrepareBuilder();
      result.awardInfos_.Clear();
      return this;
    }
    
    public bool HasContinueDays {
      get { return result.hasContinueDays; }
    }
    public int ContinueDays {
      get { return result.ContinueDays; }
      set { SetContinueDays(value); }
    }
    public Builder SetContinueDays(int value) {
      PrepareBuilder();
      result.hasContinueDays = true;
      result.continueDays_ = value;
      return this;
    }
    public Builder ClearContinueDays() {
      PrepareBuilder();
      result.hasContinueDays = false;
      result.continueDays_ = 0;
      return this;
    }
    
    public bool HasGold {
      get { return result.hasGold; }
    }
    public int Gold {
      get { return result.Gold; }
      set { SetGold(value); }
    }
    public Builder SetGold(int value) {
      PrepareBuilder();
      result.hasGold = true;
      result.gold_ = value;
      return this;
    }
    public Builder ClearGold() {
      PrepareBuilder();
      result.hasGold = false;
      result.gold_ = 0;
      return this;
    }
    
    public bool HasDogUpgradeMaxEXP {
      get { return result.hasDogUpgradeMaxEXP; }
    }
    public int DogUpgradeMaxEXP {
      get { return result.DogUpgradeMaxEXP; }
      set { SetDogUpgradeMaxEXP(value); }
    }
    public Builder SetDogUpgradeMaxEXP(int value) {
      PrepareBuilder();
      result.hasDogUpgradeMaxEXP = true;
      result.dogUpgradeMaxEXP_ = value;
      return this;
    }
    public Builder ClearDogUpgradeMaxEXP() {
      PrepareBuilder();
      result.hasDogUpgradeMaxEXP = false;
      result.dogUpgradeMaxEXP_ = 0;
      return this;
    }
    
    public bool HasDogCurrentEXP {
      get { return result.hasDogCurrentEXP; }
    }
    public int DogCurrentEXP {
      get { return result.DogCurrentEXP; }
      set { SetDogCurrentEXP(value); }
    }
    public Builder SetDogCurrentEXP(int value) {
      PrepareBuilder();
      result.hasDogCurrentEXP = true;
      result.dogCurrentEXP_ = value;
      return this;
    }
    public Builder ClearDogCurrentEXP() {
      PrepareBuilder();
      result.hasDogCurrentEXP = false;
      result.dogCurrentEXP_ = 0;
      return this;
    }
    
    public bool HasChance {
      get { return result.hasChance; }
    }
    public int Chance {
      get { return result.Chance; }
      set { SetChance(value); }
    }
    public Builder SetChance(int value) {
      PrepareBuilder();
      result.hasChance = true;
      result.chance_ = value;
      return this;
    }
    public Builder ClearChance() {
      PrepareBuilder();
      result.hasChance = false;
      result.chance_ = 0;
      return this;
    }
    
    public bool HasAccount {
      get { return result.hasAccount; }
    }
    public string Account {
      get { return result.Account; }
      set { SetAccount(value); }
    }
    public Builder SetAccount(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAccount = true;
      result.account_ = value;
      return this;
    }
    public Builder ClearAccount() {
      PrepareBuilder();
      result.hasAccount = false;
      result.account_ = "";
      return this;
    }
    
    public bool HasInvitationCode {
      get { return result.hasInvitationCode; }
    }
    public string InvitationCode {
      get { return result.InvitationCode; }
      set { SetInvitationCode(value); }
    }
    public Builder SetInvitationCode(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInvitationCode = true;
      result.invitationCode_ = value;
      return this;
    }
    public Builder ClearInvitationCode() {
      PrepareBuilder();
      result.hasInvitationCode = false;
      result.invitationCode_ = "";
      return this;
    }
    
    public bool HasIsPayForAPP {
      get { return result.hasIsPayForAPP; }
    }
    public int IsPayForAPP {
      get { return result.IsPayForAPP; }
      set { SetIsPayForAPP(value); }
    }
    public Builder SetIsPayForAPP(int value) {
      PrepareBuilder();
      result.hasIsPayForAPP = true;
      result.isPayForAPP_ = value;
      return this;
    }
    public Builder ClearIsPayForAPP() {
      PrepareBuilder();
      result.hasIsPayForAPP = false;
      result.isPayForAPP_ = 0;
      return this;
    }
  }
  static ResponeLogin() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class SignRewardUnit : pb::GeneratedMessage<SignRewardUnit, SignRewardUnit.Builder> {
  private SignRewardUnit() { }
  private static readonly SignRewardUnit defaultInstance = new SignRewardUnit().MakeReadOnly();
  private static readonly string[] _signRewardUnitFieldNames = new string[] { "Coid", "award" };
  private static readonly uint[] _signRewardUnitFieldTags = new uint[] { 8, 18 };
  public static SignRewardUnit DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override SignRewardUnit DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override SignRewardUnit ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_SignRewardUnit__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<SignRewardUnit, SignRewardUnit.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_SignRewardUnit__FieldAccessorTable; }
  }
  
  public const int CoidFieldNumber = 1;
  private bool hasCoid;
  private int coid_;
  public bool HasCoid {
    get { return hasCoid; }
  }
  public int Coid {
    get { return coid_; }
  }
  
  public const int AwardFieldNumber = 2;
  private bool hasAward;
  private global::PMsg_StagePropUnit award_;
  public bool HasAward {
    get { return hasAward; }
  }
  public global::PMsg_StagePropUnit Award {
    get { return award_ ?? global::PMsg_StagePropUnit.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _signRewardUnitFieldNames;
    if (hasCoid) {
      output.WriteInt32(1, field_names[0], Coid);
    }
    if (hasAward) {
      output.WriteMessage(2, field_names[1], Award);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCoid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Coid);
    }
    if (hasAward) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, Award);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static SignRewardUnit ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SignRewardUnit ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SignRewardUnit ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static SignRewardUnit ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static SignRewardUnit ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SignRewardUnit ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static SignRewardUnit ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static SignRewardUnit ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static SignRewardUnit ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static SignRewardUnit ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private SignRewardUnit MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(SignRewardUnit prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<SignRewardUnit, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(SignRewardUnit cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private SignRewardUnit result;
    
    private SignRewardUnit PrepareBuilder() {
      if (resultIsReadOnly) {
        SignRewardUnit original = result;
        result = new SignRewardUnit();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override SignRewardUnit MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::SignRewardUnit.Descriptor; }
    }
    
    public override SignRewardUnit DefaultInstanceForType {
      get { return global::SignRewardUnit.DefaultInstance; }
    }
    
    public override SignRewardUnit BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is SignRewardUnit) {
        return MergeFrom((SignRewardUnit) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(SignRewardUnit other) {
      if (other == global::SignRewardUnit.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCoid) {
        Coid = other.Coid;
      }
      if (other.HasAward) {
        MergeAward(other.Award);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_signRewardUnitFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _signRewardUnitFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCoid = input.ReadInt32(ref result.coid_);
            break;
          }
          case 18: {
            global::PMsg_StagePropUnit.Builder subBuilder = global::PMsg_StagePropUnit.CreateBuilder();
            if (result.hasAward) {
              subBuilder.MergeFrom(Award);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Award = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCoid {
      get { return result.hasCoid; }
    }
    public int Coid {
      get { return result.Coid; }
      set { SetCoid(value); }
    }
    public Builder SetCoid(int value) {
      PrepareBuilder();
      result.hasCoid = true;
      result.coid_ = value;
      return this;
    }
    public Builder ClearCoid() {
      PrepareBuilder();
      result.hasCoid = false;
      result.coid_ = 0;
      return this;
    }
    
    public bool HasAward {
     get { return result.hasAward; }
    }
    public global::PMsg_StagePropUnit Award {
      get { return result.Award; }
      set { SetAward(value); }
    }
    public Builder SetAward(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAward = true;
      result.award_ = value;
      return this;
    }
    public Builder SetAward(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasAward = true;
      result.award_ = builderForValue.Build();
      return this;
    }
    public Builder MergeAward(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasAward &&
          result.award_ != global::PMsg_StagePropUnit.DefaultInstance) {
          result.award_ = global::PMsg_StagePropUnit.CreateBuilder(result.award_).MergeFrom(value).BuildPartial();
      } else {
        result.award_ = value;
      }
      result.hasAward = true;
      return this;
    }
    public Builder ClearAward() {
      PrepareBuilder();
      result.hasAward = false;
      result.award_ = null;
      return this;
    }
  }
  static SignRewardUnit() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ReqReLogin : pb::GeneratedMessage<ReqReLogin, ReqReLogin.Builder> {
  private ReqReLogin() { }
  private static readonly ReqReLogin defaultInstance = new ReqReLogin().MakeReadOnly();
  private static readonly string[] _reqReLoginFieldNames = new string[] { "token", "uid" };
  private static readonly uint[] _reqReLoginFieldTags = new uint[] { 18, 8 };
  public static ReqReLogin DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ReqReLogin DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ReqReLogin ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_ReqReLogin__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ReqReLogin, ReqReLogin.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_ReqReLogin__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private int uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public int Uid {
    get { return uid_; }
  }
  
  public const int TokenFieldNumber = 2;
  private bool hasToken;
  private string token_ = "";
  public bool HasToken {
    get { return hasToken; }
  }
  public string Token {
    get { return token_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _reqReLoginFieldNames;
    if (hasUid) {
      output.WriteInt32(1, field_names[1], Uid);
    }
    if (hasToken) {
      output.WriteString(2, field_names[0], Token);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Uid);
    }
    if (hasToken) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Token);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ReqReLogin ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqReLogin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqReLogin ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ReqReLogin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ReqReLogin ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqReLogin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ReqReLogin ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ReqReLogin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ReqReLogin ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ReqReLogin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ReqReLogin MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ReqReLogin prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ReqReLogin, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ReqReLogin cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ReqReLogin result;
    
    private ReqReLogin PrepareBuilder() {
      if (resultIsReadOnly) {
        ReqReLogin original = result;
        result = new ReqReLogin();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ReqReLogin MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ReqReLogin.Descriptor; }
    }
    
    public override ReqReLogin DefaultInstanceForType {
      get { return global::ReqReLogin.DefaultInstance; }
    }
    
    public override ReqReLogin BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ReqReLogin) {
        return MergeFrom((ReqReLogin) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ReqReLogin other) {
      if (other == global::ReqReLogin.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_reqReLoginFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _reqReLoginFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt32(ref result.uid_);
            break;
          }
          case 18: {
            result.hasToken = input.ReadString(ref result.token_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public int Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(int value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0;
      return this;
    }
    
    public bool HasToken {
      get { return result.hasToken; }
    }
    public string Token {
      get { return result.Token; }
      set { SetToken(value); }
    }
    public Builder SetToken(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasToken = true;
      result.token_ = value;
      return this;
    }
    public Builder ClearToken() {
      PrepareBuilder();
      result.hasToken = false;
      result.token_ = "";
      return this;
    }
  }
  static ReqReLogin() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Register_Req : pb::GeneratedMessage<Farm_Game_Register_Req, Farm_Game_Register_Req.Builder> {
  private Farm_Game_Register_Req() { }
  private static readonly Farm_Game_Register_Req defaultInstance = new Farm_Game_Register_Req().MakeReadOnly();
  private static readonly string[] _farmGameRegisterReqFieldNames = new string[] { "BeRecommandedCode", "PhoneNum", "VeriCode", "password", "pattern" };
  private static readonly uint[] _farmGameRegisterReqFieldTags = new uint[] { 42, 10, 18, 26, 32 };
  public static Farm_Game_Register_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Register_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Register_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Register_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Register_Req, Farm_Game_Register_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Register_Req__FieldAccessorTable; }
  }
  
  public const int PhoneNumFieldNumber = 1;
  private bool hasPhoneNum;
  private string phoneNum_ = "";
  public bool HasPhoneNum {
    get { return hasPhoneNum; }
  }
  public string PhoneNum {
    get { return phoneNum_; }
  }
  
  public const int VeriCodeFieldNumber = 2;
  private bool hasVeriCode;
  private string veriCode_ = "";
  public bool HasVeriCode {
    get { return hasVeriCode; }
  }
  public string VeriCode {
    get { return veriCode_; }
  }
  
  public const int PasswordFieldNumber = 3;
  private bool hasPassword;
  private string password_ = "";
  public bool HasPassword {
    get { return hasPassword; }
  }
  public string Password {
    get { return password_; }
  }
  
  public const int PatternFieldNumber = 4;
  private bool hasPattern;
  private int pattern_;
  public bool HasPattern {
    get { return hasPattern; }
  }
  public int Pattern {
    get { return pattern_; }
  }
  
  public const int BeRecommandedCodeFieldNumber = 5;
  private bool hasBeRecommandedCode;
  private string beRecommandedCode_ = "";
  public bool HasBeRecommandedCode {
    get { return hasBeRecommandedCode; }
  }
  public string BeRecommandedCode {
    get { return beRecommandedCode_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameRegisterReqFieldNames;
    if (hasPhoneNum) {
      output.WriteString(1, field_names[1], PhoneNum);
    }
    if (hasVeriCode) {
      output.WriteString(2, field_names[2], VeriCode);
    }
    if (hasPassword) {
      output.WriteString(3, field_names[3], Password);
    }
    if (hasPattern) {
      output.WriteInt32(4, field_names[4], Pattern);
    }
    if (hasBeRecommandedCode) {
      output.WriteString(5, field_names[0], BeRecommandedCode);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasPhoneNum) {
      size += pb::CodedOutputStream.ComputeStringSize(1, PhoneNum);
    }
    if (hasVeriCode) {
      size += pb::CodedOutputStream.ComputeStringSize(2, VeriCode);
    }
    if (hasPassword) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Password);
    }
    if (hasPattern) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, Pattern);
    }
    if (hasBeRecommandedCode) {
      size += pb::CodedOutputStream.ComputeStringSize(5, BeRecommandedCode);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Register_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Register_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Register_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Register_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Register_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Register_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Register_Req result;
    
    private Farm_Game_Register_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Register_Req original = result;
        result = new Farm_Game_Register_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Register_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Register_Req.Descriptor; }
    }
    
    public override Farm_Game_Register_Req DefaultInstanceForType {
      get { return global::Farm_Game_Register_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Register_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Register_Req) {
        return MergeFrom((Farm_Game_Register_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Register_Req other) {
      if (other == global::Farm_Game_Register_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPhoneNum) {
        PhoneNum = other.PhoneNum;
      }
      if (other.HasVeriCode) {
        VeriCode = other.VeriCode;
      }
      if (other.HasPassword) {
        Password = other.Password;
      }
      if (other.HasPattern) {
        Pattern = other.Pattern;
      }
      if (other.HasBeRecommandedCode) {
        BeRecommandedCode = other.BeRecommandedCode;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameRegisterReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameRegisterReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasPhoneNum = input.ReadString(ref result.phoneNum_);
            break;
          }
          case 18: {
            result.hasVeriCode = input.ReadString(ref result.veriCode_);
            break;
          }
          case 26: {
            result.hasPassword = input.ReadString(ref result.password_);
            break;
          }
          case 32: {
            result.hasPattern = input.ReadInt32(ref result.pattern_);
            break;
          }
          case 42: {
            result.hasBeRecommandedCode = input.ReadString(ref result.beRecommandedCode_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPhoneNum {
      get { return result.hasPhoneNum; }
    }
    public string PhoneNum {
      get { return result.PhoneNum; }
      set { SetPhoneNum(value); }
    }
    public Builder SetPhoneNum(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPhoneNum = true;
      result.phoneNum_ = value;
      return this;
    }
    public Builder ClearPhoneNum() {
      PrepareBuilder();
      result.hasPhoneNum = false;
      result.phoneNum_ = "";
      return this;
    }
    
    public bool HasVeriCode {
      get { return result.hasVeriCode; }
    }
    public string VeriCode {
      get { return result.VeriCode; }
      set { SetVeriCode(value); }
    }
    public Builder SetVeriCode(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVeriCode = true;
      result.veriCode_ = value;
      return this;
    }
    public Builder ClearVeriCode() {
      PrepareBuilder();
      result.hasVeriCode = false;
      result.veriCode_ = "";
      return this;
    }
    
    public bool HasPassword {
      get { return result.hasPassword; }
    }
    public string Password {
      get { return result.Password; }
      set { SetPassword(value); }
    }
    public Builder SetPassword(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPassword = true;
      result.password_ = value;
      return this;
    }
    public Builder ClearPassword() {
      PrepareBuilder();
      result.hasPassword = false;
      result.password_ = "";
      return this;
    }
    
    public bool HasPattern {
      get { return result.hasPattern; }
    }
    public int Pattern {
      get { return result.Pattern; }
      set { SetPattern(value); }
    }
    public Builder SetPattern(int value) {
      PrepareBuilder();
      result.hasPattern = true;
      result.pattern_ = value;
      return this;
    }
    public Builder ClearPattern() {
      PrepareBuilder();
      result.hasPattern = false;
      result.pattern_ = 0;
      return this;
    }
    
    public bool HasBeRecommandedCode {
      get { return result.hasBeRecommandedCode; }
    }
    public string BeRecommandedCode {
      get { return result.BeRecommandedCode; }
      set { SetBeRecommandedCode(value); }
    }
    public Builder SetBeRecommandedCode(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBeRecommandedCode = true;
      result.beRecommandedCode_ = value;
      return this;
    }
    public Builder ClearBeRecommandedCode() {
      PrepareBuilder();
      result.hasBeRecommandedCode = false;
      result.beRecommandedCode_ = "";
      return this;
    }
  }
  static Farm_Game_Register_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_VeriCode_Req : pb::GeneratedMessage<Farm_Game_VeriCode_Req, Farm_Game_VeriCode_Req.Builder> {
  private Farm_Game_VeriCode_Req() { }
  private static readonly Farm_Game_VeriCode_Req defaultInstance = new Farm_Game_VeriCode_Req().MakeReadOnly();
  private static readonly string[] _farmGameVeriCodeReqFieldNames = new string[] { "PhoneNum" };
  private static readonly uint[] _farmGameVeriCodeReqFieldTags = new uint[] { 10 };
  public static Farm_Game_VeriCode_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_VeriCode_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_VeriCode_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_VeriCode_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_VeriCode_Req, Farm_Game_VeriCode_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_VeriCode_Req__FieldAccessorTable; }
  }
  
  public const int PhoneNumFieldNumber = 1;
  private bool hasPhoneNum;
  private string phoneNum_ = "";
  public bool HasPhoneNum {
    get { return hasPhoneNum; }
  }
  public string PhoneNum {
    get { return phoneNum_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameVeriCodeReqFieldNames;
    if (hasPhoneNum) {
      output.WriteString(1, field_names[0], PhoneNum);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasPhoneNum) {
      size += pb::CodedOutputStream.ComputeStringSize(1, PhoneNum);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_VeriCode_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_VeriCode_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_VeriCode_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_VeriCode_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_VeriCode_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_VeriCode_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_VeriCode_Req result;
    
    private Farm_Game_VeriCode_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_VeriCode_Req original = result;
        result = new Farm_Game_VeriCode_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_VeriCode_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_VeriCode_Req.Descriptor; }
    }
    
    public override Farm_Game_VeriCode_Req DefaultInstanceForType {
      get { return global::Farm_Game_VeriCode_Req.DefaultInstance; }
    }
    
    public override Farm_Game_VeriCode_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_VeriCode_Req) {
        return MergeFrom((Farm_Game_VeriCode_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_VeriCode_Req other) {
      if (other == global::Farm_Game_VeriCode_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPhoneNum) {
        PhoneNum = other.PhoneNum;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameVeriCodeReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameVeriCodeReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasPhoneNum = input.ReadString(ref result.phoneNum_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPhoneNum {
      get { return result.hasPhoneNum; }
    }
    public string PhoneNum {
      get { return result.PhoneNum; }
      set { SetPhoneNum(value); }
    }
    public Builder SetPhoneNum(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPhoneNum = true;
      result.phoneNum_ = value;
      return this;
    }
    public Builder ClearPhoneNum() {
      PrepareBuilder();
      result.hasPhoneNum = false;
      result.phoneNum_ = "";
      return this;
    }
  }
  static Farm_Game_VeriCode_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_UserInfo_Req : pb::GeneratedMessage<Farm_Game_UserInfo_Req, Farm_Game_UserInfo_Req.Builder> {
  private Farm_Game_UserInfo_Req() { }
  private static readonly Farm_Game_UserInfo_Req defaultInstance = new Farm_Game_UserInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameUserInfoReqFieldNames = new string[] { "Uid" };
  private static readonly uint[] _farmGameUserInfoReqFieldTags = new uint[] { 8 };
  public static Farm_Game_UserInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_UserInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_UserInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_UserInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_UserInfo_Req, Farm_Game_UserInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_UserInfo_Req__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private int uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public int Uid {
    get { return uid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameUserInfoReqFieldNames;
    if (hasUid) {
      output.WriteInt32(1, field_names[0], Uid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Uid);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_UserInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_UserInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_UserInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_UserInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_UserInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_UserInfo_Req result;
    
    private Farm_Game_UserInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_UserInfo_Req original = result;
        result = new Farm_Game_UserInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_UserInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_UserInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_UserInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_UserInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_UserInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_UserInfo_Req) {
        return MergeFrom((Farm_Game_UserInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_UserInfo_Req other) {
      if (other == global::Farm_Game_UserInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameUserInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameUserInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt32(ref result.uid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public int Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(int value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0;
      return this;
    }
  }
  static Farm_Game_UserInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_UserInfo_Anw : pb::GeneratedMessage<Farm_Game_UserInfo_Anw, Farm_Game_UserInfo_Anw.Builder> {
  private Farm_Game_UserInfo_Anw() { }
  private static readonly Farm_Game_UserInfo_Anw defaultInstance = new Farm_Game_UserInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameUserInfoAnwFieldNames = new string[] { "Account", "Aciton", "DogCurrentEXP", "DogUpgradeMaxEXP", "GameMoney", "GameName", "HeaderIcon", "LevelMaxExp", "Rank", "UserExp", "UserGameID", "UserLevel", "dog_lv", "recommondCode", "url" };
  private static readonly uint[] _farmGameUserInfoAnwFieldTags = new uint[] { 122, 128, 144, 136, 40, 18, 34, 88, 112, 80, 8, 64, 152, 72, 106 };
  public static Farm_Game_UserInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_UserInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_UserInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_UserInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_UserInfo_Anw, Farm_Game_UserInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_UserInfo_Anw__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int GameNameFieldNumber = 2;
  private bool hasGameName;
  private string gameName_ = "";
  public bool HasGameName {
    get { return hasGameName; }
  }
  public string GameName {
    get { return gameName_; }
  }
  
  public const int HeaderIconFieldNumber = 4;
  private bool hasHeaderIcon;
  private string headerIcon_ = "";
  public bool HasHeaderIcon {
    get { return hasHeaderIcon; }
  }
  public string HeaderIcon {
    get { return headerIcon_; }
  }
  
  public const int GameMoneyFieldNumber = 5;
  private bool hasGameMoney;
  private int gameMoney_;
  public bool HasGameMoney {
    get { return hasGameMoney; }
  }
  public int GameMoney {
    get { return gameMoney_; }
  }
  
  public const int UserLevelFieldNumber = 8;
  private bool hasUserLevel;
  private int userLevel_;
  public bool HasUserLevel {
    get { return hasUserLevel; }
  }
  public int UserLevel {
    get { return userLevel_; }
  }
  
  public const int RecommondCodeFieldNumber = 9;
  private bool hasRecommondCode;
  private int recommondCode_;
  public bool HasRecommondCode {
    get { return hasRecommondCode; }
  }
  public int RecommondCode {
    get { return recommondCode_; }
  }
  
  public const int UserExpFieldNumber = 10;
  private bool hasUserExp;
  private int userExp_;
  public bool HasUserExp {
    get { return hasUserExp; }
  }
  public int UserExp {
    get { return userExp_; }
  }
  
  public const int LevelMaxExpFieldNumber = 11;
  private bool hasLevelMaxExp;
  private int levelMaxExp_;
  public bool HasLevelMaxExp {
    get { return hasLevelMaxExp; }
  }
  public int LevelMaxExp {
    get { return levelMaxExp_; }
  }
  
  public const int UrlFieldNumber = 13;
  private bool hasUrl;
  private string url_ = "";
  public bool HasUrl {
    get { return hasUrl; }
  }
  public string Url {
    get { return url_; }
  }
  
  public const int RankFieldNumber = 14;
  private bool hasRank;
  private int rank_;
  public bool HasRank {
    get { return hasRank; }
  }
  public int Rank {
    get { return rank_; }
  }
  
  public const int AccountFieldNumber = 15;
  private bool hasAccount;
  private string account_ = "";
  public bool HasAccount {
    get { return hasAccount; }
  }
  public string Account {
    get { return account_; }
  }
  
  public const int AcitonFieldNumber = 16;
  private bool hasAciton;
  private int aciton_;
  public bool HasAciton {
    get { return hasAciton; }
  }
  public int Aciton {
    get { return aciton_; }
  }
  
  public const int DogUpgradeMaxEXPFieldNumber = 17;
  private bool hasDogUpgradeMaxEXP;
  private int dogUpgradeMaxEXP_;
  public bool HasDogUpgradeMaxEXP {
    get { return hasDogUpgradeMaxEXP; }
  }
  public int DogUpgradeMaxEXP {
    get { return dogUpgradeMaxEXP_; }
  }
  
  public const int DogCurrentEXPFieldNumber = 18;
  private bool hasDogCurrentEXP;
  private int dogCurrentEXP_;
  public bool HasDogCurrentEXP {
    get { return hasDogCurrentEXP; }
  }
  public int DogCurrentEXP {
    get { return dogCurrentEXP_; }
  }
  
  public const int DogLvFieldNumber = 19;
  private bool hasDogLv;
  private int dogLv_;
  public bool HasDogLv {
    get { return hasDogLv; }
  }
  public int DogLv {
    get { return dogLv_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasAccount) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameUserInfoAnwFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[10], UserGameID);
    }
    if (hasGameName) {
      output.WriteString(2, field_names[5], GameName);
    }
    if (hasHeaderIcon) {
      output.WriteString(4, field_names[6], HeaderIcon);
    }
    if (hasGameMoney) {
      output.WriteInt32(5, field_names[4], GameMoney);
    }
    if (hasUserLevel) {
      output.WriteInt32(8, field_names[11], UserLevel);
    }
    if (hasRecommondCode) {
      output.WriteInt32(9, field_names[13], RecommondCode);
    }
    if (hasUserExp) {
      output.WriteInt32(10, field_names[9], UserExp);
    }
    if (hasLevelMaxExp) {
      output.WriteInt32(11, field_names[7], LevelMaxExp);
    }
    if (hasUrl) {
      output.WriteString(13, field_names[14], Url);
    }
    if (hasRank) {
      output.WriteInt32(14, field_names[8], Rank);
    }
    if (hasAccount) {
      output.WriteString(15, field_names[0], Account);
    }
    if (hasAciton) {
      output.WriteInt32(16, field_names[1], Aciton);
    }
    if (hasDogUpgradeMaxEXP) {
      output.WriteInt32(17, field_names[3], DogUpgradeMaxEXP);
    }
    if (hasDogCurrentEXP) {
      output.WriteInt32(18, field_names[2], DogCurrentEXP);
    }
    if (hasDogLv) {
      output.WriteInt32(19, field_names[12], DogLv);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasGameName) {
      size += pb::CodedOutputStream.ComputeStringSize(2, GameName);
    }
    if (hasHeaderIcon) {
      size += pb::CodedOutputStream.ComputeStringSize(4, HeaderIcon);
    }
    if (hasGameMoney) {
      size += pb::CodedOutputStream.ComputeInt32Size(5, GameMoney);
    }
    if (hasUserLevel) {
      size += pb::CodedOutputStream.ComputeInt32Size(8, UserLevel);
    }
    if (hasRecommondCode) {
      size += pb::CodedOutputStream.ComputeInt32Size(9, RecommondCode);
    }
    if (hasUserExp) {
      size += pb::CodedOutputStream.ComputeInt32Size(10, UserExp);
    }
    if (hasLevelMaxExp) {
      size += pb::CodedOutputStream.ComputeInt32Size(11, LevelMaxExp);
    }
    if (hasUrl) {
      size += pb::CodedOutputStream.ComputeStringSize(13, Url);
    }
    if (hasRank) {
      size += pb::CodedOutputStream.ComputeInt32Size(14, Rank);
    }
    if (hasAccount) {
      size += pb::CodedOutputStream.ComputeStringSize(15, Account);
    }
    if (hasAciton) {
      size += pb::CodedOutputStream.ComputeInt32Size(16, Aciton);
    }
    if (hasDogUpgradeMaxEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(17, DogUpgradeMaxEXP);
    }
    if (hasDogCurrentEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(18, DogCurrentEXP);
    }
    if (hasDogLv) {
      size += pb::CodedOutputStream.ComputeInt32Size(19, DogLv);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_UserInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_UserInfo_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_UserInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_UserInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_UserInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_UserInfo_Anw result;
    
    private Farm_Game_UserInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_UserInfo_Anw original = result;
        result = new Farm_Game_UserInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_UserInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_UserInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_UserInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_UserInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_UserInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_UserInfo_Anw) {
        return MergeFrom((Farm_Game_UserInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_UserInfo_Anw other) {
      if (other == global::Farm_Game_UserInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasGameName) {
        GameName = other.GameName;
      }
      if (other.HasHeaderIcon) {
        HeaderIcon = other.HeaderIcon;
      }
      if (other.HasGameMoney) {
        GameMoney = other.GameMoney;
      }
      if (other.HasUserLevel) {
        UserLevel = other.UserLevel;
      }
      if (other.HasRecommondCode) {
        RecommondCode = other.RecommondCode;
      }
      if (other.HasUserExp) {
        UserExp = other.UserExp;
      }
      if (other.HasLevelMaxExp) {
        LevelMaxExp = other.LevelMaxExp;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      if (other.HasRank) {
        Rank = other.Rank;
      }
      if (other.HasAccount) {
        Account = other.Account;
      }
      if (other.HasAciton) {
        Aciton = other.Aciton;
      }
      if (other.HasDogUpgradeMaxEXP) {
        DogUpgradeMaxEXP = other.DogUpgradeMaxEXP;
      }
      if (other.HasDogCurrentEXP) {
        DogCurrentEXP = other.DogCurrentEXP;
      }
      if (other.HasDogLv) {
        DogLv = other.DogLv;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameUserInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameUserInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 18: {
            result.hasGameName = input.ReadString(ref result.gameName_);
            break;
          }
          case 34: {
            result.hasHeaderIcon = input.ReadString(ref result.headerIcon_);
            break;
          }
          case 40: {
            result.hasGameMoney = input.ReadInt32(ref result.gameMoney_);
            break;
          }
          case 64: {
            result.hasUserLevel = input.ReadInt32(ref result.userLevel_);
            break;
          }
          case 72: {
            result.hasRecommondCode = input.ReadInt32(ref result.recommondCode_);
            break;
          }
          case 80: {
            result.hasUserExp = input.ReadInt32(ref result.userExp_);
            break;
          }
          case 88: {
            result.hasLevelMaxExp = input.ReadInt32(ref result.levelMaxExp_);
            break;
          }
          case 106: {
            result.hasUrl = input.ReadString(ref result.url_);
            break;
          }
          case 112: {
            result.hasRank = input.ReadInt32(ref result.rank_);
            break;
          }
          case 122: {
            result.hasAccount = input.ReadString(ref result.account_);
            break;
          }
          case 128: {
            result.hasAciton = input.ReadInt32(ref result.aciton_);
            break;
          }
          case 136: {
            result.hasDogUpgradeMaxEXP = input.ReadInt32(ref result.dogUpgradeMaxEXP_);
            break;
          }
          case 144: {
            result.hasDogCurrentEXP = input.ReadInt32(ref result.dogCurrentEXP_);
            break;
          }
          case 152: {
            result.hasDogLv = input.ReadInt32(ref result.dogLv_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasGameName {
      get { return result.hasGameName; }
    }
    public string GameName {
      get { return result.GameName; }
      set { SetGameName(value); }
    }
    public Builder SetGameName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasGameName = true;
      result.gameName_ = value;
      return this;
    }
    public Builder ClearGameName() {
      PrepareBuilder();
      result.hasGameName = false;
      result.gameName_ = "";
      return this;
    }
    
    public bool HasHeaderIcon {
      get { return result.hasHeaderIcon; }
    }
    public string HeaderIcon {
      get { return result.HeaderIcon; }
      set { SetHeaderIcon(value); }
    }
    public Builder SetHeaderIcon(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasHeaderIcon = true;
      result.headerIcon_ = value;
      return this;
    }
    public Builder ClearHeaderIcon() {
      PrepareBuilder();
      result.hasHeaderIcon = false;
      result.headerIcon_ = "";
      return this;
    }
    
    public bool HasGameMoney {
      get { return result.hasGameMoney; }
    }
    public int GameMoney {
      get { return result.GameMoney; }
      set { SetGameMoney(value); }
    }
    public Builder SetGameMoney(int value) {
      PrepareBuilder();
      result.hasGameMoney = true;
      result.gameMoney_ = value;
      return this;
    }
    public Builder ClearGameMoney() {
      PrepareBuilder();
      result.hasGameMoney = false;
      result.gameMoney_ = 0;
      return this;
    }
    
    public bool HasUserLevel {
      get { return result.hasUserLevel; }
    }
    public int UserLevel {
      get { return result.UserLevel; }
      set { SetUserLevel(value); }
    }
    public Builder SetUserLevel(int value) {
      PrepareBuilder();
      result.hasUserLevel = true;
      result.userLevel_ = value;
      return this;
    }
    public Builder ClearUserLevel() {
      PrepareBuilder();
      result.hasUserLevel = false;
      result.userLevel_ = 0;
      return this;
    }
    
    public bool HasRecommondCode {
      get { return result.hasRecommondCode; }
    }
    public int RecommondCode {
      get { return result.RecommondCode; }
      set { SetRecommondCode(value); }
    }
    public Builder SetRecommondCode(int value) {
      PrepareBuilder();
      result.hasRecommondCode = true;
      result.recommondCode_ = value;
      return this;
    }
    public Builder ClearRecommondCode() {
      PrepareBuilder();
      result.hasRecommondCode = false;
      result.recommondCode_ = 0;
      return this;
    }
    
    public bool HasUserExp {
      get { return result.hasUserExp; }
    }
    public int UserExp {
      get { return result.UserExp; }
      set { SetUserExp(value); }
    }
    public Builder SetUserExp(int value) {
      PrepareBuilder();
      result.hasUserExp = true;
      result.userExp_ = value;
      return this;
    }
    public Builder ClearUserExp() {
      PrepareBuilder();
      result.hasUserExp = false;
      result.userExp_ = 0;
      return this;
    }
    
    public bool HasLevelMaxExp {
      get { return result.hasLevelMaxExp; }
    }
    public int LevelMaxExp {
      get { return result.LevelMaxExp; }
      set { SetLevelMaxExp(value); }
    }
    public Builder SetLevelMaxExp(int value) {
      PrepareBuilder();
      result.hasLevelMaxExp = true;
      result.levelMaxExp_ = value;
      return this;
    }
    public Builder ClearLevelMaxExp() {
      PrepareBuilder();
      result.hasLevelMaxExp = false;
      result.levelMaxExp_ = 0;
      return this;
    }
    
    public bool HasUrl {
      get { return result.hasUrl; }
    }
    public string Url {
      get { return result.Url; }
      set { SetUrl(value); }
    }
    public Builder SetUrl(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUrl = true;
      result.url_ = value;
      return this;
    }
    public Builder ClearUrl() {
      PrepareBuilder();
      result.hasUrl = false;
      result.url_ = "";
      return this;
    }
    
    public bool HasRank {
      get { return result.hasRank; }
    }
    public int Rank {
      get { return result.Rank; }
      set { SetRank(value); }
    }
    public Builder SetRank(int value) {
      PrepareBuilder();
      result.hasRank = true;
      result.rank_ = value;
      return this;
    }
    public Builder ClearRank() {
      PrepareBuilder();
      result.hasRank = false;
      result.rank_ = 0;
      return this;
    }
    
    public bool HasAccount {
      get { return result.hasAccount; }
    }
    public string Account {
      get { return result.Account; }
      set { SetAccount(value); }
    }
    public Builder SetAccount(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAccount = true;
      result.account_ = value;
      return this;
    }
    public Builder ClearAccount() {
      PrepareBuilder();
      result.hasAccount = false;
      result.account_ = "";
      return this;
    }
    
    public bool HasAciton {
      get { return result.hasAciton; }
    }
    public int Aciton {
      get { return result.Aciton; }
      set { SetAciton(value); }
    }
    public Builder SetAciton(int value) {
      PrepareBuilder();
      result.hasAciton = true;
      result.aciton_ = value;
      return this;
    }
    public Builder ClearAciton() {
      PrepareBuilder();
      result.hasAciton = false;
      result.aciton_ = 0;
      return this;
    }
    
    public bool HasDogUpgradeMaxEXP {
      get { return result.hasDogUpgradeMaxEXP; }
    }
    public int DogUpgradeMaxEXP {
      get { return result.DogUpgradeMaxEXP; }
      set { SetDogUpgradeMaxEXP(value); }
    }
    public Builder SetDogUpgradeMaxEXP(int value) {
      PrepareBuilder();
      result.hasDogUpgradeMaxEXP = true;
      result.dogUpgradeMaxEXP_ = value;
      return this;
    }
    public Builder ClearDogUpgradeMaxEXP() {
      PrepareBuilder();
      result.hasDogUpgradeMaxEXP = false;
      result.dogUpgradeMaxEXP_ = 0;
      return this;
    }
    
    public bool HasDogCurrentEXP {
      get { return result.hasDogCurrentEXP; }
    }
    public int DogCurrentEXP {
      get { return result.DogCurrentEXP; }
      set { SetDogCurrentEXP(value); }
    }
    public Builder SetDogCurrentEXP(int value) {
      PrepareBuilder();
      result.hasDogCurrentEXP = true;
      result.dogCurrentEXP_ = value;
      return this;
    }
    public Builder ClearDogCurrentEXP() {
      PrepareBuilder();
      result.hasDogCurrentEXP = false;
      result.dogCurrentEXP_ = 0;
      return this;
    }
    
    public bool HasDogLv {
      get { return result.hasDogLv; }
    }
    public int DogLv {
      get { return result.DogLv; }
      set { SetDogLv(value); }
    }
    public Builder SetDogLv(int value) {
      PrepareBuilder();
      result.hasDogLv = true;
      result.dogLv_ = value;
      return this;
    }
    public Builder ClearDogLv() {
      PrepareBuilder();
      result.hasDogLv = false;
      result.dogLv_ = 0;
      return this;
    }
  }
  static Farm_Game_UserInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_MapInfo_Req : pb::GeneratedMessage<Farm_Game_MapInfo_Req, Farm_Game_MapInfo_Req.Builder> {
  private Farm_Game_MapInfo_Req() { }
  private static readonly Farm_Game_MapInfo_Req defaultInstance = new Farm_Game_MapInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameMapInfoReqFieldNames = new string[] { "UserGameID" };
  private static readonly uint[] _farmGameMapInfoReqFieldTags = new uint[] { 8 };
  public static Farm_Game_MapInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_MapInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_MapInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MapInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_MapInfo_Req, Farm_Game_MapInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MapInfo_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameMapInfoReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_MapInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_MapInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_MapInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_MapInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_MapInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_MapInfo_Req result;
    
    private Farm_Game_MapInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_MapInfo_Req original = result;
        result = new Farm_Game_MapInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_MapInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_MapInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_MapInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_MapInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_MapInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_MapInfo_Req) {
        return MergeFrom((Farm_Game_MapInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_MapInfo_Req other) {
      if (other == global::Farm_Game_MapInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameMapInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameMapInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_MapInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_MapInfo_Anw : pb::GeneratedMessage<Farm_Game_MapInfo_Anw, Farm_Game_MapInfo_Anw.Builder> {
  private Farm_Game_MapInfo_Anw() { }
  private static readonly Farm_Game_MapInfo_Anw defaultInstance = new Farm_Game_MapInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameMapInfoAnwFieldNames = new string[] { "MapArray" };
  private static readonly uint[] _farmGameMapInfoAnwFieldTags = new uint[] { 34 };
  public static Farm_Game_MapInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_MapInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_MapInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MapInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_MapInfo_Anw, Farm_Game_MapInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MapInfo_Anw__FieldAccessorTable; }
  }
  
  public const int MapArrayFieldNumber = 4;
  private pbc::PopsicleList<global::PMsg_MapUnit> mapArray_ = new pbc::PopsicleList<global::PMsg_MapUnit>();
  public scg::IList<global::PMsg_MapUnit> MapArrayList {
    get { return mapArray_; }
  }
  public int MapArrayCount {
    get { return mapArray_.Count; }
  }
  public global::PMsg_MapUnit GetMapArray(int index) {
    return mapArray_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::PMsg_MapUnit element in MapArrayList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameMapInfoAnwFieldNames;
    if (mapArray_.Count > 0) {
      output.WriteMessageArray(4, field_names[0], mapArray_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::PMsg_MapUnit element in MapArrayList) {
      size += pb::CodedOutputStream.ComputeMessageSize(4, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MapInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_MapInfo_Anw MakeReadOnly() {
    mapArray_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_MapInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_MapInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_MapInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_MapInfo_Anw result;
    
    private Farm_Game_MapInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_MapInfo_Anw original = result;
        result = new Farm_Game_MapInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_MapInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_MapInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_MapInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_MapInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_MapInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_MapInfo_Anw) {
        return MergeFrom((Farm_Game_MapInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_MapInfo_Anw other) {
      if (other == global::Farm_Game_MapInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.mapArray_.Count != 0) {
        result.mapArray_.Add(other.mapArray_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameMapInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameMapInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.mapArray_, global::PMsg_MapUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::PMsg_MapUnit> MapArrayList {
      get { return PrepareBuilder().mapArray_; }
    }
    public int MapArrayCount {
      get { return result.MapArrayCount; }
    }
    public global::PMsg_MapUnit GetMapArray(int index) {
      return result.GetMapArray(index);
    }
    public Builder SetMapArray(int index, global::PMsg_MapUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.mapArray_[index] = value;
      return this;
    }
    public Builder SetMapArray(int index, global::PMsg_MapUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.mapArray_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddMapArray(global::PMsg_MapUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.mapArray_.Add(value);
      return this;
    }
    public Builder AddMapArray(global::PMsg_MapUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.mapArray_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeMapArray(scg::IEnumerable<global::PMsg_MapUnit> values) {
      PrepareBuilder();
      result.mapArray_.Add(values);
      return this;
    }
    public Builder ClearMapArray() {
      PrepareBuilder();
      result.mapArray_.Clear();
      return this;
    }
  }
  static Farm_Game_MapInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_NewUser_Req : pb::GeneratedMessage<Farm_Game_NewUser_Req, Farm_Game_NewUser_Req.Builder> {
  private Farm_Game_NewUser_Req() { }
  private static readonly Farm_Game_NewUser_Req defaultInstance = new Farm_Game_NewUser_Req().MakeReadOnly();
  private static readonly string[] _farmGameNewUserReqFieldNames = new string[] { "GameName", "HeaderIcon", "Sex" };
  private static readonly uint[] _farmGameNewUserReqFieldTags = new uint[] { 10, 26, 16 };
  public static Farm_Game_NewUser_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_NewUser_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_NewUser_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_NewUser_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_NewUser_Req, Farm_Game_NewUser_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_NewUser_Req__FieldAccessorTable; }
  }
  
  public const int GameNameFieldNumber = 1;
  private bool hasGameName;
  private string gameName_ = "";
  public bool HasGameName {
    get { return hasGameName; }
  }
  public string GameName {
    get { return gameName_; }
  }
  
  public const int SexFieldNumber = 2;
  private bool hasSex;
  private int sex_;
  public bool HasSex {
    get { return hasSex; }
  }
  public int Sex {
    get { return sex_; }
  }
  
  public const int HeaderIconFieldNumber = 3;
  private bool hasHeaderIcon;
  private string headerIcon_ = "";
  public bool HasHeaderIcon {
    get { return hasHeaderIcon; }
  }
  public string HeaderIcon {
    get { return headerIcon_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameNewUserReqFieldNames;
    if (hasGameName) {
      output.WriteString(1, field_names[0], GameName);
    }
    if (hasSex) {
      output.WriteInt32(2, field_names[2], Sex);
    }
    if (hasHeaderIcon) {
      output.WriteString(3, field_names[1], HeaderIcon);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasGameName) {
      size += pb::CodedOutputStream.ComputeStringSize(1, GameName);
    }
    if (hasSex) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Sex);
    }
    if (hasHeaderIcon) {
      size += pb::CodedOutputStream.ComputeStringSize(3, HeaderIcon);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_NewUser_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_NewUser_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_NewUser_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_NewUser_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_NewUser_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_NewUser_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_NewUser_Req result;
    
    private Farm_Game_NewUser_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_NewUser_Req original = result;
        result = new Farm_Game_NewUser_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_NewUser_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_NewUser_Req.Descriptor; }
    }
    
    public override Farm_Game_NewUser_Req DefaultInstanceForType {
      get { return global::Farm_Game_NewUser_Req.DefaultInstance; }
    }
    
    public override Farm_Game_NewUser_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_NewUser_Req) {
        return MergeFrom((Farm_Game_NewUser_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_NewUser_Req other) {
      if (other == global::Farm_Game_NewUser_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasGameName) {
        GameName = other.GameName;
      }
      if (other.HasSex) {
        Sex = other.Sex;
      }
      if (other.HasHeaderIcon) {
        HeaderIcon = other.HeaderIcon;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameNewUserReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameNewUserReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasGameName = input.ReadString(ref result.gameName_);
            break;
          }
          case 16: {
            result.hasSex = input.ReadInt32(ref result.sex_);
            break;
          }
          case 26: {
            result.hasHeaderIcon = input.ReadString(ref result.headerIcon_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasGameName {
      get { return result.hasGameName; }
    }
    public string GameName {
      get { return result.GameName; }
      set { SetGameName(value); }
    }
    public Builder SetGameName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasGameName = true;
      result.gameName_ = value;
      return this;
    }
    public Builder ClearGameName() {
      PrepareBuilder();
      result.hasGameName = false;
      result.gameName_ = "";
      return this;
    }
    
    public bool HasSex {
      get { return result.hasSex; }
    }
    public int Sex {
      get { return result.Sex; }
      set { SetSex(value); }
    }
    public Builder SetSex(int value) {
      PrepareBuilder();
      result.hasSex = true;
      result.sex_ = value;
      return this;
    }
    public Builder ClearSex() {
      PrepareBuilder();
      result.hasSex = false;
      result.sex_ = 0;
      return this;
    }
    
    public bool HasHeaderIcon {
      get { return result.hasHeaderIcon; }
    }
    public string HeaderIcon {
      get { return result.HeaderIcon; }
      set { SetHeaderIcon(value); }
    }
    public Builder SetHeaderIcon(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasHeaderIcon = true;
      result.headerIcon_ = value;
      return this;
    }
    public Builder ClearHeaderIcon() {
      PrepareBuilder();
      result.hasHeaderIcon = false;
      result.headerIcon_ = "";
      return this;
    }
  }
  static Farm_Game_NewUser_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_NewUser_Anw : pb::GeneratedMessage<Farm_Game_NewUser_Anw, Farm_Game_NewUser_Anw.Builder> {
  private Farm_Game_NewUser_Anw() { }
  private static readonly Farm_Game_NewUser_Anw defaultInstance = new Farm_Game_NewUser_Anw().MakeReadOnly();
  private static readonly string[] _farmGameNewUserAnwFieldNames = new string[] { "CreateResult", "UserGameID" };
  private static readonly uint[] _farmGameNewUserAnwFieldTags = new uint[] { 8, 16 };
  public static Farm_Game_NewUser_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_NewUser_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_NewUser_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_NewUser_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_NewUser_Anw, Farm_Game_NewUser_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_NewUser_Anw__FieldAccessorTable; }
  }
  
  public const int CreateResultFieldNumber = 1;
  private bool hasCreateResult;
  private int createResult_;
  public bool HasCreateResult {
    get { return hasCreateResult; }
  }
  public int CreateResult {
    get { return createResult_; }
  }
  
  public const int UserGameIDFieldNumber = 2;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameNewUserAnwFieldNames;
    if (hasCreateResult) {
      output.WriteInt32(1, field_names[0], CreateResult);
    }
    if (hasUserGameID) {
      output.WriteInt32(2, field_names[1], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCreateResult) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, CreateResult);
    }
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_NewUser_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_NewUser_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_NewUser_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_NewUser_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_NewUser_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_NewUser_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_NewUser_Anw result;
    
    private Farm_Game_NewUser_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_NewUser_Anw original = result;
        result = new Farm_Game_NewUser_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_NewUser_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_NewUser_Anw.Descriptor; }
    }
    
    public override Farm_Game_NewUser_Anw DefaultInstanceForType {
      get { return global::Farm_Game_NewUser_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_NewUser_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_NewUser_Anw) {
        return MergeFrom((Farm_Game_NewUser_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_NewUser_Anw other) {
      if (other == global::Farm_Game_NewUser_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCreateResult) {
        CreateResult = other.CreateResult;
      }
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameNewUserAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameNewUserAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCreateResult = input.ReadInt32(ref result.createResult_);
            break;
          }
          case 16: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCreateResult {
      get { return result.hasCreateResult; }
    }
    public int CreateResult {
      get { return result.CreateResult; }
      set { SetCreateResult(value); }
    }
    public Builder SetCreateResult(int value) {
      PrepareBuilder();
      result.hasCreateResult = true;
      result.createResult_ = value;
      return this;
    }
    public Builder ClearCreateResult() {
      PrepareBuilder();
      result.hasCreateResult = false;
      result.createResult_ = 0;
      return this;
    }
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_NewUser_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_RankInfo_Req : pb::GeneratedMessage<Farm_Game_RankInfo_Req, Farm_Game_RankInfo_Req.Builder> {
  private Farm_Game_RankInfo_Req() { }
  private static readonly Farm_Game_RankInfo_Req defaultInstance = new Farm_Game_RankInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameRankInfoReqFieldNames = new string[] { "CurrentPage", "UserGameID" };
  private static readonly uint[] _farmGameRankInfoReqFieldTags = new uint[] { 16, 8 };
  public static Farm_Game_RankInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_RankInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_RankInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_RankInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_RankInfo_Req, Farm_Game_RankInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_RankInfo_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int CurrentPageFieldNumber = 2;
  private bool hasCurrentPage;
  private int currentPage_;
  public bool HasCurrentPage {
    get { return hasCurrentPage; }
  }
  public int CurrentPage {
    get { return currentPage_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameRankInfoReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasCurrentPage) {
      output.WriteInt32(2, field_names[0], CurrentPage);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasCurrentPage) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, CurrentPage);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_RankInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_RankInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_RankInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_RankInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_RankInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_RankInfo_Req result;
    
    private Farm_Game_RankInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_RankInfo_Req original = result;
        result = new Farm_Game_RankInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_RankInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_RankInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_RankInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_RankInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_RankInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_RankInfo_Req) {
        return MergeFrom((Farm_Game_RankInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_RankInfo_Req other) {
      if (other == global::Farm_Game_RankInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasCurrentPage) {
        CurrentPage = other.CurrentPage;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameRankInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameRankInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasCurrentPage = input.ReadInt32(ref result.currentPage_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasCurrentPage {
      get { return result.hasCurrentPage; }
    }
    public int CurrentPage {
      get { return result.CurrentPage; }
      set { SetCurrentPage(value); }
    }
    public Builder SetCurrentPage(int value) {
      PrepareBuilder();
      result.hasCurrentPage = true;
      result.currentPage_ = value;
      return this;
    }
    public Builder ClearCurrentPage() {
      PrepareBuilder();
      result.hasCurrentPage = false;
      result.currentPage_ = 0;
      return this;
    }
  }
  static Farm_Game_RankInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_RankInfo_Anw : pb::GeneratedMessage<Farm_Game_RankInfo_Anw, Farm_Game_RankInfo_Anw.Builder> {
  private Farm_Game_RankInfo_Anw() { }
  private static readonly Farm_Game_RankInfo_Anw defaultInstance = new Farm_Game_RankInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameRankInfoAnwFieldNames = new string[] { "UserInfos" };
  private static readonly uint[] _farmGameRankInfoAnwFieldTags = new uint[] { 10 };
  public static Farm_Game_RankInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_RankInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_RankInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_RankInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_RankInfo_Anw, Farm_Game_RankInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_RankInfo_Anw__FieldAccessorTable; }
  }
  
  public const int UserInfosFieldNumber = 1;
  private pbc::PopsicleList<global::Farm_Game_UserInfo_Anw> userInfos_ = new pbc::PopsicleList<global::Farm_Game_UserInfo_Anw>();
  public scg::IList<global::Farm_Game_UserInfo_Anw> UserInfosList {
    get { return userInfos_; }
  }
  public int UserInfosCount {
    get { return userInfos_.Count; }
  }
  public global::Farm_Game_UserInfo_Anw GetUserInfos(int index) {
    return userInfos_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::Farm_Game_UserInfo_Anw element in UserInfosList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameRankInfoAnwFieldNames;
    if (userInfos_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], userInfos_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::Farm_Game_UserInfo_Anw element in UserInfosList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_RankInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_RankInfo_Anw MakeReadOnly() {
    userInfos_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_RankInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_RankInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_RankInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_RankInfo_Anw result;
    
    private Farm_Game_RankInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_RankInfo_Anw original = result;
        result = new Farm_Game_RankInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_RankInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_RankInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_RankInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_RankInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_RankInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_RankInfo_Anw) {
        return MergeFrom((Farm_Game_RankInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_RankInfo_Anw other) {
      if (other == global::Farm_Game_RankInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.userInfos_.Count != 0) {
        result.userInfos_.Add(other.userInfos_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameRankInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameRankInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.userInfos_, global::Farm_Game_UserInfo_Anw.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::Farm_Game_UserInfo_Anw> UserInfosList {
      get { return PrepareBuilder().userInfos_; }
    }
    public int UserInfosCount {
      get { return result.UserInfosCount; }
    }
    public global::Farm_Game_UserInfo_Anw GetUserInfos(int index) {
      return result.GetUserInfos(index);
    }
    public Builder SetUserInfos(int index, global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.userInfos_[index] = value;
      return this;
    }
    public Builder SetUserInfos(int index, global::Farm_Game_UserInfo_Anw.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.userInfos_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddUserInfos(global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.userInfos_.Add(value);
      return this;
    }
    public Builder AddUserInfos(global::Farm_Game_UserInfo_Anw.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.userInfos_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeUserInfos(scg::IEnumerable<global::Farm_Game_UserInfo_Anw> values) {
      PrepareBuilder();
      result.userInfos_.Add(values);
      return this;
    }
    public Builder ClearUserInfos() {
      PrepareBuilder();
      result.userInfos_.Clear();
      return this;
    }
  }
  static Farm_Game_RankInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_StoreInfo_Req : pb::GeneratedMessage<Farm_Game_StoreInfo_Req, Farm_Game_StoreInfo_Req.Builder> {
  private Farm_Game_StoreInfo_Req() { }
  private static readonly Farm_Game_StoreInfo_Req defaultInstance = new Farm_Game_StoreInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameStoreInfoReqFieldNames = new string[] { "UserGameID" };
  private static readonly uint[] _farmGameStoreInfoReqFieldTags = new uint[] { 8 };
  public static Farm_Game_StoreInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_StoreInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_StoreInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_StoreInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_StoreInfo_Req, Farm_Game_StoreInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_StoreInfo_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameStoreInfoReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_StoreInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_StoreInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_StoreInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_StoreInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_StoreInfo_Req result;
    
    private Farm_Game_StoreInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_StoreInfo_Req original = result;
        result = new Farm_Game_StoreInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_StoreInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_StoreInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_StoreInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_StoreInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_StoreInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_StoreInfo_Req) {
        return MergeFrom((Farm_Game_StoreInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_StoreInfo_Req other) {
      if (other == global::Farm_Game_StoreInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameStoreInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameStoreInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_StoreInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_StoreInfo_Anw : pb::GeneratedMessage<Farm_Game_StoreInfo_Anw, Farm_Game_StoreInfo_Anw.Builder> {
  private Farm_Game_StoreInfo_Anw() { }
  private static readonly Farm_Game_StoreInfo_Anw defaultInstance = new Farm_Game_StoreInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameStoreInfoAnwFieldNames = new string[] { "suArray" };
  private static readonly uint[] _farmGameStoreInfoAnwFieldTags = new uint[] { 34 };
  public static Farm_Game_StoreInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_StoreInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_StoreInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_StoreInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_StoreInfo_Anw, Farm_Game_StoreInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_StoreInfo_Anw__FieldAccessorTable; }
  }
  
  public const int SuArrayFieldNumber = 4;
  private pbc::PopsicleList<global::PMsg_StagePropUnit> suArray_ = new pbc::PopsicleList<global::PMsg_StagePropUnit>();
  public scg::IList<global::PMsg_StagePropUnit> SuArrayList {
    get { return suArray_; }
  }
  public int SuArrayCount {
    get { return suArray_.Count; }
  }
  public global::PMsg_StagePropUnit GetSuArray(int index) {
    return suArray_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameStoreInfoAnwFieldNames;
    if (suArray_.Count > 0) {
      output.WriteMessageArray(4, field_names[0], suArray_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::PMsg_StagePropUnit element in SuArrayList) {
      size += pb::CodedOutputStream.ComputeMessageSize(4, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_StoreInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_StoreInfo_Anw MakeReadOnly() {
    suArray_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_StoreInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_StoreInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_StoreInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_StoreInfo_Anw result;
    
    private Farm_Game_StoreInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_StoreInfo_Anw original = result;
        result = new Farm_Game_StoreInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_StoreInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_StoreInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_StoreInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_StoreInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_StoreInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_StoreInfo_Anw) {
        return MergeFrom((Farm_Game_StoreInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_StoreInfo_Anw other) {
      if (other == global::Farm_Game_StoreInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.suArray_.Count != 0) {
        result.suArray_.Add(other.suArray_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameStoreInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameStoreInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 34: {
            input.ReadMessageArray(tag, field_name, result.suArray_, global::PMsg_StagePropUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::PMsg_StagePropUnit> SuArrayList {
      get { return PrepareBuilder().suArray_; }
    }
    public int SuArrayCount {
      get { return result.SuArrayCount; }
    }
    public global::PMsg_StagePropUnit GetSuArray(int index) {
      return result.GetSuArray(index);
    }
    public Builder SetSuArray(int index, global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.suArray_[index] = value;
      return this;
    }
    public Builder SetSuArray(int index, global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.suArray_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSuArray(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.suArray_.Add(value);
      return this;
    }
    public Builder AddSuArray(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.suArray_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSuArray(scg::IEnumerable<global::PMsg_StagePropUnit> values) {
      PrepareBuilder();
      result.suArray_.Add(values);
      return this;
    }
    public Builder ClearSuArray() {
      PrepareBuilder();
      result.suArray_.Clear();
      return this;
    }
  }
  static Farm_Game_StoreInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_FriendsInfo_Req : pb::GeneratedMessage<Farm_Game_FriendsInfo_Req, Farm_Game_FriendsInfo_Req.Builder> {
  private Farm_Game_FriendsInfo_Req() { }
  private static readonly Farm_Game_FriendsInfo_Req defaultInstance = new Farm_Game_FriendsInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameFriendsInfoReqFieldNames = new string[] { "CurrentPage", "UserGameID" };
  private static readonly uint[] _farmGameFriendsInfoReqFieldTags = new uint[] { 16, 8 };
  public static Farm_Game_FriendsInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_FriendsInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_FriendsInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FriendsInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_FriendsInfo_Req, Farm_Game_FriendsInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FriendsInfo_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int CurrentPageFieldNumber = 2;
  private bool hasCurrentPage;
  private int currentPage_;
  public bool HasCurrentPage {
    get { return hasCurrentPage; }
  }
  public int CurrentPage {
    get { return currentPage_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameFriendsInfoReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasCurrentPage) {
      output.WriteInt32(2, field_names[0], CurrentPage);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasCurrentPage) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, CurrentPage);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_FriendsInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_FriendsInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_FriendsInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_FriendsInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_FriendsInfo_Req result;
    
    private Farm_Game_FriendsInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_FriendsInfo_Req original = result;
        result = new Farm_Game_FriendsInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_FriendsInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_FriendsInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_FriendsInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_FriendsInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_FriendsInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_FriendsInfo_Req) {
        return MergeFrom((Farm_Game_FriendsInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_FriendsInfo_Req other) {
      if (other == global::Farm_Game_FriendsInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasCurrentPage) {
        CurrentPage = other.CurrentPage;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameFriendsInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameFriendsInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasCurrentPage = input.ReadInt32(ref result.currentPage_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasCurrentPage {
      get { return result.hasCurrentPage; }
    }
    public int CurrentPage {
      get { return result.CurrentPage; }
      set { SetCurrentPage(value); }
    }
    public Builder SetCurrentPage(int value) {
      PrepareBuilder();
      result.hasCurrentPage = true;
      result.currentPage_ = value;
      return this;
    }
    public Builder ClearCurrentPage() {
      PrepareBuilder();
      result.hasCurrentPage = false;
      result.currentPage_ = 0;
      return this;
    }
  }
  static Farm_Game_FriendsInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_FriendsInfo_Anw : pb::GeneratedMessage<Farm_Game_FriendsInfo_Anw, Farm_Game_FriendsInfo_Anw.Builder> {
  private Farm_Game_FriendsInfo_Anw() { }
  private static readonly Farm_Game_FriendsInfo_Anw defaultInstance = new Farm_Game_FriendsInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameFriendsInfoAnwFieldNames = new string[] { "Info" };
  private static readonly uint[] _farmGameFriendsInfoAnwFieldTags = new uint[] { 18 };
  public static Farm_Game_FriendsInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_FriendsInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_FriendsInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FriendsInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_FriendsInfo_Anw, Farm_Game_FriendsInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FriendsInfo_Anw__FieldAccessorTable; }
  }
  
  public const int InfoFieldNumber = 2;
  private pbc::PopsicleList<global::Farm_Game_UserInfo_Anw> info_ = new pbc::PopsicleList<global::Farm_Game_UserInfo_Anw>();
  public scg::IList<global::Farm_Game_UserInfo_Anw> InfoList {
    get { return info_; }
  }
  public int InfoCount {
    get { return info_.Count; }
  }
  public global::Farm_Game_UserInfo_Anw GetInfo(int index) {
    return info_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::Farm_Game_UserInfo_Anw element in InfoList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameFriendsInfoAnwFieldNames;
    if (info_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], info_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::Farm_Game_UserInfo_Anw element in InfoList) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FriendsInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_FriendsInfo_Anw MakeReadOnly() {
    info_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_FriendsInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_FriendsInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_FriendsInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_FriendsInfo_Anw result;
    
    private Farm_Game_FriendsInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_FriendsInfo_Anw original = result;
        result = new Farm_Game_FriendsInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_FriendsInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_FriendsInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_FriendsInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_FriendsInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_FriendsInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_FriendsInfo_Anw) {
        return MergeFrom((Farm_Game_FriendsInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_FriendsInfo_Anw other) {
      if (other == global::Farm_Game_FriendsInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.info_.Count != 0) {
        result.info_.Add(other.info_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameFriendsInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameFriendsInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.info_, global::Farm_Game_UserInfo_Anw.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::Farm_Game_UserInfo_Anw> InfoList {
      get { return PrepareBuilder().info_; }
    }
    public int InfoCount {
      get { return result.InfoCount; }
    }
    public global::Farm_Game_UserInfo_Anw GetInfo(int index) {
      return result.GetInfo(index);
    }
    public Builder SetInfo(int index, global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.info_[index] = value;
      return this;
    }
    public Builder SetInfo(int index, global::Farm_Game_UserInfo_Anw.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.info_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddInfo(global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.info_.Add(value);
      return this;
    }
    public Builder AddInfo(global::Farm_Game_UserInfo_Anw.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.info_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeInfo(scg::IEnumerable<global::Farm_Game_UserInfo_Anw> values) {
      PrepareBuilder();
      result.info_.Add(values);
      return this;
    }
    public Builder ClearInfo() {
      PrepareBuilder();
      result.info_.Clear();
      return this;
    }
  }
  static Farm_Game_FriendsInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ShopInfo_Req : pb::GeneratedMessage<Farm_Game_ShopInfo_Req, Farm_Game_ShopInfo_Req.Builder> {
  private Farm_Game_ShopInfo_Req() { }
  private static readonly Farm_Game_ShopInfo_Req defaultInstance = new Farm_Game_ShopInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameShopInfoReqFieldNames = new string[] { "UserGameID" };
  private static readonly uint[] _farmGameShopInfoReqFieldTags = new uint[] { 8 };
  public static Farm_Game_ShopInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ShopInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ShopInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ShopInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ShopInfo_Req, Farm_Game_ShopInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ShopInfo_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameShopInfoReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ShopInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ShopInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ShopInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ShopInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ShopInfo_Req result;
    
    private Farm_Game_ShopInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ShopInfo_Req original = result;
        result = new Farm_Game_ShopInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ShopInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ShopInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_ShopInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_ShopInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_ShopInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ShopInfo_Req) {
        return MergeFrom((Farm_Game_ShopInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ShopInfo_Req other) {
      if (other == global::Farm_Game_ShopInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameShopInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameShopInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_ShopInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ShopInfo_Anw : pb::GeneratedMessage<Farm_Game_ShopInfo_Anw, Farm_Game_ShopInfo_Anw.Builder> {
  private Farm_Game_ShopInfo_Anw() { }
  private static readonly Farm_Game_ShopInfo_Anw defaultInstance = new Farm_Game_ShopInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameShopInfoAnwFieldNames = new string[] { "objects" };
  private static readonly uint[] _farmGameShopInfoAnwFieldTags = new uint[] { 18 };
  public static Farm_Game_ShopInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ShopInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ShopInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ShopInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ShopInfo_Anw, Farm_Game_ShopInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ShopInfo_Anw__FieldAccessorTable; }
  }
  
  public const int ObjectsFieldNumber = 2;
  private pbc::PopsicleList<global::Shop_MessageUnit> objects_ = new pbc::PopsicleList<global::Shop_MessageUnit>();
  public scg::IList<global::Shop_MessageUnit> ObjectsList {
    get { return objects_; }
  }
  public int ObjectsCount {
    get { return objects_.Count; }
  }
  public global::Shop_MessageUnit GetObjects(int index) {
    return objects_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameShopInfoAnwFieldNames;
    if (objects_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], objects_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::Shop_MessageUnit element in ObjectsList) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ShopInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ShopInfo_Anw MakeReadOnly() {
    objects_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ShopInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ShopInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ShopInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ShopInfo_Anw result;
    
    private Farm_Game_ShopInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ShopInfo_Anw original = result;
        result = new Farm_Game_ShopInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ShopInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ShopInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_ShopInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_ShopInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_ShopInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ShopInfo_Anw) {
        return MergeFrom((Farm_Game_ShopInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ShopInfo_Anw other) {
      if (other == global::Farm_Game_ShopInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.objects_.Count != 0) {
        result.objects_.Add(other.objects_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameShopInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameShopInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.objects_, global::Shop_MessageUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::Shop_MessageUnit> ObjectsList {
      get { return PrepareBuilder().objects_; }
    }
    public int ObjectsCount {
      get { return result.ObjectsCount; }
    }
    public global::Shop_MessageUnit GetObjects(int index) {
      return result.GetObjects(index);
    }
    public Builder SetObjects(int index, global::Shop_MessageUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objects_[index] = value;
      return this;
    }
    public Builder SetObjects(int index, global::Shop_MessageUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objects_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjects(global::Shop_MessageUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objects_.Add(value);
      return this;
    }
    public Builder AddObjects(global::Shop_MessageUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objects_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjects(scg::IEnumerable<global::Shop_MessageUnit> values) {
      PrepareBuilder();
      result.objects_.Add(values);
      return this;
    }
    public Builder ClearObjects() {
      PrepareBuilder();
      result.objects_.Clear();
      return this;
    }
  }
  static Farm_Game_ShopInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_AnnouncementInfo_Req : pb::GeneratedMessage<Farm_Game_AnnouncementInfo_Req, Farm_Game_AnnouncementInfo_Req.Builder> {
  private Farm_Game_AnnouncementInfo_Req() { }
  private static readonly Farm_Game_AnnouncementInfo_Req defaultInstance = new Farm_Game_AnnouncementInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameAnnouncementInfoReqFieldNames = new string[] { "UserGameID", "token" };
  private static readonly uint[] _farmGameAnnouncementInfoReqFieldTags = new uint[] { 8, 18 };
  public static Farm_Game_AnnouncementInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_AnnouncementInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_AnnouncementInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AnnouncementInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_AnnouncementInfo_Req, Farm_Game_AnnouncementInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AnnouncementInfo_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int TokenFieldNumber = 2;
  private bool hasToken;
  private string token_ = "";
  public bool HasToken {
    get { return hasToken; }
  }
  public string Token {
    get { return token_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameAnnouncementInfoReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    if (hasToken) {
      output.WriteString(2, field_names[1], Token);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasToken) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Token);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_AnnouncementInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_AnnouncementInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_AnnouncementInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_AnnouncementInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_AnnouncementInfo_Req result;
    
    private Farm_Game_AnnouncementInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_AnnouncementInfo_Req original = result;
        result = new Farm_Game_AnnouncementInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_AnnouncementInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_AnnouncementInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_AnnouncementInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_AnnouncementInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_AnnouncementInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_AnnouncementInfo_Req) {
        return MergeFrom((Farm_Game_AnnouncementInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_AnnouncementInfo_Req other) {
      if (other == global::Farm_Game_AnnouncementInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameAnnouncementInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameAnnouncementInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 18: {
            result.hasToken = input.ReadString(ref result.token_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasToken {
      get { return result.hasToken; }
    }
    public string Token {
      get { return result.Token; }
      set { SetToken(value); }
    }
    public Builder SetToken(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasToken = true;
      result.token_ = value;
      return this;
    }
    public Builder ClearToken() {
      PrepareBuilder();
      result.hasToken = false;
      result.token_ = "";
      return this;
    }
  }
  static Farm_Game_AnnouncementInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_AnnouncementInfo_Anw : pb::GeneratedMessage<Farm_Game_AnnouncementInfo_Anw, Farm_Game_AnnouncementInfo_Anw.Builder> {
  private Farm_Game_AnnouncementInfo_Anw() { }
  private static readonly Farm_Game_AnnouncementInfo_Anw defaultInstance = new Farm_Game_AnnouncementInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameAnnouncementInfoAnwFieldNames = new string[] { "Announcement", "VersionNum", "isUpdate", "url" };
  private static readonly uint[] _farmGameAnnouncementInfoAnwFieldTags = new uint[] { 10, 18, 24, 34 };
  public static Farm_Game_AnnouncementInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_AnnouncementInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_AnnouncementInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AnnouncementInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_AnnouncementInfo_Anw, Farm_Game_AnnouncementInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AnnouncementInfo_Anw__FieldAccessorTable; }
  }
  
  public const int AnnouncementFieldNumber = 1;
  private bool hasAnnouncement;
  private string announcement_ = "";
  public bool HasAnnouncement {
    get { return hasAnnouncement; }
  }
  public string Announcement {
    get { return announcement_; }
  }
  
  public const int VersionNumFieldNumber = 2;
  private bool hasVersionNum;
  private string versionNum_ = "";
  public bool HasVersionNum {
    get { return hasVersionNum; }
  }
  public string VersionNum {
    get { return versionNum_; }
  }
  
  public const int IsUpdateFieldNumber = 3;
  private bool hasIsUpdate;
  private int isUpdate_;
  public bool HasIsUpdate {
    get { return hasIsUpdate; }
  }
  public int IsUpdate {
    get { return isUpdate_; }
  }
  
  public const int UrlFieldNumber = 4;
  private bool hasUrl;
  private string url_ = "";
  public bool HasUrl {
    get { return hasUrl; }
  }
  public string Url {
    get { return url_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameAnnouncementInfoAnwFieldNames;
    if (hasAnnouncement) {
      output.WriteString(1, field_names[0], Announcement);
    }
    if (hasVersionNum) {
      output.WriteString(2, field_names[1], VersionNum);
    }
    if (hasIsUpdate) {
      output.WriteInt32(3, field_names[2], IsUpdate);
    }
    if (hasUrl) {
      output.WriteString(4, field_names[3], Url);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasAnnouncement) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Announcement);
    }
    if (hasVersionNum) {
      size += pb::CodedOutputStream.ComputeStringSize(2, VersionNum);
    }
    if (hasIsUpdate) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, IsUpdate);
    }
    if (hasUrl) {
      size += pb::CodedOutputStream.ComputeStringSize(4, Url);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AnnouncementInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_AnnouncementInfo_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_AnnouncementInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_AnnouncementInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_AnnouncementInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_AnnouncementInfo_Anw result;
    
    private Farm_Game_AnnouncementInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_AnnouncementInfo_Anw original = result;
        result = new Farm_Game_AnnouncementInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_AnnouncementInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_AnnouncementInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_AnnouncementInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_AnnouncementInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_AnnouncementInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_AnnouncementInfo_Anw) {
        return MergeFrom((Farm_Game_AnnouncementInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_AnnouncementInfo_Anw other) {
      if (other == global::Farm_Game_AnnouncementInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAnnouncement) {
        Announcement = other.Announcement;
      }
      if (other.HasVersionNum) {
        VersionNum = other.VersionNum;
      }
      if (other.HasIsUpdate) {
        IsUpdate = other.IsUpdate;
      }
      if (other.HasUrl) {
        Url = other.Url;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameAnnouncementInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameAnnouncementInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasAnnouncement = input.ReadString(ref result.announcement_);
            break;
          }
          case 18: {
            result.hasVersionNum = input.ReadString(ref result.versionNum_);
            break;
          }
          case 24: {
            result.hasIsUpdate = input.ReadInt32(ref result.isUpdate_);
            break;
          }
          case 34: {
            result.hasUrl = input.ReadString(ref result.url_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAnnouncement {
      get { return result.hasAnnouncement; }
    }
    public string Announcement {
      get { return result.Announcement; }
      set { SetAnnouncement(value); }
    }
    public Builder SetAnnouncement(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAnnouncement = true;
      result.announcement_ = value;
      return this;
    }
    public Builder ClearAnnouncement() {
      PrepareBuilder();
      result.hasAnnouncement = false;
      result.announcement_ = "";
      return this;
    }
    
    public bool HasVersionNum {
      get { return result.hasVersionNum; }
    }
    public string VersionNum {
      get { return result.VersionNum; }
      set { SetVersionNum(value); }
    }
    public Builder SetVersionNum(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasVersionNum = true;
      result.versionNum_ = value;
      return this;
    }
    public Builder ClearVersionNum() {
      PrepareBuilder();
      result.hasVersionNum = false;
      result.versionNum_ = "";
      return this;
    }
    
    public bool HasIsUpdate {
      get { return result.hasIsUpdate; }
    }
    public int IsUpdate {
      get { return result.IsUpdate; }
      set { SetIsUpdate(value); }
    }
    public Builder SetIsUpdate(int value) {
      PrepareBuilder();
      result.hasIsUpdate = true;
      result.isUpdate_ = value;
      return this;
    }
    public Builder ClearIsUpdate() {
      PrepareBuilder();
      result.hasIsUpdate = false;
      result.isUpdate_ = 0;
      return this;
    }
    
    public bool HasUrl {
      get { return result.hasUrl; }
    }
    public string Url {
      get { return result.Url; }
      set { SetUrl(value); }
    }
    public Builder SetUrl(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasUrl = true;
      result.url_ = value;
      return this;
    }
    public Builder ClearUrl() {
      PrepareBuilder();
      result.hasUrl = false;
      result.url_ = "";
      return this;
    }
  }
  static Farm_Game_AnnouncementInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Store_Update : pb::GeneratedMessage<Farm_Game_Store_Update, Farm_Game_Store_Update.Builder> {
  private Farm_Game_Store_Update() { }
  private static readonly Farm_Game_Store_Update defaultInstance = new Farm_Game_Store_Update().MakeReadOnly();
  private static readonly string[] _farmGameStoreUpdateFieldNames = new string[] { "objects" };
  private static readonly uint[] _farmGameStoreUpdateFieldTags = new uint[] { 10 };
  public static Farm_Game_Store_Update DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Store_Update DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Store_Update ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Store_Update__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Store_Update, Farm_Game_Store_Update.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Store_Update__FieldAccessorTable; }
  }
  
  public const int ObjectsFieldNumber = 1;
  private pbc::PopsicleList<global::PMsg_StagePropUnit> objects_ = new pbc::PopsicleList<global::PMsg_StagePropUnit>();
  public scg::IList<global::PMsg_StagePropUnit> ObjectsList {
    get { return objects_; }
  }
  public int ObjectsCount {
    get { return objects_.Count; }
  }
  public global::PMsg_StagePropUnit GetObjects(int index) {
    return objects_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameStoreUpdateFieldNames;
    if (objects_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], objects_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::PMsg_StagePropUnit element in ObjectsList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Store_Update ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Store_Update ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Store_Update MakeReadOnly() {
    objects_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Store_Update prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Store_Update, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Store_Update cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Store_Update result;
    
    private Farm_Game_Store_Update PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Store_Update original = result;
        result = new Farm_Game_Store_Update();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Store_Update MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Store_Update.Descriptor; }
    }
    
    public override Farm_Game_Store_Update DefaultInstanceForType {
      get { return global::Farm_Game_Store_Update.DefaultInstance; }
    }
    
    public override Farm_Game_Store_Update BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Store_Update) {
        return MergeFrom((Farm_Game_Store_Update) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Store_Update other) {
      if (other == global::Farm_Game_Store_Update.DefaultInstance) return this;
      PrepareBuilder();
      if (other.objects_.Count != 0) {
        result.objects_.Add(other.objects_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameStoreUpdateFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameStoreUpdateFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.objects_, global::PMsg_StagePropUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::PMsg_StagePropUnit> ObjectsList {
      get { return PrepareBuilder().objects_; }
    }
    public int ObjectsCount {
      get { return result.ObjectsCount; }
    }
    public global::PMsg_StagePropUnit GetObjects(int index) {
      return result.GetObjects(index);
    }
    public Builder SetObjects(int index, global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objects_[index] = value;
      return this;
    }
    public Builder SetObjects(int index, global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objects_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjects(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objects_.Add(value);
      return this;
    }
    public Builder AddObjects(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objects_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjects(scg::IEnumerable<global::PMsg_StagePropUnit> values) {
      PrepareBuilder();
      result.objects_.Add(values);
      return this;
    }
    public Builder ClearObjects() {
      PrepareBuilder();
      result.objects_.Clear();
      return this;
    }
  }
  static Farm_Game_Store_Update() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Action_Fandi_Req : pb::GeneratedMessage<Farm_Game_Action_Fandi_Req, Farm_Game_Action_Fandi_Req.Builder> {
  private Farm_Game_Action_Fandi_Req() { }
  private static readonly Farm_Game_Action_Fandi_Req defaultInstance = new Farm_Game_Action_Fandi_Req().MakeReadOnly();
  private static readonly string[] _farmGameActionFandiReqFieldNames = new string[] { "FieldsID", "UserGameID" };
  private static readonly uint[] _farmGameActionFandiReqFieldTags = new uint[] { 16, 8 };
  public static Farm_Game_Action_Fandi_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Action_Fandi_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Action_Fandi_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Fandi_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Action_Fandi_Req, Farm_Game_Action_Fandi_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Fandi_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int FieldsIDFieldNumber = 2;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameActionFandiReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasFieldsID) {
      output.WriteInt32(2, field_names[0], FieldsID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, FieldsID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Action_Fandi_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Action_Fandi_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Action_Fandi_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Action_Fandi_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Action_Fandi_Req result;
    
    private Farm_Game_Action_Fandi_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Action_Fandi_Req original = result;
        result = new Farm_Game_Action_Fandi_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Action_Fandi_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Action_Fandi_Req.Descriptor; }
    }
    
    public override Farm_Game_Action_Fandi_Req DefaultInstanceForType {
      get { return global::Farm_Game_Action_Fandi_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Action_Fandi_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Action_Fandi_Req) {
        return MergeFrom((Farm_Game_Action_Fandi_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Action_Fandi_Req other) {
      if (other == global::Farm_Game_Action_Fandi_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameActionFandiReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameActionFandiReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
  }
  static Farm_Game_Action_Fandi_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Action_Fandi_Anw : pb::GeneratedMessage<Farm_Game_Action_Fandi_Anw, Farm_Game_Action_Fandi_Anw.Builder> {
  private Farm_Game_Action_Fandi_Anw() { }
  private static readonly Farm_Game_Action_Fandi_Anw defaultInstance = new Farm_Game_Action_Fandi_Anw().MakeReadOnly();
  private static readonly string[] _farmGameActionFandiAnwFieldNames = new string[] { "FieldsID" };
  private static readonly uint[] _farmGameActionFandiAnwFieldTags = new uint[] { 8 };
  public static Farm_Game_Action_Fandi_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Action_Fandi_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Action_Fandi_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Fandi_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Action_Fandi_Anw, Farm_Game_Action_Fandi_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Fandi_Anw__FieldAccessorTable; }
  }
  
  public const int FieldsIDFieldNumber = 1;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameActionFandiAnwFieldNames;
    if (hasFieldsID) {
      output.WriteInt32(1, field_names[0], FieldsID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, FieldsID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Fandi_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Action_Fandi_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Action_Fandi_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Action_Fandi_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Action_Fandi_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Action_Fandi_Anw result;
    
    private Farm_Game_Action_Fandi_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Action_Fandi_Anw original = result;
        result = new Farm_Game_Action_Fandi_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Action_Fandi_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Action_Fandi_Anw.Descriptor; }
    }
    
    public override Farm_Game_Action_Fandi_Anw DefaultInstanceForType {
      get { return global::Farm_Game_Action_Fandi_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_Action_Fandi_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Action_Fandi_Anw) {
        return MergeFrom((Farm_Game_Action_Fandi_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Action_Fandi_Anw other) {
      if (other == global::Farm_Game_Action_Fandi_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameActionFandiAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameActionFandiAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
  }
  static Farm_Game_Action_Fandi_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Seed_Req : pb::GeneratedMessage<Farm_Game_Seed_Req, Farm_Game_Seed_Req.Builder> {
  private Farm_Game_Seed_Req() { }
  private static readonly Farm_Game_Seed_Req defaultInstance = new Farm_Game_Seed_Req().MakeReadOnly();
  private static readonly string[] _farmGameSeedReqFieldNames = new string[] { "FieldsID", "SeedID", "UserGameID" };
  private static readonly uint[] _farmGameSeedReqFieldTags = new uint[] { 16, 24, 8 };
  public static Farm_Game_Seed_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Seed_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Seed_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Seed_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Seed_Req, Farm_Game_Seed_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Seed_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int FieldsIDFieldNumber = 2;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public const int SeedIDFieldNumber = 3;
  private bool hasSeedID;
  private int seedID_;
  public bool HasSeedID {
    get { return hasSeedID; }
  }
  public int SeedID {
    get { return seedID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSeedReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[2], UserGameID);
    }
    if (hasFieldsID) {
      output.WriteInt32(2, field_names[0], FieldsID);
    }
    if (hasSeedID) {
      output.WriteInt32(3, field_names[1], SeedID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, FieldsID);
    }
    if (hasSeedID) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, SeedID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Seed_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Seed_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Seed_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Seed_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Seed_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Seed_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Seed_Req result;
    
    private Farm_Game_Seed_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Seed_Req original = result;
        result = new Farm_Game_Seed_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Seed_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Seed_Req.Descriptor; }
    }
    
    public override Farm_Game_Seed_Req DefaultInstanceForType {
      get { return global::Farm_Game_Seed_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Seed_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Seed_Req) {
        return MergeFrom((Farm_Game_Seed_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Seed_Req other) {
      if (other == global::Farm_Game_Seed_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      if (other.HasSeedID) {
        SeedID = other.SeedID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSeedReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSeedReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
          case 24: {
            result.hasSeedID = input.ReadInt32(ref result.seedID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
    
    public bool HasSeedID {
      get { return result.hasSeedID; }
    }
    public int SeedID {
      get { return result.SeedID; }
      set { SetSeedID(value); }
    }
    public Builder SetSeedID(int value) {
      PrepareBuilder();
      result.hasSeedID = true;
      result.seedID_ = value;
      return this;
    }
    public Builder ClearSeedID() {
      PrepareBuilder();
      result.hasSeedID = false;
      result.seedID_ = 0;
      return this;
    }
  }
  static Farm_Game_Seed_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Seed_Anw : pb::GeneratedMessage<Farm_Game_Seed_Anw, Farm_Game_Seed_Anw.Builder> {
  private Farm_Game_Seed_Anw() { }
  private static readonly Farm_Game_Seed_Anw defaultInstance = new Farm_Game_Seed_Anw().MakeReadOnly();
  private static readonly string[] _farmGameSeedAnwFieldNames = new string[] { "info" };
  private static readonly uint[] _farmGameSeedAnwFieldTags = new uint[] { 26 };
  public static Farm_Game_Seed_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Seed_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Seed_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Seed_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Seed_Anw, Farm_Game_Seed_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Seed_Anw__FieldAccessorTable; }
  }
  
  public const int InfoFieldNumber = 3;
  private bool hasInfo;
  private global::PMsg_Plant info_;
  public bool HasInfo {
    get { return hasInfo; }
  }
  public global::PMsg_Plant Info {
    get { return info_ ?? global::PMsg_Plant.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (HasInfo) {
        if (!Info.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSeedAnwFieldNames;
    if (hasInfo) {
      output.WriteMessage(3, field_names[0], Info);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasInfo) {
      size += pb::CodedOutputStream.ComputeMessageSize(3, Info);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Seed_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Seed_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Seed_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Seed_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Seed_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Seed_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Seed_Anw result;
    
    private Farm_Game_Seed_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Seed_Anw original = result;
        result = new Farm_Game_Seed_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Seed_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Seed_Anw.Descriptor; }
    }
    
    public override Farm_Game_Seed_Anw DefaultInstanceForType {
      get { return global::Farm_Game_Seed_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_Seed_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Seed_Anw) {
        return MergeFrom((Farm_Game_Seed_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Seed_Anw other) {
      if (other == global::Farm_Game_Seed_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasInfo) {
        MergeInfo(other.Info);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSeedAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSeedAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 26: {
            global::PMsg_Plant.Builder subBuilder = global::PMsg_Plant.CreateBuilder();
            if (result.hasInfo) {
              subBuilder.MergeFrom(Info);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            Info = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasInfo {
     get { return result.hasInfo; }
    }
    public global::PMsg_Plant Info {
      get { return result.Info; }
      set { SetInfo(value); }
    }
    public Builder SetInfo(global::PMsg_Plant value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInfo = true;
      result.info_ = value;
      return this;
    }
    public Builder SetInfo(global::PMsg_Plant.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasInfo = true;
      result.info_ = builderForValue.Build();
      return this;
    }
    public Builder MergeInfo(global::PMsg_Plant value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasInfo &&
          result.info_ != global::PMsg_Plant.DefaultInstance) {
          result.info_ = global::PMsg_Plant.CreateBuilder(result.info_).MergeFrom(value).BuildPartial();
      } else {
        result.info_ = value;
      }
      result.hasInfo = true;
      return this;
    }
    public Builder ClearInfo() {
      PrepareBuilder();
      result.hasInfo = false;
      result.info_ = null;
      return this;
    }
  }
  static Farm_Game_Seed_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Action_WF_Req : pb::GeneratedMessage<Farm_Game_Action_WF_Req, Farm_Game_Action_WF_Req.Builder> {
  private Farm_Game_Action_WF_Req() { }
  private static readonly Farm_Game_Action_WF_Req defaultInstance = new Farm_Game_Action_WF_Req().MakeReadOnly();
  private static readonly string[] _farmGameActionWFReqFieldNames = new string[] { "ActionID", "FertilizersID", "FieldsID", "UserGameID" };
  private static readonly uint[] _farmGameActionWFReqFieldTags = new uint[] { 32, 40, 24, 8 };
  public static Farm_Game_Action_WF_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Action_WF_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Action_WF_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_WF_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Action_WF_Req, Farm_Game_Action_WF_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_WF_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int FieldsIDFieldNumber = 3;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public const int ActionIDFieldNumber = 4;
  private bool hasActionID;
  private int actionID_;
  public bool HasActionID {
    get { return hasActionID; }
  }
  public int ActionID {
    get { return actionID_; }
  }
  
  public const int FertilizersIDFieldNumber = 5;
  private bool hasFertilizersID;
  private int fertilizersID_;
  public bool HasFertilizersID {
    get { return hasFertilizersID; }
  }
  public int FertilizersID {
    get { return fertilizersID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameActionWFReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[3], UserGameID);
    }
    if (hasFieldsID) {
      output.WriteInt32(3, field_names[2], FieldsID);
    }
    if (hasActionID) {
      output.WriteInt32(4, field_names[0], ActionID);
    }
    if (hasFertilizersID) {
      output.WriteInt32(5, field_names[1], FertilizersID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, FieldsID);
    }
    if (hasActionID) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, ActionID);
    }
    if (hasFertilizersID) {
      size += pb::CodedOutputStream.ComputeInt32Size(5, FertilizersID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Action_WF_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Action_WF_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Action_WF_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Action_WF_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Action_WF_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Action_WF_Req result;
    
    private Farm_Game_Action_WF_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Action_WF_Req original = result;
        result = new Farm_Game_Action_WF_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Action_WF_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Action_WF_Req.Descriptor; }
    }
    
    public override Farm_Game_Action_WF_Req DefaultInstanceForType {
      get { return global::Farm_Game_Action_WF_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Action_WF_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Action_WF_Req) {
        return MergeFrom((Farm_Game_Action_WF_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Action_WF_Req other) {
      if (other == global::Farm_Game_Action_WF_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      if (other.HasActionID) {
        ActionID = other.ActionID;
      }
      if (other.HasFertilizersID) {
        FertilizersID = other.FertilizersID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameActionWFReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameActionWFReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 24: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
          case 32: {
            result.hasActionID = input.ReadInt32(ref result.actionID_);
            break;
          }
          case 40: {
            result.hasFertilizersID = input.ReadInt32(ref result.fertilizersID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
    
    public bool HasActionID {
      get { return result.hasActionID; }
    }
    public int ActionID {
      get { return result.ActionID; }
      set { SetActionID(value); }
    }
    public Builder SetActionID(int value) {
      PrepareBuilder();
      result.hasActionID = true;
      result.actionID_ = value;
      return this;
    }
    public Builder ClearActionID() {
      PrepareBuilder();
      result.hasActionID = false;
      result.actionID_ = 0;
      return this;
    }
    
    public bool HasFertilizersID {
      get { return result.hasFertilizersID; }
    }
    public int FertilizersID {
      get { return result.FertilizersID; }
      set { SetFertilizersID(value); }
    }
    public Builder SetFertilizersID(int value) {
      PrepareBuilder();
      result.hasFertilizersID = true;
      result.fertilizersID_ = value;
      return this;
    }
    public Builder ClearFertilizersID() {
      PrepareBuilder();
      result.hasFertilizersID = false;
      result.fertilizersID_ = 0;
      return this;
    }
  }
  static Farm_Game_Action_WF_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Action_WF_Anw : pb::GeneratedMessage<Farm_Game_Action_WF_Anw, Farm_Game_Action_WF_Anw.Builder> {
  private Farm_Game_Action_WF_Anw() { }
  private static readonly Farm_Game_Action_WF_Anw defaultInstance = new Farm_Game_Action_WF_Anw().MakeReadOnly();
  private static readonly string[] _farmGameActionWFAnwFieldNames = new string[] { "ActionID", "FieldsID" };
  private static readonly uint[] _farmGameActionWFAnwFieldTags = new uint[] { 32, 24 };
  public static Farm_Game_Action_WF_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Action_WF_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Action_WF_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_WF_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Action_WF_Anw, Farm_Game_Action_WF_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_WF_Anw__FieldAccessorTable; }
  }
  
  public const int FieldsIDFieldNumber = 3;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public const int ActionIDFieldNumber = 4;
  private bool hasActionID;
  private int actionID_;
  public bool HasActionID {
    get { return hasActionID; }
  }
  public int ActionID {
    get { return actionID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameActionWFAnwFieldNames;
    if (hasFieldsID) {
      output.WriteInt32(3, field_names[1], FieldsID);
    }
    if (hasActionID) {
      output.WriteInt32(4, field_names[0], ActionID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, FieldsID);
    }
    if (hasActionID) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, ActionID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_WF_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Action_WF_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Action_WF_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Action_WF_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Action_WF_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Action_WF_Anw result;
    
    private Farm_Game_Action_WF_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Action_WF_Anw original = result;
        result = new Farm_Game_Action_WF_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Action_WF_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Action_WF_Anw.Descriptor; }
    }
    
    public override Farm_Game_Action_WF_Anw DefaultInstanceForType {
      get { return global::Farm_Game_Action_WF_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_Action_WF_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Action_WF_Anw) {
        return MergeFrom((Farm_Game_Action_WF_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Action_WF_Anw other) {
      if (other == global::Farm_Game_Action_WF_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      if (other.HasActionID) {
        ActionID = other.ActionID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameActionWFAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameActionWFAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 24: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
          case 32: {
            result.hasActionID = input.ReadInt32(ref result.actionID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
    
    public bool HasActionID {
      get { return result.hasActionID; }
    }
    public int ActionID {
      get { return result.ActionID; }
      set { SetActionID(value); }
    }
    public Builder SetActionID(int value) {
      PrepareBuilder();
      result.hasActionID = true;
      result.actionID_ = value;
      return this;
    }
    public Builder ClearActionID() {
      PrepareBuilder();
      result.hasActionID = false;
      result.actionID_ = 0;
      return this;
    }
  }
  static Farm_Game_Action_WF_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Action_Pluck_Req : pb::GeneratedMessage<Farm_Game_Action_Pluck_Req, Farm_Game_Action_Pluck_Req.Builder> {
  private Farm_Game_Action_Pluck_Req() { }
  private static readonly Farm_Game_Action_Pluck_Req defaultInstance = new Farm_Game_Action_Pluck_Req().MakeReadOnly();
  private static readonly string[] _farmGameActionPluckReqFieldNames = new string[] { "FieldsID", "UserGameID", "VisitedGameID" };
  private static readonly uint[] _farmGameActionPluckReqFieldTags = new uint[] { 16, 8, 24 };
  public static Farm_Game_Action_Pluck_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Action_Pluck_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Action_Pluck_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Pluck_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Action_Pluck_Req, Farm_Game_Action_Pluck_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Pluck_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int FieldsIDFieldNumber = 2;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public const int VisitedGameIDFieldNumber = 3;
  private bool hasVisitedGameID;
  private int visitedGameID_;
  public bool HasVisitedGameID {
    get { return hasVisitedGameID; }
  }
  public int VisitedGameID {
    get { return visitedGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameActionPluckReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasFieldsID) {
      output.WriteInt32(2, field_names[0], FieldsID);
    }
    if (hasVisitedGameID) {
      output.WriteInt32(3, field_names[2], VisitedGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, FieldsID);
    }
    if (hasVisitedGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, VisitedGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Action_Pluck_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Action_Pluck_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Action_Pluck_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Action_Pluck_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Action_Pluck_Req result;
    
    private Farm_Game_Action_Pluck_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Action_Pluck_Req original = result;
        result = new Farm_Game_Action_Pluck_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Action_Pluck_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Action_Pluck_Req.Descriptor; }
    }
    
    public override Farm_Game_Action_Pluck_Req DefaultInstanceForType {
      get { return global::Farm_Game_Action_Pluck_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Action_Pluck_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Action_Pluck_Req) {
        return MergeFrom((Farm_Game_Action_Pluck_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Action_Pluck_Req other) {
      if (other == global::Farm_Game_Action_Pluck_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      if (other.HasVisitedGameID) {
        VisitedGameID = other.VisitedGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameActionPluckReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameActionPluckReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
          case 24: {
            result.hasVisitedGameID = input.ReadInt32(ref result.visitedGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
    
    public bool HasVisitedGameID {
      get { return result.hasVisitedGameID; }
    }
    public int VisitedGameID {
      get { return result.VisitedGameID; }
      set { SetVisitedGameID(value); }
    }
    public Builder SetVisitedGameID(int value) {
      PrepareBuilder();
      result.hasVisitedGameID = true;
      result.visitedGameID_ = value;
      return this;
    }
    public Builder ClearVisitedGameID() {
      PrepareBuilder();
      result.hasVisitedGameID = false;
      result.visitedGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_Action_Pluck_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Action_Pluck_Anw : pb::GeneratedMessage<Farm_Game_Action_Pluck_Anw, Farm_Game_Action_Pluck_Anw.Builder> {
  private Farm_Game_Action_Pluck_Anw() { }
  private static readonly Farm_Game_Action_Pluck_Anw defaultInstance = new Farm_Game_Action_Pluck_Anw().MakeReadOnly();
  private static readonly string[] _farmGameActionPluckAnwFieldNames = new string[] { "array" };
  private static readonly uint[] _farmGameActionPluckAnwFieldTags = new uint[] { 16 };
  public static Farm_Game_Action_Pluck_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Action_Pluck_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Action_Pluck_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Pluck_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Action_Pluck_Anw, Farm_Game_Action_Pluck_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Pluck_Anw__FieldAccessorTable; }
  }
  
  public const int ArrayFieldNumber = 2;
  private pbc::PopsicleList<int> array_ = new pbc::PopsicleList<int>();
  public scg::IList<int> ArrayList {
    get { return pbc::Lists.AsReadOnly(array_); }
  }
  public int ArrayCount {
    get { return array_.Count; }
  }
  public int GetArray(int index) {
    return array_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameActionPluckAnwFieldNames;
    if (array_.Count > 0) {
      output.WriteInt32Array(2, field_names[0], array_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    {
      int dataSize = 0;
      foreach (int element in ArrayList) {
        dataSize += pb::CodedOutputStream.ComputeInt32SizeNoTag(element);
      }
      size += dataSize;
      size += 1 * array_.Count;
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Pluck_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Action_Pluck_Anw MakeReadOnly() {
    array_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Action_Pluck_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Action_Pluck_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Action_Pluck_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Action_Pluck_Anw result;
    
    private Farm_Game_Action_Pluck_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Action_Pluck_Anw original = result;
        result = new Farm_Game_Action_Pluck_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Action_Pluck_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Action_Pluck_Anw.Descriptor; }
    }
    
    public override Farm_Game_Action_Pluck_Anw DefaultInstanceForType {
      get { return global::Farm_Game_Action_Pluck_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_Action_Pluck_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Action_Pluck_Anw) {
        return MergeFrom((Farm_Game_Action_Pluck_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Action_Pluck_Anw other) {
      if (other == global::Farm_Game_Action_Pluck_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.array_.Count != 0) {
        result.array_.Add(other.array_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameActionPluckAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameActionPluckAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18:
          case 16: {
            input.ReadInt32Array(tag, field_name, result.array_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<int> ArrayList {
      get { return PrepareBuilder().array_; }
    }
    public int ArrayCount {
      get { return result.ArrayCount; }
    }
    public int GetArray(int index) {
      return result.GetArray(index);
    }
    public Builder SetArray(int index, int value) {
      PrepareBuilder();
      result.array_[index] = value;
      return this;
    }
    public Builder AddArray(int value) {
      PrepareBuilder();
      result.array_.Add(value);
      return this;
    }
    public Builder AddRangeArray(scg::IEnumerable<int> values) {
      PrepareBuilder();
      result.array_.Add(values);
      return this;
    }
    public Builder ClearArray() {
      PrepareBuilder();
      result.array_.Clear();
      return this;
    }
  }
  static Farm_Game_Action_Pluck_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Action_Anw : pb::GeneratedMessage<Farm_Game_Action_Anw, Farm_Game_Action_Anw.Builder> {
  private Farm_Game_Action_Anw() { }
  private static readonly Farm_Game_Action_Anw defaultInstance = new Farm_Game_Action_Anw().MakeReadOnly();
  private static readonly string[] _farmGameActionAnwFieldNames = new string[] { "ActionID", "FieldsID" };
  private static readonly uint[] _farmGameActionAnwFieldTags = new uint[] { 16, 8 };
  public static Farm_Game_Action_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Action_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Action_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Action_Anw, Farm_Game_Action_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Action_Anw__FieldAccessorTable; }
  }
  
  public const int FieldsIDFieldNumber = 1;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public const int ActionIDFieldNumber = 2;
  private bool hasActionID;
  private int actionID_;
  public bool HasActionID {
    get { return hasActionID; }
  }
  public int ActionID {
    get { return actionID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameActionAnwFieldNames;
    if (hasFieldsID) {
      output.WriteInt32(1, field_names[1], FieldsID);
    }
    if (hasActionID) {
      output.WriteInt32(2, field_names[0], ActionID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, FieldsID);
    }
    if (hasActionID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, ActionID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Action_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Action_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Action_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Action_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Action_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Action_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Action_Anw result;
    
    private Farm_Game_Action_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Action_Anw original = result;
        result = new Farm_Game_Action_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Action_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Action_Anw.Descriptor; }
    }
    
    public override Farm_Game_Action_Anw DefaultInstanceForType {
      get { return global::Farm_Game_Action_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_Action_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Action_Anw) {
        return MergeFrom((Farm_Game_Action_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Action_Anw other) {
      if (other == global::Farm_Game_Action_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      if (other.HasActionID) {
        ActionID = other.ActionID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameActionAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameActionAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
          case 16: {
            result.hasActionID = input.ReadInt32(ref result.actionID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
    
    public bool HasActionID {
      get { return result.hasActionID; }
    }
    public int ActionID {
      get { return result.ActionID; }
      set { SetActionID(value); }
    }
    public Builder SetActionID(int value) {
      PrepareBuilder();
      result.hasActionID = true;
      result.actionID_ = value;
      return this;
    }
    public Builder ClearActionID() {
      PrepareBuilder();
      result.hasActionID = false;
      result.actionID_ = 0;
      return this;
    }
  }
  static Farm_Game_Action_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_buyOrSell_Req : pb::GeneratedMessage<Farm_Game_buyOrSell_Req, Farm_Game_buyOrSell_Req.Builder> {
  private Farm_Game_buyOrSell_Req() { }
  private static readonly Farm_Game_buyOrSell_Req defaultInstance = new Farm_Game_buyOrSell_Req().MakeReadOnly();
  private static readonly string[] _farmGameBuyOrSellReqFieldNames = new string[] { "Count", "ShoppingItemID", "UserGameID", "buyOrSell" };
  private static readonly uint[] _farmGameBuyOrSellReqFieldTags = new uint[] { 24, 16, 8, 40 };
  public static Farm_Game_buyOrSell_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_buyOrSell_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_buyOrSell_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_buyOrSell_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_buyOrSell_Req, Farm_Game_buyOrSell_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_buyOrSell_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int ShoppingItemIDFieldNumber = 2;
  private bool hasShoppingItemID;
  private int shoppingItemID_;
  public bool HasShoppingItemID {
    get { return hasShoppingItemID; }
  }
  public int ShoppingItemID {
    get { return shoppingItemID_; }
  }
  
  public const int CountFieldNumber = 3;
  private bool hasCount;
  private int count_;
  public bool HasCount {
    get { return hasCount; }
  }
  public int Count {
    get { return count_; }
  }
  
  public const int BuyOrSellFieldNumber = 5;
  private bool hasBuyOrSell;
  private int buyOrSell_;
  public bool HasBuyOrSell {
    get { return hasBuyOrSell; }
  }
  public int BuyOrSell {
    get { return buyOrSell_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameBuyOrSellReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[2], UserGameID);
    }
    if (hasShoppingItemID) {
      output.WriteInt32(2, field_names[1], ShoppingItemID);
    }
    if (hasCount) {
      output.WriteInt32(3, field_names[0], Count);
    }
    if (hasBuyOrSell) {
      output.WriteInt32(5, field_names[3], BuyOrSell);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasShoppingItemID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, ShoppingItemID);
    }
    if (hasCount) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, Count);
    }
    if (hasBuyOrSell) {
      size += pb::CodedOutputStream.ComputeInt32Size(5, BuyOrSell);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_buyOrSell_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_buyOrSell_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_buyOrSell_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_buyOrSell_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_buyOrSell_Req result;
    
    private Farm_Game_buyOrSell_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_buyOrSell_Req original = result;
        result = new Farm_Game_buyOrSell_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_buyOrSell_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_buyOrSell_Req.Descriptor; }
    }
    
    public override Farm_Game_buyOrSell_Req DefaultInstanceForType {
      get { return global::Farm_Game_buyOrSell_Req.DefaultInstance; }
    }
    
    public override Farm_Game_buyOrSell_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_buyOrSell_Req) {
        return MergeFrom((Farm_Game_buyOrSell_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_buyOrSell_Req other) {
      if (other == global::Farm_Game_buyOrSell_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasShoppingItemID) {
        ShoppingItemID = other.ShoppingItemID;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      if (other.HasBuyOrSell) {
        BuyOrSell = other.BuyOrSell;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameBuyOrSellReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameBuyOrSellReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasShoppingItemID = input.ReadInt32(ref result.shoppingItemID_);
            break;
          }
          case 24: {
            result.hasCount = input.ReadInt32(ref result.count_);
            break;
          }
          case 40: {
            result.hasBuyOrSell = input.ReadInt32(ref result.buyOrSell_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasShoppingItemID {
      get { return result.hasShoppingItemID; }
    }
    public int ShoppingItemID {
      get { return result.ShoppingItemID; }
      set { SetShoppingItemID(value); }
    }
    public Builder SetShoppingItemID(int value) {
      PrepareBuilder();
      result.hasShoppingItemID = true;
      result.shoppingItemID_ = value;
      return this;
    }
    public Builder ClearShoppingItemID() {
      PrepareBuilder();
      result.hasShoppingItemID = false;
      result.shoppingItemID_ = 0;
      return this;
    }
    
    public bool HasCount {
      get { return result.hasCount; }
    }
    public int Count {
      get { return result.Count; }
      set { SetCount(value); }
    }
    public Builder SetCount(int value) {
      PrepareBuilder();
      result.hasCount = true;
      result.count_ = value;
      return this;
    }
    public Builder ClearCount() {
      PrepareBuilder();
      result.hasCount = false;
      result.count_ = 0;
      return this;
    }
    
    public bool HasBuyOrSell {
      get { return result.hasBuyOrSell; }
    }
    public int BuyOrSell {
      get { return result.BuyOrSell; }
      set { SetBuyOrSell(value); }
    }
    public Builder SetBuyOrSell(int value) {
      PrepareBuilder();
      result.hasBuyOrSell = true;
      result.buyOrSell_ = value;
      return this;
    }
    public Builder ClearBuyOrSell() {
      PrepareBuilder();
      result.hasBuyOrSell = false;
      result.buyOrSell_ = 0;
      return this;
    }
  }
  static Farm_Game_buyOrSell_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_buyOrSell_Anw : pb::GeneratedMessage<Farm_Game_buyOrSell_Anw, Farm_Game_buyOrSell_Anw.Builder> {
  private Farm_Game_buyOrSell_Anw() { }
  private static readonly Farm_Game_buyOrSell_Anw defaultInstance = new Farm_Game_buyOrSell_Anw().MakeReadOnly();
  private static readonly string[] _farmGameBuyOrSellAnwFieldNames = new string[] {  };
  private static readonly uint[] _farmGameBuyOrSellAnwFieldTags = new uint[] {  };
  public static Farm_Game_buyOrSell_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_buyOrSell_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_buyOrSell_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_buyOrSell_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_buyOrSell_Anw, Farm_Game_buyOrSell_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_buyOrSell_Anw__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameBuyOrSellAnwFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_buyOrSell_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_buyOrSell_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_buyOrSell_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_buyOrSell_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_buyOrSell_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_buyOrSell_Anw result;
    
    private Farm_Game_buyOrSell_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_buyOrSell_Anw original = result;
        result = new Farm_Game_buyOrSell_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_buyOrSell_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_buyOrSell_Anw.Descriptor; }
    }
    
    public override Farm_Game_buyOrSell_Anw DefaultInstanceForType {
      get { return global::Farm_Game_buyOrSell_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_buyOrSell_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_buyOrSell_Anw) {
        return MergeFrom((Farm_Game_buyOrSell_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_buyOrSell_Anw other) {
      if (other == global::Farm_Game_buyOrSell_Anw.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameBuyOrSellAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameBuyOrSellAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static Farm_Game_buyOrSell_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_pay_Req : pb::GeneratedMessage<Farm_Game_pay_Req, Farm_Game_pay_Req.Builder> {
  private Farm_Game_pay_Req() { }
  private static readonly Farm_Game_pay_Req defaultInstance = new Farm_Game_pay_Req().MakeReadOnly();
  private static readonly string[] _farmGamePayReqFieldNames = new string[] { "Count", "UserGameID" };
  private static readonly uint[] _farmGamePayReqFieldTags = new uint[] { 16, 8 };
  public static Farm_Game_pay_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_pay_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_pay_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_pay_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_pay_Req, Farm_Game_pay_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_pay_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int CountFieldNumber = 2;
  private bool hasCount;
  private int count_;
  public bool HasCount {
    get { return hasCount; }
  }
  public int Count {
    get { return count_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGamePayReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasCount) {
      output.WriteInt32(2, field_names[0], Count);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasCount) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Count);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_pay_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_pay_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_pay_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_pay_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_pay_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_pay_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_pay_Req result;
    
    private Farm_Game_pay_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_pay_Req original = result;
        result = new Farm_Game_pay_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_pay_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_pay_Req.Descriptor; }
    }
    
    public override Farm_Game_pay_Req DefaultInstanceForType {
      get { return global::Farm_Game_pay_Req.DefaultInstance; }
    }
    
    public override Farm_Game_pay_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_pay_Req) {
        return MergeFrom((Farm_Game_pay_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_pay_Req other) {
      if (other == global::Farm_Game_pay_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasCount) {
        Count = other.Count;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGamePayReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGamePayReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasCount = input.ReadInt32(ref result.count_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasCount {
      get { return result.hasCount; }
    }
    public int Count {
      get { return result.Count; }
      set { SetCount(value); }
    }
    public Builder SetCount(int value) {
      PrepareBuilder();
      result.hasCount = true;
      result.count_ = value;
      return this;
    }
    public Builder ClearCount() {
      PrepareBuilder();
      result.hasCount = false;
      result.count_ = 0;
      return this;
    }
  }
  static Farm_Game_pay_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_pay_Anw : pb::GeneratedMessage<Farm_Game_pay_Anw, Farm_Game_pay_Anw.Builder> {
  private Farm_Game_pay_Anw() { }
  private static readonly Farm_Game_pay_Anw defaultInstance = new Farm_Game_pay_Anw().MakeReadOnly();
  private static readonly string[] _farmGamePayAnwFieldNames = new string[] {  };
  private static readonly uint[] _farmGamePayAnwFieldTags = new uint[] {  };
  public static Farm_Game_pay_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_pay_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_pay_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_pay_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_pay_Anw, Farm_Game_pay_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_pay_Anw__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGamePayAnwFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_pay_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_pay_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_pay_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_pay_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_pay_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_pay_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_pay_Anw result;
    
    private Farm_Game_pay_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_pay_Anw original = result;
        result = new Farm_Game_pay_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_pay_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_pay_Anw.Descriptor; }
    }
    
    public override Farm_Game_pay_Anw DefaultInstanceForType {
      get { return global::Farm_Game_pay_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_pay_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_pay_Anw) {
        return MergeFrom((Farm_Game_pay_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_pay_Anw other) {
      if (other == global::Farm_Game_pay_Anw.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGamePayAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGamePayAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static Farm_Game_pay_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_SingleFriendInfo_Req : pb::GeneratedMessage<Farm_Game_SingleFriendInfo_Req, Farm_Game_SingleFriendInfo_Req.Builder> {
  private Farm_Game_SingleFriendInfo_Req() { }
  private static readonly Farm_Game_SingleFriendInfo_Req defaultInstance = new Farm_Game_SingleFriendInfo_Req().MakeReadOnly();
  private static readonly string[] _farmGameSingleFriendInfoReqFieldNames = new string[] { "UserGameID", "VisitedGameID" };
  private static readonly uint[] _farmGameSingleFriendInfoReqFieldTags = new uint[] { 8, 16 };
  public static Farm_Game_SingleFriendInfo_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_SingleFriendInfo_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_SingleFriendInfo_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SingleFriendInfo_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_SingleFriendInfo_Req, Farm_Game_SingleFriendInfo_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SingleFriendInfo_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int VisitedGameIDFieldNumber = 2;
  private bool hasVisitedGameID;
  private int visitedGameID_;
  public bool HasVisitedGameID {
    get { return hasVisitedGameID; }
  }
  public int VisitedGameID {
    get { return visitedGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSingleFriendInfoReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    if (hasVisitedGameID) {
      output.WriteInt32(2, field_names[1], VisitedGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasVisitedGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, VisitedGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_SingleFriendInfo_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_SingleFriendInfo_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_SingleFriendInfo_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_SingleFriendInfo_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_SingleFriendInfo_Req result;
    
    private Farm_Game_SingleFriendInfo_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_SingleFriendInfo_Req original = result;
        result = new Farm_Game_SingleFriendInfo_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_SingleFriendInfo_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_SingleFriendInfo_Req.Descriptor; }
    }
    
    public override Farm_Game_SingleFriendInfo_Req DefaultInstanceForType {
      get { return global::Farm_Game_SingleFriendInfo_Req.DefaultInstance; }
    }
    
    public override Farm_Game_SingleFriendInfo_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_SingleFriendInfo_Req) {
        return MergeFrom((Farm_Game_SingleFriendInfo_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_SingleFriendInfo_Req other) {
      if (other == global::Farm_Game_SingleFriendInfo_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasVisitedGameID) {
        VisitedGameID = other.VisitedGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSingleFriendInfoReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSingleFriendInfoReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasVisitedGameID = input.ReadInt32(ref result.visitedGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasVisitedGameID {
      get { return result.hasVisitedGameID; }
    }
    public int VisitedGameID {
      get { return result.VisitedGameID; }
      set { SetVisitedGameID(value); }
    }
    public Builder SetVisitedGameID(int value) {
      PrepareBuilder();
      result.hasVisitedGameID = true;
      result.visitedGameID_ = value;
      return this;
    }
    public Builder ClearVisitedGameID() {
      PrepareBuilder();
      result.hasVisitedGameID = false;
      result.visitedGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_SingleFriendInfo_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_SingleFriendInfo_Anw : pb::GeneratedMessage<Farm_Game_SingleFriendInfo_Anw, Farm_Game_SingleFriendInfo_Anw.Builder> {
  private Farm_Game_SingleFriendInfo_Anw() { }
  private static readonly Farm_Game_SingleFriendInfo_Anw defaultInstance = new Farm_Game_SingleFriendInfo_Anw().MakeReadOnly();
  private static readonly string[] _farmGameSingleFriendInfoAnwFieldNames = new string[] { "One_FriendInfo", "mapArray" };
  private static readonly uint[] _farmGameSingleFriendInfoAnwFieldTags = new uint[] { 10, 18 };
  public static Farm_Game_SingleFriendInfo_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_SingleFriendInfo_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_SingleFriendInfo_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SingleFriendInfo_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_SingleFriendInfo_Anw, Farm_Game_SingleFriendInfo_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SingleFriendInfo_Anw__FieldAccessorTable; }
  }
  
  public const int OneFriendInfoFieldNumber = 1;
  private bool hasOneFriendInfo;
  private global::Farm_Game_UserInfo_Anw oneFriendInfo_;
  public bool HasOneFriendInfo {
    get { return hasOneFriendInfo; }
  }
  public global::Farm_Game_UserInfo_Anw OneFriendInfo {
    get { return oneFriendInfo_ ?? global::Farm_Game_UserInfo_Anw.DefaultInstance; }
  }
  
  public const int MapArrayFieldNumber = 2;
  private pbc::PopsicleList<global::PMsg_MapUnit> mapArray_ = new pbc::PopsicleList<global::PMsg_MapUnit>();
  public scg::IList<global::PMsg_MapUnit> MapArrayList {
    get { return mapArray_; }
  }
  public int MapArrayCount {
    get { return mapArray_.Count; }
  }
  public global::PMsg_MapUnit GetMapArray(int index) {
    return mapArray_[index];
  }
  
  public override bool IsInitialized {
    get {
      if (HasOneFriendInfo) {
        if (!OneFriendInfo.IsInitialized) return false;
      }
      foreach (global::PMsg_MapUnit element in MapArrayList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSingleFriendInfoAnwFieldNames;
    if (hasOneFriendInfo) {
      output.WriteMessage(1, field_names[0], OneFriendInfo);
    }
    if (mapArray_.Count > 0) {
      output.WriteMessageArray(2, field_names[1], mapArray_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasOneFriendInfo) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, OneFriendInfo);
    }
    foreach (global::PMsg_MapUnit element in MapArrayList) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SingleFriendInfo_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_SingleFriendInfo_Anw MakeReadOnly() {
    mapArray_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_SingleFriendInfo_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_SingleFriendInfo_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_SingleFriendInfo_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_SingleFriendInfo_Anw result;
    
    private Farm_Game_SingleFriendInfo_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_SingleFriendInfo_Anw original = result;
        result = new Farm_Game_SingleFriendInfo_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_SingleFriendInfo_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_SingleFriendInfo_Anw.Descriptor; }
    }
    
    public override Farm_Game_SingleFriendInfo_Anw DefaultInstanceForType {
      get { return global::Farm_Game_SingleFriendInfo_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_SingleFriendInfo_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_SingleFriendInfo_Anw) {
        return MergeFrom((Farm_Game_SingleFriendInfo_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_SingleFriendInfo_Anw other) {
      if (other == global::Farm_Game_SingleFriendInfo_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasOneFriendInfo) {
        MergeOneFriendInfo(other.OneFriendInfo);
      }
      if (other.mapArray_.Count != 0) {
        result.mapArray_.Add(other.mapArray_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSingleFriendInfoAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSingleFriendInfoAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            global::Farm_Game_UserInfo_Anw.Builder subBuilder = global::Farm_Game_UserInfo_Anw.CreateBuilder();
            if (result.hasOneFriendInfo) {
              subBuilder.MergeFrom(OneFriendInfo);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            OneFriendInfo = subBuilder.BuildPartial();
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.mapArray_, global::PMsg_MapUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasOneFriendInfo {
     get { return result.hasOneFriendInfo; }
    }
    public global::Farm_Game_UserInfo_Anw OneFriendInfo {
      get { return result.OneFriendInfo; }
      set { SetOneFriendInfo(value); }
    }
    public Builder SetOneFriendInfo(global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOneFriendInfo = true;
      result.oneFriendInfo_ = value;
      return this;
    }
    public Builder SetOneFriendInfo(global::Farm_Game_UserInfo_Anw.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasOneFriendInfo = true;
      result.oneFriendInfo_ = builderForValue.Build();
      return this;
    }
    public Builder MergeOneFriendInfo(global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasOneFriendInfo &&
          result.oneFriendInfo_ != global::Farm_Game_UserInfo_Anw.DefaultInstance) {
          result.oneFriendInfo_ = global::Farm_Game_UserInfo_Anw.CreateBuilder(result.oneFriendInfo_).MergeFrom(value).BuildPartial();
      } else {
        result.oneFriendInfo_ = value;
      }
      result.hasOneFriendInfo = true;
      return this;
    }
    public Builder ClearOneFriendInfo() {
      PrepareBuilder();
      result.hasOneFriendInfo = false;
      result.oneFriendInfo_ = null;
      return this;
    }
    
    public pbc::IPopsicleList<global::PMsg_MapUnit> MapArrayList {
      get { return PrepareBuilder().mapArray_; }
    }
    public int MapArrayCount {
      get { return result.MapArrayCount; }
    }
    public global::PMsg_MapUnit GetMapArray(int index) {
      return result.GetMapArray(index);
    }
    public Builder SetMapArray(int index, global::PMsg_MapUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.mapArray_[index] = value;
      return this;
    }
    public Builder SetMapArray(int index, global::PMsg_MapUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.mapArray_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddMapArray(global::PMsg_MapUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.mapArray_.Add(value);
      return this;
    }
    public Builder AddMapArray(global::PMsg_MapUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.mapArray_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeMapArray(scg::IEnumerable<global::PMsg_MapUnit> values) {
      PrepareBuilder();
      result.mapArray_.Add(values);
      return this;
    }
    public Builder ClearMapArray() {
      PrepareBuilder();
      result.mapArray_.Clear();
      return this;
    }
  }
  static Farm_Game_SingleFriendInfo_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_OidUpgrade_Req : pb::GeneratedMessage<Farm_Game_OidUpgrade_Req, Farm_Game_OidUpgrade_Req.Builder> {
  private Farm_Game_OidUpgrade_Req() { }
  private static readonly Farm_Game_OidUpgrade_Req defaultInstance = new Farm_Game_OidUpgrade_Req().MakeReadOnly();
  private static readonly string[] _farmGameOidUpgradeReqFieldNames = new string[] { "Number", "Pattern", "ProduceID", "UserGameID" };
  private static readonly uint[] _farmGameOidUpgradeReqFieldTags = new uint[] { 24, 32, 16, 8 };
  public static Farm_Game_OidUpgrade_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_OidUpgrade_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_OidUpgrade_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OidUpgrade_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_OidUpgrade_Req, Farm_Game_OidUpgrade_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OidUpgrade_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int ProduceIDFieldNumber = 2;
  private bool hasProduceID;
  private int produceID_;
  public bool HasProduceID {
    get { return hasProduceID; }
  }
  public int ProduceID {
    get { return produceID_; }
  }
  
  public const int NumberFieldNumber = 3;
  private bool hasNumber;
  private int number_;
  public bool HasNumber {
    get { return hasNumber; }
  }
  public int Number {
    get { return number_; }
  }
  
  public const int PatternFieldNumber = 4;
  private bool hasPattern;
  private int pattern_;
  public bool HasPattern {
    get { return hasPattern; }
  }
  public int Pattern {
    get { return pattern_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameOidUpgradeReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[3], UserGameID);
    }
    if (hasProduceID) {
      output.WriteInt32(2, field_names[2], ProduceID);
    }
    if (hasNumber) {
      output.WriteInt32(3, field_names[0], Number);
    }
    if (hasPattern) {
      output.WriteInt32(4, field_names[1], Pattern);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasProduceID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, ProduceID);
    }
    if (hasNumber) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, Number);
    }
    if (hasPattern) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, Pattern);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OidUpgrade_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_OidUpgrade_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_OidUpgrade_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_OidUpgrade_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_OidUpgrade_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_OidUpgrade_Req result;
    
    private Farm_Game_OidUpgrade_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_OidUpgrade_Req original = result;
        result = new Farm_Game_OidUpgrade_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_OidUpgrade_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_OidUpgrade_Req.Descriptor; }
    }
    
    public override Farm_Game_OidUpgrade_Req DefaultInstanceForType {
      get { return global::Farm_Game_OidUpgrade_Req.DefaultInstance; }
    }
    
    public override Farm_Game_OidUpgrade_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_OidUpgrade_Req) {
        return MergeFrom((Farm_Game_OidUpgrade_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_OidUpgrade_Req other) {
      if (other == global::Farm_Game_OidUpgrade_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasProduceID) {
        ProduceID = other.ProduceID;
      }
      if (other.HasNumber) {
        Number = other.Number;
      }
      if (other.HasPattern) {
        Pattern = other.Pattern;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameOidUpgradeReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameOidUpgradeReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasProduceID = input.ReadInt32(ref result.produceID_);
            break;
          }
          case 24: {
            result.hasNumber = input.ReadInt32(ref result.number_);
            break;
          }
          case 32: {
            result.hasPattern = input.ReadInt32(ref result.pattern_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasProduceID {
      get { return result.hasProduceID; }
    }
    public int ProduceID {
      get { return result.ProduceID; }
      set { SetProduceID(value); }
    }
    public Builder SetProduceID(int value) {
      PrepareBuilder();
      result.hasProduceID = true;
      result.produceID_ = value;
      return this;
    }
    public Builder ClearProduceID() {
      PrepareBuilder();
      result.hasProduceID = false;
      result.produceID_ = 0;
      return this;
    }
    
    public bool HasNumber {
      get { return result.hasNumber; }
    }
    public int Number {
      get { return result.Number; }
      set { SetNumber(value); }
    }
    public Builder SetNumber(int value) {
      PrepareBuilder();
      result.hasNumber = true;
      result.number_ = value;
      return this;
    }
    public Builder ClearNumber() {
      PrepareBuilder();
      result.hasNumber = false;
      result.number_ = 0;
      return this;
    }
    
    public bool HasPattern {
      get { return result.hasPattern; }
    }
    public int Pattern {
      get { return result.Pattern; }
      set { SetPattern(value); }
    }
    public Builder SetPattern(int value) {
      PrepareBuilder();
      result.hasPattern = true;
      result.pattern_ = value;
      return this;
    }
    public Builder ClearPattern() {
      PrepareBuilder();
      result.hasPattern = false;
      result.pattern_ = 0;
      return this;
    }
  }
  static Farm_Game_OidUpgrade_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_OilUpgrade_Anw : pb::GeneratedMessage<Farm_Game_OilUpgrade_Anw, Farm_Game_OilUpgrade_Anw.Builder> {
  private Farm_Game_OilUpgrade_Anw() { }
  private static readonly Farm_Game_OilUpgrade_Anw defaultInstance = new Farm_Game_OilUpgrade_Anw().MakeReadOnly();
  private static readonly string[] _farmGameOilUpgradeAnwFieldNames = new string[] {  };
  private static readonly uint[] _farmGameOilUpgradeAnwFieldTags = new uint[] {  };
  public static Farm_Game_OilUpgrade_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_OilUpgrade_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_OilUpgrade_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OilUpgrade_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_OilUpgrade_Anw, Farm_Game_OilUpgrade_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OilUpgrade_Anw__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameOilUpgradeAnwFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OilUpgrade_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_OilUpgrade_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_OilUpgrade_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_OilUpgrade_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_OilUpgrade_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_OilUpgrade_Anw result;
    
    private Farm_Game_OilUpgrade_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_OilUpgrade_Anw original = result;
        result = new Farm_Game_OilUpgrade_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_OilUpgrade_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_OilUpgrade_Anw.Descriptor; }
    }
    
    public override Farm_Game_OilUpgrade_Anw DefaultInstanceForType {
      get { return global::Farm_Game_OilUpgrade_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_OilUpgrade_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_OilUpgrade_Anw) {
        return MergeFrom((Farm_Game_OilUpgrade_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_OilUpgrade_Anw other) {
      if (other == global::Farm_Game_OilUpgrade_Anw.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameOilUpgradeAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameOilUpgradeAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static Farm_Game_OilUpgrade_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_AddFriend_Req : pb::GeneratedMessage<Farm_Game_AddFriend_Req, Farm_Game_AddFriend_Req.Builder> {
  private Farm_Game_AddFriend_Req() { }
  private static readonly Farm_Game_AddFriend_Req defaultInstance = new Farm_Game_AddFriend_Req().MakeReadOnly();
  private static readonly string[] _farmGameAddFriendReqFieldNames = new string[] { "AddGameID", "UserGameID" };
  private static readonly uint[] _farmGameAddFriendReqFieldTags = new uint[] { 16, 8 };
  public static Farm_Game_AddFriend_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_AddFriend_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_AddFriend_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AddFriend_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_AddFriend_Req, Farm_Game_AddFriend_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AddFriend_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int AddGameIDFieldNumber = 2;
  private bool hasAddGameID;
  private int addGameID_;
  public bool HasAddGameID {
    get { return hasAddGameID; }
  }
  public int AddGameID {
    get { return addGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameAddFriendReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasAddGameID) {
      output.WriteInt32(2, field_names[0], AddGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasAddGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, AddGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_AddFriend_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AddFriend_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_AddFriend_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_AddFriend_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_AddFriend_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_AddFriend_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_AddFriend_Req result;
    
    private Farm_Game_AddFriend_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_AddFriend_Req original = result;
        result = new Farm_Game_AddFriend_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_AddFriend_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_AddFriend_Req.Descriptor; }
    }
    
    public override Farm_Game_AddFriend_Req DefaultInstanceForType {
      get { return global::Farm_Game_AddFriend_Req.DefaultInstance; }
    }
    
    public override Farm_Game_AddFriend_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_AddFriend_Req) {
        return MergeFrom((Farm_Game_AddFriend_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_AddFriend_Req other) {
      if (other == global::Farm_Game_AddFriend_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasAddGameID) {
        AddGameID = other.AddGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameAddFriendReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameAddFriendReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasAddGameID = input.ReadInt32(ref result.addGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasAddGameID {
      get { return result.hasAddGameID; }
    }
    public int AddGameID {
      get { return result.AddGameID; }
      set { SetAddGameID(value); }
    }
    public Builder SetAddGameID(int value) {
      PrepareBuilder();
      result.hasAddGameID = true;
      result.addGameID_ = value;
      return this;
    }
    public Builder ClearAddGameID() {
      PrepareBuilder();
      result.hasAddGameID = false;
      result.addGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_AddFriend_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Sign_Req : pb::GeneratedMessage<Farm_Game_Sign_Req, Farm_Game_Sign_Req.Builder> {
  private Farm_Game_Sign_Req() { }
  private static readonly Farm_Game_Sign_Req defaultInstance = new Farm_Game_Sign_Req().MakeReadOnly();
  private static readonly string[] _farmGameSignReqFieldNames = new string[] { "UserGameID" };
  private static readonly uint[] _farmGameSignReqFieldTags = new uint[] { 8 };
  public static Farm_Game_Sign_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Sign_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Sign_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Sign_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Sign_Req, Farm_Game_Sign_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Sign_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSignReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Sign_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Sign_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Sign_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Sign_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Sign_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Sign_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Sign_Req result;
    
    private Farm_Game_Sign_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Sign_Req original = result;
        result = new Farm_Game_Sign_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Sign_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Sign_Req.Descriptor; }
    }
    
    public override Farm_Game_Sign_Req DefaultInstanceForType {
      get { return global::Farm_Game_Sign_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Sign_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Sign_Req) {
        return MergeFrom((Farm_Game_Sign_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Sign_Req other) {
      if (other == global::Farm_Game_Sign_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSignReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSignReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_Sign_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Sign_Awn : pb::GeneratedMessage<Farm_Game_Sign_Awn, Farm_Game_Sign_Awn.Builder> {
  private Farm_Game_Sign_Awn() { }
  private static readonly Farm_Game_Sign_Awn defaultInstance = new Farm_Game_Sign_Awn().MakeReadOnly();
  private static readonly string[] _farmGameSignAwnFieldNames = new string[] {  };
  private static readonly uint[] _farmGameSignAwnFieldTags = new uint[] {  };
  public static Farm_Game_Sign_Awn DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Sign_Awn DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Sign_Awn ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Sign_Awn__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Sign_Awn, Farm_Game_Sign_Awn.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Sign_Awn__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSignAwnFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Sign_Awn ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Sign_Awn ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Sign_Awn MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Sign_Awn prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Sign_Awn, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Sign_Awn cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Sign_Awn result;
    
    private Farm_Game_Sign_Awn PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Sign_Awn original = result;
        result = new Farm_Game_Sign_Awn();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Sign_Awn MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Sign_Awn.Descriptor; }
    }
    
    public override Farm_Game_Sign_Awn DefaultInstanceForType {
      get { return global::Farm_Game_Sign_Awn.DefaultInstance; }
    }
    
    public override Farm_Game_Sign_Awn BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Sign_Awn) {
        return MergeFrom((Farm_Game_Sign_Awn) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Sign_Awn other) {
      if (other == global::Farm_Game_Sign_Awn.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSignAwnFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSignAwnFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static Farm_Game_Sign_Awn() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_DogUpgrad_Req : pb::GeneratedMessage<Farm_Game_DogUpgrad_Req, Farm_Game_DogUpgrad_Req.Builder> {
  private Farm_Game_DogUpgrad_Req() { }
  private static readonly Farm_Game_DogUpgrad_Req defaultInstance = new Farm_Game_DogUpgrad_Req().MakeReadOnly();
  private static readonly string[] _farmGameDogUpgradReqFieldNames = new string[] { "CurrentEXP", "DogLevel", "MaxEXP" };
  private static readonly uint[] _farmGameDogUpgradReqFieldTags = new uint[] { 16, 8, 24 };
  public static Farm_Game_DogUpgrad_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_DogUpgrad_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_DogUpgrad_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_DogUpgrad_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_DogUpgrad_Req, Farm_Game_DogUpgrad_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_DogUpgrad_Req__FieldAccessorTable; }
  }
  
  public const int DogLevelFieldNumber = 1;
  private bool hasDogLevel;
  private int dogLevel_;
  public bool HasDogLevel {
    get { return hasDogLevel; }
  }
  public int DogLevel {
    get { return dogLevel_; }
  }
  
  public const int CurrentEXPFieldNumber = 2;
  private bool hasCurrentEXP;
  private int currentEXP_;
  public bool HasCurrentEXP {
    get { return hasCurrentEXP; }
  }
  public int CurrentEXP {
    get { return currentEXP_; }
  }
  
  public const int MaxEXPFieldNumber = 3;
  private bool hasMaxEXP;
  private int maxEXP_;
  public bool HasMaxEXP {
    get { return hasMaxEXP; }
  }
  public int MaxEXP {
    get { return maxEXP_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameDogUpgradReqFieldNames;
    if (hasDogLevel) {
      output.WriteInt32(1, field_names[1], DogLevel);
    }
    if (hasCurrentEXP) {
      output.WriteInt32(2, field_names[0], CurrentEXP);
    }
    if (hasMaxEXP) {
      output.WriteInt32(3, field_names[2], MaxEXP);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasDogLevel) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, DogLevel);
    }
    if (hasCurrentEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, CurrentEXP);
    }
    if (hasMaxEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, MaxEXP);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_DogUpgrad_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_DogUpgrad_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_DogUpgrad_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_DogUpgrad_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_DogUpgrad_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_DogUpgrad_Req result;
    
    private Farm_Game_DogUpgrad_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_DogUpgrad_Req original = result;
        result = new Farm_Game_DogUpgrad_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_DogUpgrad_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_DogUpgrad_Req.Descriptor; }
    }
    
    public override Farm_Game_DogUpgrad_Req DefaultInstanceForType {
      get { return global::Farm_Game_DogUpgrad_Req.DefaultInstance; }
    }
    
    public override Farm_Game_DogUpgrad_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_DogUpgrad_Req) {
        return MergeFrom((Farm_Game_DogUpgrad_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_DogUpgrad_Req other) {
      if (other == global::Farm_Game_DogUpgrad_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDogLevel) {
        DogLevel = other.DogLevel;
      }
      if (other.HasCurrentEXP) {
        CurrentEXP = other.CurrentEXP;
      }
      if (other.HasMaxEXP) {
        MaxEXP = other.MaxEXP;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameDogUpgradReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameDogUpgradReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDogLevel = input.ReadInt32(ref result.dogLevel_);
            break;
          }
          case 16: {
            result.hasCurrentEXP = input.ReadInt32(ref result.currentEXP_);
            break;
          }
          case 24: {
            result.hasMaxEXP = input.ReadInt32(ref result.maxEXP_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDogLevel {
      get { return result.hasDogLevel; }
    }
    public int DogLevel {
      get { return result.DogLevel; }
      set { SetDogLevel(value); }
    }
    public Builder SetDogLevel(int value) {
      PrepareBuilder();
      result.hasDogLevel = true;
      result.dogLevel_ = value;
      return this;
    }
    public Builder ClearDogLevel() {
      PrepareBuilder();
      result.hasDogLevel = false;
      result.dogLevel_ = 0;
      return this;
    }
    
    public bool HasCurrentEXP {
      get { return result.hasCurrentEXP; }
    }
    public int CurrentEXP {
      get { return result.CurrentEXP; }
      set { SetCurrentEXP(value); }
    }
    public Builder SetCurrentEXP(int value) {
      PrepareBuilder();
      result.hasCurrentEXP = true;
      result.currentEXP_ = value;
      return this;
    }
    public Builder ClearCurrentEXP() {
      PrepareBuilder();
      result.hasCurrentEXP = false;
      result.currentEXP_ = 0;
      return this;
    }
    
    public bool HasMaxEXP {
      get { return result.hasMaxEXP; }
    }
    public int MaxEXP {
      get { return result.MaxEXP; }
      set { SetMaxEXP(value); }
    }
    public Builder SetMaxEXP(int value) {
      PrepareBuilder();
      result.hasMaxEXP = true;
      result.maxEXP_ = value;
      return this;
    }
    public Builder ClearMaxEXP() {
      PrepareBuilder();
      result.hasMaxEXP = false;
      result.maxEXP_ = 0;
      return this;
    }
  }
  static Farm_Game_DogUpgrad_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ReClaim_Req : pb::GeneratedMessage<Farm_Game_ReClaim_Req, Farm_Game_ReClaim_Req.Builder> {
  private Farm_Game_ReClaim_Req() { }
  private static readonly Farm_Game_ReClaim_Req defaultInstance = new Farm_Game_ReClaim_Req().MakeReadOnly();
  private static readonly string[] _farmGameReClaimReqFieldNames = new string[] { "FieldsID", "UserGameID" };
  private static readonly uint[] _farmGameReClaimReqFieldTags = new uint[] { 8, 16 };
  public static Farm_Game_ReClaim_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ReClaim_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ReClaim_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ReClaim_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ReClaim_Req, Farm_Game_ReClaim_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ReClaim_Req__FieldAccessorTable; }
  }
  
  public const int FieldsIDFieldNumber = 1;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public const int UserGameIDFieldNumber = 2;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameReClaimReqFieldNames;
    if (hasFieldsID) {
      output.WriteInt32(1, field_names[0], FieldsID);
    }
    if (hasUserGameID) {
      output.WriteInt32(2, field_names[1], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, FieldsID);
    }
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ReClaim_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ReClaim_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ReClaim_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ReClaim_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ReClaim_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ReClaim_Req result;
    
    private Farm_Game_ReClaim_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ReClaim_Req original = result;
        result = new Farm_Game_ReClaim_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ReClaim_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ReClaim_Req.Descriptor; }
    }
    
    public override Farm_Game_ReClaim_Req DefaultInstanceForType {
      get { return global::Farm_Game_ReClaim_Req.DefaultInstance; }
    }
    
    public override Farm_Game_ReClaim_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ReClaim_Req) {
        return MergeFrom((Farm_Game_ReClaim_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ReClaim_Req other) {
      if (other == global::Farm_Game_ReClaim_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameReClaimReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameReClaimReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
          case 16: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_ReClaim_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ReClaim_Anw : pb::GeneratedMessage<Farm_Game_ReClaim_Anw, Farm_Game_ReClaim_Anw.Builder> {
  private Farm_Game_ReClaim_Anw() { }
  private static readonly Farm_Game_ReClaim_Anw defaultInstance = new Farm_Game_ReClaim_Anw().MakeReadOnly();
  private static readonly string[] _farmGameReClaimAnwFieldNames = new string[] { "FieldsID" };
  private static readonly uint[] _farmGameReClaimAnwFieldTags = new uint[] { 16 };
  public static Farm_Game_ReClaim_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ReClaim_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ReClaim_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ReClaim_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ReClaim_Anw, Farm_Game_ReClaim_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ReClaim_Anw__FieldAccessorTable; }
  }
  
  public const int FieldsIDFieldNumber = 2;
  private bool hasFieldsID;
  private int fieldsID_;
  public bool HasFieldsID {
    get { return hasFieldsID; }
  }
  public int FieldsID {
    get { return fieldsID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameReClaimAnwFieldNames;
    if (hasFieldsID) {
      output.WriteInt32(2, field_names[0], FieldsID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFieldsID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, FieldsID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ReClaim_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ReClaim_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ReClaim_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ReClaim_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ReClaim_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ReClaim_Anw result;
    
    private Farm_Game_ReClaim_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ReClaim_Anw original = result;
        result = new Farm_Game_ReClaim_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ReClaim_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ReClaim_Anw.Descriptor; }
    }
    
    public override Farm_Game_ReClaim_Anw DefaultInstanceForType {
      get { return global::Farm_Game_ReClaim_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_ReClaim_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ReClaim_Anw) {
        return MergeFrom((Farm_Game_ReClaim_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ReClaim_Anw other) {
      if (other == global::Farm_Game_ReClaim_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFieldsID) {
        FieldsID = other.FieldsID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameReClaimAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameReClaimAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 16: {
            result.hasFieldsID = input.ReadInt32(ref result.fieldsID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFieldsID {
      get { return result.hasFieldsID; }
    }
    public int FieldsID {
      get { return result.FieldsID; }
      set { SetFieldsID(value); }
    }
    public Builder SetFieldsID(int value) {
      PrepareBuilder();
      result.hasFieldsID = true;
      result.fieldsID_ = value;
      return this;
    }
    public Builder ClearFieldsID() {
      PrepareBuilder();
      result.hasFieldsID = false;
      result.fieldsID_ = 0;
      return this;
    }
  }
  static Farm_Game_ReClaim_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ScanQRcodeOrRecommand_Req : pb::GeneratedMessage<Farm_Game_ScanQRcodeOrRecommand_Req, Farm_Game_ScanQRcodeOrRecommand_Req.Builder> {
  private Farm_Game_ScanQRcodeOrRecommand_Req() { }
  private static readonly Farm_Game_ScanQRcodeOrRecommand_Req defaultInstance = new Farm_Game_ScanQRcodeOrRecommand_Req().MakeReadOnly();
  private static readonly string[] _farmGameScanQRcodeOrRecommandReqFieldNames = new string[] { "Info", "UserGameID", "pattern" };
  private static readonly uint[] _farmGameScanQRcodeOrRecommandReqFieldTags = new uint[] { 18, 8, 24 };
  public static Farm_Game_ScanQRcodeOrRecommand_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ScanQRcodeOrRecommand_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ScanQRcodeOrRecommand_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ScanQRcodeOrRecommand_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ScanQRcodeOrRecommand_Req, Farm_Game_ScanQRcodeOrRecommand_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ScanQRcodeOrRecommand_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int InfoFieldNumber = 2;
  private bool hasInfo;
  private string info_ = "";
  public bool HasInfo {
    get { return hasInfo; }
  }
  public string Info {
    get { return info_; }
  }
  
  public const int PatternFieldNumber = 3;
  private bool hasPattern;
  private int pattern_;
  public bool HasPattern {
    get { return hasPattern; }
  }
  public int Pattern {
    get { return pattern_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameScanQRcodeOrRecommandReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasInfo) {
      output.WriteString(2, field_names[0], Info);
    }
    if (hasPattern) {
      output.WriteInt32(3, field_names[2], Pattern);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasInfo) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Info);
    }
    if (hasPattern) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, Pattern);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ScanQRcodeOrRecommand_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ScanQRcodeOrRecommand_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ScanQRcodeOrRecommand_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ScanQRcodeOrRecommand_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ScanQRcodeOrRecommand_Req result;
    
    private Farm_Game_ScanQRcodeOrRecommand_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ScanQRcodeOrRecommand_Req original = result;
        result = new Farm_Game_ScanQRcodeOrRecommand_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ScanQRcodeOrRecommand_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ScanQRcodeOrRecommand_Req.Descriptor; }
    }
    
    public override Farm_Game_ScanQRcodeOrRecommand_Req DefaultInstanceForType {
      get { return global::Farm_Game_ScanQRcodeOrRecommand_Req.DefaultInstance; }
    }
    
    public override Farm_Game_ScanQRcodeOrRecommand_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ScanQRcodeOrRecommand_Req) {
        return MergeFrom((Farm_Game_ScanQRcodeOrRecommand_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ScanQRcodeOrRecommand_Req other) {
      if (other == global::Farm_Game_ScanQRcodeOrRecommand_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasInfo) {
        Info = other.Info;
      }
      if (other.HasPattern) {
        Pattern = other.Pattern;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameScanQRcodeOrRecommandReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameScanQRcodeOrRecommandReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 18: {
            result.hasInfo = input.ReadString(ref result.info_);
            break;
          }
          case 24: {
            result.hasPattern = input.ReadInt32(ref result.pattern_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasInfo {
      get { return result.hasInfo; }
    }
    public string Info {
      get { return result.Info; }
      set { SetInfo(value); }
    }
    public Builder SetInfo(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInfo = true;
      result.info_ = value;
      return this;
    }
    public Builder ClearInfo() {
      PrepareBuilder();
      result.hasInfo = false;
      result.info_ = "";
      return this;
    }
    
    public bool HasPattern {
      get { return result.hasPattern; }
    }
    public int Pattern {
      get { return result.Pattern; }
      set { SetPattern(value); }
    }
    public Builder SetPattern(int value) {
      PrepareBuilder();
      result.hasPattern = true;
      result.pattern_ = value;
      return this;
    }
    public Builder ClearPattern() {
      PrepareBuilder();
      result.hasPattern = false;
      result.pattern_ = 0;
      return this;
    }
  }
  static Farm_Game_ScanQRcodeOrRecommand_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ScanQRcodeOrRecommand_Anw : pb::GeneratedMessage<Farm_Game_ScanQRcodeOrRecommand_Anw, Farm_Game_ScanQRcodeOrRecommand_Anw.Builder> {
  private Farm_Game_ScanQRcodeOrRecommand_Anw() { }
  private static readonly Farm_Game_ScanQRcodeOrRecommand_Anw defaultInstance = new Farm_Game_ScanQRcodeOrRecommand_Anw().MakeReadOnly();
  private static readonly string[] _farmGameScanQRcodeOrRecommandAnwFieldNames = new string[] {  };
  private static readonly uint[] _farmGameScanQRcodeOrRecommandAnwFieldTags = new uint[] {  };
  public static Farm_Game_ScanQRcodeOrRecommand_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ScanQRcodeOrRecommand_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ScanQRcodeOrRecommand_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ScanQRcodeOrRecommand_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ScanQRcodeOrRecommand_Anw, Farm_Game_ScanQRcodeOrRecommand_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ScanQRcodeOrRecommand_Anw__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameScanQRcodeOrRecommandAnwFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ScanQRcodeOrRecommand_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ScanQRcodeOrRecommand_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ScanQRcodeOrRecommand_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ScanQRcodeOrRecommand_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ScanQRcodeOrRecommand_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ScanQRcodeOrRecommand_Anw result;
    
    private Farm_Game_ScanQRcodeOrRecommand_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ScanQRcodeOrRecommand_Anw original = result;
        result = new Farm_Game_ScanQRcodeOrRecommand_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ScanQRcodeOrRecommand_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ScanQRcodeOrRecommand_Anw.Descriptor; }
    }
    
    public override Farm_Game_ScanQRcodeOrRecommand_Anw DefaultInstanceForType {
      get { return global::Farm_Game_ScanQRcodeOrRecommand_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_ScanQRcodeOrRecommand_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ScanQRcodeOrRecommand_Anw) {
        return MergeFrom((Farm_Game_ScanQRcodeOrRecommand_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ScanQRcodeOrRecommand_Anw other) {
      if (other == global::Farm_Game_ScanQRcodeOrRecommand_Anw.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameScanQRcodeOrRecommandAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameScanQRcodeOrRecommandAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static Farm_Game_ScanQRcodeOrRecommand_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Chant_Req : pb::GeneratedMessage<Farm_Game_Chant_Req, Farm_Game_Chant_Req.Builder> {
  private Farm_Game_Chant_Req() { }
  private static readonly Farm_Game_Chant_Req defaultInstance = new Farm_Game_Chant_Req().MakeReadOnly();
  private static readonly string[] _farmGameChantReqFieldNames = new string[] { "Content", "UserGameID", "VisitedGameID" };
  private static readonly uint[] _farmGameChantReqFieldTags = new uint[] { 26, 8, 16 };
  public static Farm_Game_Chant_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Chant_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Chant_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Chant_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Chant_Req, Farm_Game_Chant_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Chant_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int VisitedGameIDFieldNumber = 2;
  private bool hasVisitedGameID;
  private int visitedGameID_;
  public bool HasVisitedGameID {
    get { return hasVisitedGameID; }
  }
  public int VisitedGameID {
    get { return visitedGameID_; }
  }
  
  public const int ContentFieldNumber = 3;
  private bool hasContent;
  private string content_ = "";
  public bool HasContent {
    get { return hasContent; }
  }
  public string Content {
    get { return content_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameChantReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasVisitedGameID) {
      output.WriteInt32(2, field_names[2], VisitedGameID);
    }
    if (hasContent) {
      output.WriteString(3, field_names[0], Content);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasVisitedGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, VisitedGameID);
    }
    if (hasContent) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Content);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Chant_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Chant_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Chant_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Chant_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Chant_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Chant_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Chant_Req result;
    
    private Farm_Game_Chant_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Chant_Req original = result;
        result = new Farm_Game_Chant_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Chant_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Chant_Req.Descriptor; }
    }
    
    public override Farm_Game_Chant_Req DefaultInstanceForType {
      get { return global::Farm_Game_Chant_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Chant_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Chant_Req) {
        return MergeFrom((Farm_Game_Chant_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Chant_Req other) {
      if (other == global::Farm_Game_Chant_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasVisitedGameID) {
        VisitedGameID = other.VisitedGameID;
      }
      if (other.HasContent) {
        Content = other.Content;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameChantReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameChantReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasVisitedGameID = input.ReadInt32(ref result.visitedGameID_);
            break;
          }
          case 26: {
            result.hasContent = input.ReadString(ref result.content_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasVisitedGameID {
      get { return result.hasVisitedGameID; }
    }
    public int VisitedGameID {
      get { return result.VisitedGameID; }
      set { SetVisitedGameID(value); }
    }
    public Builder SetVisitedGameID(int value) {
      PrepareBuilder();
      result.hasVisitedGameID = true;
      result.visitedGameID_ = value;
      return this;
    }
    public Builder ClearVisitedGameID() {
      PrepareBuilder();
      result.hasVisitedGameID = false;
      result.visitedGameID_ = 0;
      return this;
    }
    
    public bool HasContent {
      get { return result.hasContent; }
    }
    public string Content {
      get { return result.Content; }
      set { SetContent(value); }
    }
    public Builder SetContent(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasContent = true;
      result.content_ = value;
      return this;
    }
    public Builder ClearContent() {
      PrepareBuilder();
      result.hasContent = false;
      result.content_ = "";
      return this;
    }
  }
  static Farm_Game_Chant_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Chat_Anw : pb::GeneratedMessage<Farm_Game_Chat_Anw, Farm_Game_Chat_Anw.Builder> {
  private Farm_Game_Chat_Anw() { }
  private static readonly Farm_Game_Chat_Anw defaultInstance = new Farm_Game_Chat_Anw().MakeReadOnly();
  private static readonly string[] _farmGameChatAnwFieldNames = new string[] { "Content" };
  private static readonly uint[] _farmGameChatAnwFieldTags = new uint[] { 10 };
  public static Farm_Game_Chat_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Chat_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Chat_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Chat_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Chat_Anw, Farm_Game_Chat_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Chat_Anw__FieldAccessorTable; }
  }
  
  public const int ContentFieldNumber = 1;
  private bool hasContent;
  private string content_ = "";
  public bool HasContent {
    get { return hasContent; }
  }
  public string Content {
    get { return content_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameChatAnwFieldNames;
    if (hasContent) {
      output.WriteString(1, field_names[0], Content);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasContent) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Content);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Chat_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Chat_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Chat_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Chat_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Chat_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Chat_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Chat_Anw result;
    
    private Farm_Game_Chat_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Chat_Anw original = result;
        result = new Farm_Game_Chat_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Chat_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Chat_Anw.Descriptor; }
    }
    
    public override Farm_Game_Chat_Anw DefaultInstanceForType {
      get { return global::Farm_Game_Chat_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_Chat_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Chat_Anw) {
        return MergeFrom((Farm_Game_Chat_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Chat_Anw other) {
      if (other == global::Farm_Game_Chat_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasContent) {
        Content = other.Content;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameChatAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameChatAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasContent = input.ReadString(ref result.content_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasContent {
      get { return result.hasContent; }
    }
    public string Content {
      get { return result.Content; }
      set { SetContent(value); }
    }
    public Builder SetContent(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasContent = true;
      result.content_ = value;
      return this;
    }
    public Builder ClearContent() {
      PrepareBuilder();
      result.hasContent = false;
      result.content_ = "";
      return this;
    }
  }
  static Farm_Game_Chat_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_CoinOrExpChange_Anw : pb::GeneratedMessage<Farm_Game_CoinOrExpChange_Anw, Farm_Game_CoinOrExpChange_Anw.Builder> {
  private Farm_Game_CoinOrExpChange_Anw() { }
  private static readonly Farm_Game_CoinOrExpChange_Anw defaultInstance = new Farm_Game_CoinOrExpChange_Anw().MakeReadOnly();
  private static readonly string[] _farmGameCoinOrExpChangeAnwFieldNames = new string[] { "Coin", "EXP", "LV", "MaxEXP" };
  private static readonly uint[] _farmGameCoinOrExpChangeAnwFieldTags = new uint[] { 8, 16, 24, 32 };
  public static Farm_Game_CoinOrExpChange_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_CoinOrExpChange_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_CoinOrExpChange_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_CoinOrExpChange_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_CoinOrExpChange_Anw, Farm_Game_CoinOrExpChange_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_CoinOrExpChange_Anw__FieldAccessorTable; }
  }
  
  public const int CoinFieldNumber = 1;
  private bool hasCoin;
  private int coin_;
  public bool HasCoin {
    get { return hasCoin; }
  }
  public int Coin {
    get { return coin_; }
  }
  
  public const int EXPFieldNumber = 2;
  private bool hasEXP;
  private int eXP_;
  public bool HasEXP {
    get { return hasEXP; }
  }
  public int EXP {
    get { return eXP_; }
  }
  
  public const int LVFieldNumber = 3;
  private bool hasLV;
  private int lV_;
  public bool HasLV {
    get { return hasLV; }
  }
  public int LV {
    get { return lV_; }
  }
  
  public const int MaxEXPFieldNumber = 4;
  private bool hasMaxEXP;
  private int maxEXP_;
  public bool HasMaxEXP {
    get { return hasMaxEXP; }
  }
  public int MaxEXP {
    get { return maxEXP_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameCoinOrExpChangeAnwFieldNames;
    if (hasCoin) {
      output.WriteInt32(1, field_names[0], Coin);
    }
    if (hasEXP) {
      output.WriteInt32(2, field_names[1], EXP);
    }
    if (hasLV) {
      output.WriteInt32(3, field_names[2], LV);
    }
    if (hasMaxEXP) {
      output.WriteInt32(4, field_names[3], MaxEXP);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCoin) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Coin);
    }
    if (hasEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, EXP);
    }
    if (hasLV) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, LV);
    }
    if (hasMaxEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, MaxEXP);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_CoinOrExpChange_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_CoinOrExpChange_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_CoinOrExpChange_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_CoinOrExpChange_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_CoinOrExpChange_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_CoinOrExpChange_Anw result;
    
    private Farm_Game_CoinOrExpChange_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_CoinOrExpChange_Anw original = result;
        result = new Farm_Game_CoinOrExpChange_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_CoinOrExpChange_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_CoinOrExpChange_Anw.Descriptor; }
    }
    
    public override Farm_Game_CoinOrExpChange_Anw DefaultInstanceForType {
      get { return global::Farm_Game_CoinOrExpChange_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_CoinOrExpChange_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_CoinOrExpChange_Anw) {
        return MergeFrom((Farm_Game_CoinOrExpChange_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_CoinOrExpChange_Anw other) {
      if (other == global::Farm_Game_CoinOrExpChange_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCoin) {
        Coin = other.Coin;
      }
      if (other.HasEXP) {
        EXP = other.EXP;
      }
      if (other.HasLV) {
        LV = other.LV;
      }
      if (other.HasMaxEXP) {
        MaxEXP = other.MaxEXP;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameCoinOrExpChangeAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameCoinOrExpChangeAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCoin = input.ReadInt32(ref result.coin_);
            break;
          }
          case 16: {
            result.hasEXP = input.ReadInt32(ref result.eXP_);
            break;
          }
          case 24: {
            result.hasLV = input.ReadInt32(ref result.lV_);
            break;
          }
          case 32: {
            result.hasMaxEXP = input.ReadInt32(ref result.maxEXP_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCoin {
      get { return result.hasCoin; }
    }
    public int Coin {
      get { return result.Coin; }
      set { SetCoin(value); }
    }
    public Builder SetCoin(int value) {
      PrepareBuilder();
      result.hasCoin = true;
      result.coin_ = value;
      return this;
    }
    public Builder ClearCoin() {
      PrepareBuilder();
      result.hasCoin = false;
      result.coin_ = 0;
      return this;
    }
    
    public bool HasEXP {
      get { return result.hasEXP; }
    }
    public int EXP {
      get { return result.EXP; }
      set { SetEXP(value); }
    }
    public Builder SetEXP(int value) {
      PrepareBuilder();
      result.hasEXP = true;
      result.eXP_ = value;
      return this;
    }
    public Builder ClearEXP() {
      PrepareBuilder();
      result.hasEXP = false;
      result.eXP_ = 0;
      return this;
    }
    
    public bool HasLV {
      get { return result.hasLV; }
    }
    public int LV {
      get { return result.LV; }
      set { SetLV(value); }
    }
    public Builder SetLV(int value) {
      PrepareBuilder();
      result.hasLV = true;
      result.lV_ = value;
      return this;
    }
    public Builder ClearLV() {
      PrepareBuilder();
      result.hasLV = false;
      result.lV_ = 0;
      return this;
    }
    
    public bool HasMaxEXP {
      get { return result.hasMaxEXP; }
    }
    public int MaxEXP {
      get { return result.MaxEXP; }
      set { SetMaxEXP(value); }
    }
    public Builder SetMaxEXP(int value) {
      PrepareBuilder();
      result.hasMaxEXP = true;
      result.maxEXP_ = value;
      return this;
    }
    public Builder ClearMaxEXP() {
      PrepareBuilder();
      result.hasMaxEXP = false;
      result.maxEXP_ = 0;
      return this;
    }
  }
  static Farm_Game_CoinOrExpChange_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_MessageSend_Req : pb::GeneratedMessage<Farm_Game_MessageSend_Req, Farm_Game_MessageSend_Req.Builder> {
  private Farm_Game_MessageSend_Req() { }
  private static readonly Farm_Game_MessageSend_Req defaultInstance = new Farm_Game_MessageSend_Req().MakeReadOnly();
  private static readonly string[] _farmGameMessageSendReqFieldNames = new string[] { "UserGameID" };
  private static readonly uint[] _farmGameMessageSendReqFieldTags = new uint[] { 8 };
  public static Farm_Game_MessageSend_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_MessageSend_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_MessageSend_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MessageSend_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_MessageSend_Req, Farm_Game_MessageSend_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MessageSend_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameMessageSendReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_MessageSend_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_MessageSend_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_MessageSend_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_MessageSend_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_MessageSend_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_MessageSend_Req result;
    
    private Farm_Game_MessageSend_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_MessageSend_Req original = result;
        result = new Farm_Game_MessageSend_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_MessageSend_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_MessageSend_Req.Descriptor; }
    }
    
    public override Farm_Game_MessageSend_Req DefaultInstanceForType {
      get { return global::Farm_Game_MessageSend_Req.DefaultInstance; }
    }
    
    public override Farm_Game_MessageSend_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_MessageSend_Req) {
        return MergeFrom((Farm_Game_MessageSend_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_MessageSend_Req other) {
      if (other == global::Farm_Game_MessageSend_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameMessageSendReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameMessageSendReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_MessageSend_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_MessageSend_Anw : pb::GeneratedMessage<Farm_Game_MessageSend_Anw, Farm_Game_MessageSend_Anw.Builder> {
  private Farm_Game_MessageSend_Anw() { }
  private static readonly Farm_Game_MessageSend_Anw defaultInstance = new Farm_Game_MessageSend_Anw().MakeReadOnly();
  private static readonly string[] _farmGameMessageSendAnwFieldNames = new string[] { "MsgList" };
  private static readonly uint[] _farmGameMessageSendAnwFieldTags = new uint[] { 10 };
  public static Farm_Game_MessageSend_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_MessageSend_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_MessageSend_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MessageSend_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_MessageSend_Anw, Farm_Game_MessageSend_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_MessageSend_Anw__FieldAccessorTable; }
  }
  
  public const int MsgListFieldNumber = 1;
  private pbc::PopsicleList<global::PMsg_MessageUnit> msgList_ = new pbc::PopsicleList<global::PMsg_MessageUnit>();
  public scg::IList<global::PMsg_MessageUnit> MsgListList {
    get { return msgList_; }
  }
  public int MsgListCount {
    get { return msgList_.Count; }
  }
  public global::PMsg_MessageUnit GetMsgList(int index) {
    return msgList_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameMessageSendAnwFieldNames;
    if (msgList_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], msgList_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::PMsg_MessageUnit element in MsgListList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_MessageSend_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_MessageSend_Anw MakeReadOnly() {
    msgList_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_MessageSend_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_MessageSend_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_MessageSend_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_MessageSend_Anw result;
    
    private Farm_Game_MessageSend_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_MessageSend_Anw original = result;
        result = new Farm_Game_MessageSend_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_MessageSend_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_MessageSend_Anw.Descriptor; }
    }
    
    public override Farm_Game_MessageSend_Anw DefaultInstanceForType {
      get { return global::Farm_Game_MessageSend_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_MessageSend_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_MessageSend_Anw) {
        return MergeFrom((Farm_Game_MessageSend_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_MessageSend_Anw other) {
      if (other == global::Farm_Game_MessageSend_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.msgList_.Count != 0) {
        result.msgList_.Add(other.msgList_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameMessageSendAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameMessageSendAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.msgList_, global::PMsg_MessageUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::PMsg_MessageUnit> MsgListList {
      get { return PrepareBuilder().msgList_; }
    }
    public int MsgListCount {
      get { return result.MsgListCount; }
    }
    public global::PMsg_MessageUnit GetMsgList(int index) {
      return result.GetMsgList(index);
    }
    public Builder SetMsgList(int index, global::PMsg_MessageUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.msgList_[index] = value;
      return this;
    }
    public Builder SetMsgList(int index, global::PMsg_MessageUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.msgList_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddMsgList(global::PMsg_MessageUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.msgList_.Add(value);
      return this;
    }
    public Builder AddMsgList(global::PMsg_MessageUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.msgList_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeMsgList(scg::IEnumerable<global::PMsg_MessageUnit> values) {
      PrepareBuilder();
      result.msgList_.Add(values);
      return this;
    }
    public Builder ClearMsgList() {
      PrepareBuilder();
      result.msgList_.Clear();
      return this;
    }
  }
  static Farm_Game_MessageSend_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_AgreeAdd_Req : pb::GeneratedMessage<Farm_Game_AgreeAdd_Req, Farm_Game_AgreeAdd_Req.Builder> {
  private Farm_Game_AgreeAdd_Req() { }
  private static readonly Farm_Game_AgreeAdd_Req defaultInstance = new Farm_Game_AgreeAdd_Req().MakeReadOnly();
  private static readonly string[] _farmGameAgreeAddReqFieldNames = new string[] { "AddGameID", "UserGameID" };
  private static readonly uint[] _farmGameAgreeAddReqFieldTags = new uint[] { 16, 8 };
  public static Farm_Game_AgreeAdd_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_AgreeAdd_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_AgreeAdd_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AgreeAdd_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_AgreeAdd_Req, Farm_Game_AgreeAdd_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_AgreeAdd_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int AddGameIDFieldNumber = 2;
  private bool hasAddGameID;
  private int addGameID_;
  public bool HasAddGameID {
    get { return hasAddGameID; }
  }
  public int AddGameID {
    get { return addGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameAgreeAddReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[1], UserGameID);
    }
    if (hasAddGameID) {
      output.WriteInt32(2, field_names[0], AddGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasAddGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, AddGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_AgreeAdd_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_AgreeAdd_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_AgreeAdd_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_AgreeAdd_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_AgreeAdd_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_AgreeAdd_Req result;
    
    private Farm_Game_AgreeAdd_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_AgreeAdd_Req original = result;
        result = new Farm_Game_AgreeAdd_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_AgreeAdd_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_AgreeAdd_Req.Descriptor; }
    }
    
    public override Farm_Game_AgreeAdd_Req DefaultInstanceForType {
      get { return global::Farm_Game_AgreeAdd_Req.DefaultInstance; }
    }
    
    public override Farm_Game_AgreeAdd_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_AgreeAdd_Req) {
        return MergeFrom((Farm_Game_AgreeAdd_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_AgreeAdd_Req other) {
      if (other == global::Farm_Game_AgreeAdd_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasAddGameID) {
        AddGameID = other.AddGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameAgreeAddReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameAgreeAddReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasAddGameID = input.ReadInt32(ref result.addGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasAddGameID {
      get { return result.hasAddGameID; }
    }
    public int AddGameID {
      get { return result.AddGameID; }
      set { SetAddGameID(value); }
    }
    public Builder SetAddGameID(int value) {
      PrepareBuilder();
      result.hasAddGameID = true;
      result.addGameID_ = value;
      return this;
    }
    public Builder ClearAddGameID() {
      PrepareBuilder();
      result.hasAddGameID = false;
      result.addGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_AgreeAdd_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_SearchFriend_Req : pb::GeneratedMessage<Farm_Game_SearchFriend_Req, Farm_Game_SearchFriend_Req.Builder> {
  private Farm_Game_SearchFriend_Req() { }
  private static readonly Farm_Game_SearchFriend_Req defaultInstance = new Farm_Game_SearchFriend_Req().MakeReadOnly();
  private static readonly string[] _farmGameSearchFriendReqFieldNames = new string[] { "Name" };
  private static readonly uint[] _farmGameSearchFriendReqFieldTags = new uint[] { 10 };
  public static Farm_Game_SearchFriend_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_SearchFriend_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_SearchFriend_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SearchFriend_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_SearchFriend_Req, Farm_Game_SearchFriend_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SearchFriend_Req__FieldAccessorTable; }
  }
  
  public const int NameFieldNumber = 1;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSearchFriendReqFieldNames;
    if (hasName) {
      output.WriteString(1, field_names[0], Name);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasName) {
      size += pb::CodedOutputStream.ComputeStringSize(1, Name);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_SearchFriend_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_SearchFriend_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_SearchFriend_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_SearchFriend_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_SearchFriend_Req result;
    
    private Farm_Game_SearchFriend_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_SearchFriend_Req original = result;
        result = new Farm_Game_SearchFriend_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_SearchFriend_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_SearchFriend_Req.Descriptor; }
    }
    
    public override Farm_Game_SearchFriend_Req DefaultInstanceForType {
      get { return global::Farm_Game_SearchFriend_Req.DefaultInstance; }
    }
    
    public override Farm_Game_SearchFriend_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_SearchFriend_Req) {
        return MergeFrom((Farm_Game_SearchFriend_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_SearchFriend_Req other) {
      if (other == global::Farm_Game_SearchFriend_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasName) {
        Name = other.Name;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSearchFriendReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSearchFriendReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
  }
  static Farm_Game_SearchFriend_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_SearchFriend_Anw : pb::GeneratedMessage<Farm_Game_SearchFriend_Anw, Farm_Game_SearchFriend_Anw.Builder> {
  private Farm_Game_SearchFriend_Anw() { }
  private static readonly Farm_Game_SearchFriend_Anw defaultInstance = new Farm_Game_SearchFriend_Anw().MakeReadOnly();
  private static readonly string[] _farmGameSearchFriendAnwFieldNames = new string[] { "SearchList" };
  private static readonly uint[] _farmGameSearchFriendAnwFieldTags = new uint[] { 18 };
  public static Farm_Game_SearchFriend_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_SearchFriend_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_SearchFriend_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SearchFriend_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_SearchFriend_Anw, Farm_Game_SearchFriend_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_SearchFriend_Anw__FieldAccessorTable; }
  }
  
  public const int SearchListFieldNumber = 2;
  private pbc::PopsicleList<global::Farm_Game_UserInfo_Anw> searchList_ = new pbc::PopsicleList<global::Farm_Game_UserInfo_Anw>();
  public scg::IList<global::Farm_Game_UserInfo_Anw> SearchListList {
    get { return searchList_; }
  }
  public int SearchListCount {
    get { return searchList_.Count; }
  }
  public global::Farm_Game_UserInfo_Anw GetSearchList(int index) {
    return searchList_[index];
  }
  
  public override bool IsInitialized {
    get {
      foreach (global::Farm_Game_UserInfo_Anw element in SearchListList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameSearchFriendAnwFieldNames;
    if (searchList_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], searchList_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::Farm_Game_UserInfo_Anw element in SearchListList) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_SearchFriend_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_SearchFriend_Anw MakeReadOnly() {
    searchList_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_SearchFriend_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_SearchFriend_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_SearchFriend_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_SearchFriend_Anw result;
    
    private Farm_Game_SearchFriend_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_SearchFriend_Anw original = result;
        result = new Farm_Game_SearchFriend_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_SearchFriend_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_SearchFriend_Anw.Descriptor; }
    }
    
    public override Farm_Game_SearchFriend_Anw DefaultInstanceForType {
      get { return global::Farm_Game_SearchFriend_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_SearchFriend_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_SearchFriend_Anw) {
        return MergeFrom((Farm_Game_SearchFriend_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_SearchFriend_Anw other) {
      if (other == global::Farm_Game_SearchFriend_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.searchList_.Count != 0) {
        result.searchList_.Add(other.searchList_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameSearchFriendAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameSearchFriendAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.searchList_, global::Farm_Game_UserInfo_Anw.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::Farm_Game_UserInfo_Anw> SearchListList {
      get { return PrepareBuilder().searchList_; }
    }
    public int SearchListCount {
      get { return result.SearchListCount; }
    }
    public global::Farm_Game_UserInfo_Anw GetSearchList(int index) {
      return result.GetSearchList(index);
    }
    public Builder SetSearchList(int index, global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.searchList_[index] = value;
      return this;
    }
    public Builder SetSearchList(int index, global::Farm_Game_UserInfo_Anw.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.searchList_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSearchList(global::Farm_Game_UserInfo_Anw value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.searchList_.Add(value);
      return this;
    }
    public Builder AddSearchList(global::Farm_Game_UserInfo_Anw.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.searchList_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSearchList(scg::IEnumerable<global::Farm_Game_UserInfo_Anw> values) {
      PrepareBuilder();
      result.searchList_.Add(values);
      return this;
    }
    public Builder ClearSearchList() {
      PrepareBuilder();
      result.searchList_.Clear();
      return this;
    }
  }
  static Farm_Game_SearchFriend_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ChatLog_Req : pb::GeneratedMessage<Farm_Game_ChatLog_Req, Farm_Game_ChatLog_Req.Builder> {
  private Farm_Game_ChatLog_Req() { }
  private static readonly Farm_Game_ChatLog_Req defaultInstance = new Farm_Game_ChatLog_Req().MakeReadOnly();
  private static readonly string[] _farmGameChatLogReqFieldNames = new string[] { "FriendID", "Page" };
  private static readonly uint[] _farmGameChatLogReqFieldTags = new uint[] { 8, 16 };
  public static Farm_Game_ChatLog_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ChatLog_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ChatLog_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ChatLog_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ChatLog_Req, Farm_Game_ChatLog_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ChatLog_Req__FieldAccessorTable; }
  }
  
  public const int FriendIDFieldNumber = 1;
  private bool hasFriendID;
  private int friendID_;
  public bool HasFriendID {
    get { return hasFriendID; }
  }
  public int FriendID {
    get { return friendID_; }
  }
  
  public const int PageFieldNumber = 2;
  private bool hasPage;
  private int page_;
  public bool HasPage {
    get { return hasPage; }
  }
  public int Page {
    get { return page_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameChatLogReqFieldNames;
    if (hasFriendID) {
      output.WriteInt32(1, field_names[0], FriendID);
    }
    if (hasPage) {
      output.WriteInt32(2, field_names[1], Page);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasFriendID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, FriendID);
    }
    if (hasPage) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Page);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ChatLog_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ChatLog_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ChatLog_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ChatLog_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ChatLog_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ChatLog_Req result;
    
    private Farm_Game_ChatLog_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ChatLog_Req original = result;
        result = new Farm_Game_ChatLog_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ChatLog_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ChatLog_Req.Descriptor; }
    }
    
    public override Farm_Game_ChatLog_Req DefaultInstanceForType {
      get { return global::Farm_Game_ChatLog_Req.DefaultInstance; }
    }
    
    public override Farm_Game_ChatLog_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ChatLog_Req) {
        return MergeFrom((Farm_Game_ChatLog_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ChatLog_Req other) {
      if (other == global::Farm_Game_ChatLog_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasFriendID) {
        FriendID = other.FriendID;
      }
      if (other.HasPage) {
        Page = other.Page;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameChatLogReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameChatLogReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasFriendID = input.ReadInt32(ref result.friendID_);
            break;
          }
          case 16: {
            result.hasPage = input.ReadInt32(ref result.page_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasFriendID {
      get { return result.hasFriendID; }
    }
    public int FriendID {
      get { return result.FriendID; }
      set { SetFriendID(value); }
    }
    public Builder SetFriendID(int value) {
      PrepareBuilder();
      result.hasFriendID = true;
      result.friendID_ = value;
      return this;
    }
    public Builder ClearFriendID() {
      PrepareBuilder();
      result.hasFriendID = false;
      result.friendID_ = 0;
      return this;
    }
    
    public bool HasPage {
      get { return result.hasPage; }
    }
    public int Page {
      get { return result.Page; }
      set { SetPage(value); }
    }
    public Builder SetPage(int value) {
      PrepareBuilder();
      result.hasPage = true;
      result.page_ = value;
      return this;
    }
    public Builder ClearPage() {
      PrepareBuilder();
      result.hasPage = false;
      result.page_ = 0;
      return this;
    }
  }
  static Farm_Game_ChatLog_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_ChatLog_Anw : pb::GeneratedMessage<Farm_Game_ChatLog_Anw, Farm_Game_ChatLog_Anw.Builder> {
  private Farm_Game_ChatLog_Anw() { }
  private static readonly Farm_Game_ChatLog_Anw defaultInstance = new Farm_Game_ChatLog_Anw().MakeReadOnly();
  private static readonly string[] _farmGameChatLogAnwFieldNames = new string[] { "ChatList" };
  private static readonly uint[] _farmGameChatLogAnwFieldTags = new uint[] { 18 };
  public static Farm_Game_ChatLog_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_ChatLog_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_ChatLog_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ChatLog_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_ChatLog_Anw, Farm_Game_ChatLog_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_ChatLog_Anw__FieldAccessorTable; }
  }
  
  public const int ChatListFieldNumber = 2;
  private pbc::PopsicleList<global::PMsg_ChatLog> chatList_ = new pbc::PopsicleList<global::PMsg_ChatLog>();
  public scg::IList<global::PMsg_ChatLog> ChatListList {
    get { return chatList_; }
  }
  public int ChatListCount {
    get { return chatList_.Count; }
  }
  public global::PMsg_ChatLog GetChatList(int index) {
    return chatList_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameChatLogAnwFieldNames;
    if (chatList_.Count > 0) {
      output.WriteMessageArray(2, field_names[0], chatList_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::PMsg_ChatLog element in ChatListList) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_ChatLog_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_ChatLog_Anw MakeReadOnly() {
    chatList_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_ChatLog_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_ChatLog_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_ChatLog_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_ChatLog_Anw result;
    
    private Farm_Game_ChatLog_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_ChatLog_Anw original = result;
        result = new Farm_Game_ChatLog_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_ChatLog_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_ChatLog_Anw.Descriptor; }
    }
    
    public override Farm_Game_ChatLog_Anw DefaultInstanceForType {
      get { return global::Farm_Game_ChatLog_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_ChatLog_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_ChatLog_Anw) {
        return MergeFrom((Farm_Game_ChatLog_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_ChatLog_Anw other) {
      if (other == global::Farm_Game_ChatLog_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.chatList_.Count != 0) {
        result.chatList_.Add(other.chatList_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameChatLogAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameChatLogAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 18: {
            input.ReadMessageArray(tag, field_name, result.chatList_, global::PMsg_ChatLog.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::PMsg_ChatLog> ChatListList {
      get { return PrepareBuilder().chatList_; }
    }
    public int ChatListCount {
      get { return result.ChatListCount; }
    }
    public global::PMsg_ChatLog GetChatList(int index) {
      return result.GetChatList(index);
    }
    public Builder SetChatList(int index, global::PMsg_ChatLog value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.chatList_[index] = value;
      return this;
    }
    public Builder SetChatList(int index, global::PMsg_ChatLog.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.chatList_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddChatList(global::PMsg_ChatLog value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.chatList_.Add(value);
      return this;
    }
    public Builder AddChatList(global::PMsg_ChatLog.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.chatList_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeChatList(scg::IEnumerable<global::PMsg_ChatLog> values) {
      PrepareBuilder();
      result.chatList_.Add(values);
      return this;
    }
    public Builder ClearChatList() {
      PrepareBuilder();
      result.chatList_.Clear();
      return this;
    }
  }
  static Farm_Game_ChatLog_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_DeleteMsg_Req : pb::GeneratedMessage<Farm_Game_DeleteMsg_Req, Farm_Game_DeleteMsg_Req.Builder> {
  private Farm_Game_DeleteMsg_Req() { }
  private static readonly Farm_Game_DeleteMsg_Req defaultInstance = new Farm_Game_DeleteMsg_Req().MakeReadOnly();
  private static readonly string[] _farmGameDeleteMsgReqFieldNames = new string[] { "MsgId" };
  private static readonly uint[] _farmGameDeleteMsgReqFieldTags = new uint[] { 8 };
  public static Farm_Game_DeleteMsg_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_DeleteMsg_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_DeleteMsg_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_DeleteMsg_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_DeleteMsg_Req, Farm_Game_DeleteMsg_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_DeleteMsg_Req__FieldAccessorTable; }
  }
  
  public const int MsgIdFieldNumber = 1;
  private bool hasMsgId;
  private int msgId_;
  public bool HasMsgId {
    get { return hasMsgId; }
  }
  public int MsgId {
    get { return msgId_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameDeleteMsgReqFieldNames;
    if (hasMsgId) {
      output.WriteInt32(1, field_names[0], MsgId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasMsgId) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, MsgId);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_DeleteMsg_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_DeleteMsg_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_DeleteMsg_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_DeleteMsg_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_DeleteMsg_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_DeleteMsg_Req result;
    
    private Farm_Game_DeleteMsg_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_DeleteMsg_Req original = result;
        result = new Farm_Game_DeleteMsg_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_DeleteMsg_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_DeleteMsg_Req.Descriptor; }
    }
    
    public override Farm_Game_DeleteMsg_Req DefaultInstanceForType {
      get { return global::Farm_Game_DeleteMsg_Req.DefaultInstance; }
    }
    
    public override Farm_Game_DeleteMsg_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_DeleteMsg_Req) {
        return MergeFrom((Farm_Game_DeleteMsg_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_DeleteMsg_Req other) {
      if (other == global::Farm_Game_DeleteMsg_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMsgId) {
        MsgId = other.MsgId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameDeleteMsgReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameDeleteMsgReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasMsgId = input.ReadInt32(ref result.msgId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMsgId {
      get { return result.hasMsgId; }
    }
    public int MsgId {
      get { return result.MsgId; }
      set { SetMsgId(value); }
    }
    public Builder SetMsgId(int value) {
      PrepareBuilder();
      result.hasMsgId = true;
      result.msgId_ = value;
      return this;
    }
    public Builder ClearMsgId() {
      PrepareBuilder();
      result.hasMsgId = false;
      result.msgId_ = 0;
      return this;
    }
  }
  static Farm_Game_DeleteMsg_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_FeedDog_Req : pb::GeneratedMessage<Farm_Game_FeedDog_Req, Farm_Game_FeedDog_Req.Builder> {
  private Farm_Game_FeedDog_Req() { }
  private static readonly Farm_Game_FeedDog_Req defaultInstance = new Farm_Game_FeedDog_Req().MakeReadOnly();
  private static readonly string[] _farmGameFeedDogReqFieldNames = new string[] { "UserGameID" };
  private static readonly uint[] _farmGameFeedDogReqFieldTags = new uint[] { 8 };
  public static Farm_Game_FeedDog_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_FeedDog_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_FeedDog_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FeedDog_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_FeedDog_Req, Farm_Game_FeedDog_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FeedDog_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameFeedDogReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[0], UserGameID);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_FeedDog_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_FeedDog_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_FeedDog_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_FeedDog_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_FeedDog_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_FeedDog_Req result;
    
    private Farm_Game_FeedDog_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_FeedDog_Req original = result;
        result = new Farm_Game_FeedDog_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_FeedDog_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_FeedDog_Req.Descriptor; }
    }
    
    public override Farm_Game_FeedDog_Req DefaultInstanceForType {
      get { return global::Farm_Game_FeedDog_Req.DefaultInstance; }
    }
    
    public override Farm_Game_FeedDog_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_FeedDog_Req) {
        return MergeFrom((Farm_Game_FeedDog_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_FeedDog_Req other) {
      if (other == global::Farm_Game_FeedDog_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameFeedDogReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameFeedDogReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
  }
  static Farm_Game_FeedDog_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_FeedDog_Anw : pb::GeneratedMessage<Farm_Game_FeedDog_Anw, Farm_Game_FeedDog_Anw.Builder> {
  private Farm_Game_FeedDog_Anw() { }
  private static readonly Farm_Game_FeedDog_Anw defaultInstance = new Farm_Game_FeedDog_Anw().MakeReadOnly();
  private static readonly string[] _farmGameFeedDogAnwFieldNames = new string[] { "DogCurrentEXP", "DogUpgradeMaxEXP", "chance", "dog_lv" };
  private static readonly uint[] _farmGameFeedDogAnwFieldTags = new uint[] { 16, 8, 32, 24 };
  public static Farm_Game_FeedDog_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_FeedDog_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_FeedDog_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FeedDog_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_FeedDog_Anw, Farm_Game_FeedDog_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_FeedDog_Anw__FieldAccessorTable; }
  }
  
  public const int DogUpgradeMaxEXPFieldNumber = 1;
  private bool hasDogUpgradeMaxEXP;
  private int dogUpgradeMaxEXP_;
  public bool HasDogUpgradeMaxEXP {
    get { return hasDogUpgradeMaxEXP; }
  }
  public int DogUpgradeMaxEXP {
    get { return dogUpgradeMaxEXP_; }
  }
  
  public const int DogCurrentEXPFieldNumber = 2;
  private bool hasDogCurrentEXP;
  private int dogCurrentEXP_;
  public bool HasDogCurrentEXP {
    get { return hasDogCurrentEXP; }
  }
  public int DogCurrentEXP {
    get { return dogCurrentEXP_; }
  }
  
  public const int DogLvFieldNumber = 3;
  private bool hasDogLv;
  private int dogLv_;
  public bool HasDogLv {
    get { return hasDogLv; }
  }
  public int DogLv {
    get { return dogLv_; }
  }
  
  public const int ChanceFieldNumber = 4;
  private bool hasChance;
  private int chance_;
  public bool HasChance {
    get { return hasChance; }
  }
  public int Chance {
    get { return chance_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameFeedDogAnwFieldNames;
    if (hasDogUpgradeMaxEXP) {
      output.WriteInt32(1, field_names[1], DogUpgradeMaxEXP);
    }
    if (hasDogCurrentEXP) {
      output.WriteInt32(2, field_names[0], DogCurrentEXP);
    }
    if (hasDogLv) {
      output.WriteInt32(3, field_names[3], DogLv);
    }
    if (hasChance) {
      output.WriteInt32(4, field_names[2], Chance);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasDogUpgradeMaxEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, DogUpgradeMaxEXP);
    }
    if (hasDogCurrentEXP) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, DogCurrentEXP);
    }
    if (hasDogLv) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, DogLv);
    }
    if (hasChance) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, Chance);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_FeedDog_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_FeedDog_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_FeedDog_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_FeedDog_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_FeedDog_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_FeedDog_Anw result;
    
    private Farm_Game_FeedDog_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_FeedDog_Anw original = result;
        result = new Farm_Game_FeedDog_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_FeedDog_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_FeedDog_Anw.Descriptor; }
    }
    
    public override Farm_Game_FeedDog_Anw DefaultInstanceForType {
      get { return global::Farm_Game_FeedDog_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_FeedDog_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_FeedDog_Anw) {
        return MergeFrom((Farm_Game_FeedDog_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_FeedDog_Anw other) {
      if (other == global::Farm_Game_FeedDog_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDogUpgradeMaxEXP) {
        DogUpgradeMaxEXP = other.DogUpgradeMaxEXP;
      }
      if (other.HasDogCurrentEXP) {
        DogCurrentEXP = other.DogCurrentEXP;
      }
      if (other.HasDogLv) {
        DogLv = other.DogLv;
      }
      if (other.HasChance) {
        Chance = other.Chance;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameFeedDogAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameFeedDogAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDogUpgradeMaxEXP = input.ReadInt32(ref result.dogUpgradeMaxEXP_);
            break;
          }
          case 16: {
            result.hasDogCurrentEXP = input.ReadInt32(ref result.dogCurrentEXP_);
            break;
          }
          case 24: {
            result.hasDogLv = input.ReadInt32(ref result.dogLv_);
            break;
          }
          case 32: {
            result.hasChance = input.ReadInt32(ref result.chance_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDogUpgradeMaxEXP {
      get { return result.hasDogUpgradeMaxEXP; }
    }
    public int DogUpgradeMaxEXP {
      get { return result.DogUpgradeMaxEXP; }
      set { SetDogUpgradeMaxEXP(value); }
    }
    public Builder SetDogUpgradeMaxEXP(int value) {
      PrepareBuilder();
      result.hasDogUpgradeMaxEXP = true;
      result.dogUpgradeMaxEXP_ = value;
      return this;
    }
    public Builder ClearDogUpgradeMaxEXP() {
      PrepareBuilder();
      result.hasDogUpgradeMaxEXP = false;
      result.dogUpgradeMaxEXP_ = 0;
      return this;
    }
    
    public bool HasDogCurrentEXP {
      get { return result.hasDogCurrentEXP; }
    }
    public int DogCurrentEXP {
      get { return result.DogCurrentEXP; }
      set { SetDogCurrentEXP(value); }
    }
    public Builder SetDogCurrentEXP(int value) {
      PrepareBuilder();
      result.hasDogCurrentEXP = true;
      result.dogCurrentEXP_ = value;
      return this;
    }
    public Builder ClearDogCurrentEXP() {
      PrepareBuilder();
      result.hasDogCurrentEXP = false;
      result.dogCurrentEXP_ = 0;
      return this;
    }
    
    public bool HasDogLv {
      get { return result.hasDogLv; }
    }
    public int DogLv {
      get { return result.DogLv; }
      set { SetDogLv(value); }
    }
    public Builder SetDogLv(int value) {
      PrepareBuilder();
      result.hasDogLv = true;
      result.dogLv_ = value;
      return this;
    }
    public Builder ClearDogLv() {
      PrepareBuilder();
      result.hasDogLv = false;
      result.dogLv_ = 0;
      return this;
    }
    
    public bool HasChance {
      get { return result.hasChance; }
    }
    public int Chance {
      get { return result.Chance; }
      set { SetChance(value); }
    }
    public Builder SetChance(int value) {
      PrepareBuilder();
      result.hasChance = true;
      result.chance_ = value;
      return this;
    }
    public Builder ClearChance() {
      PrepareBuilder();
      result.hasChance = false;
      result.chance_ = 0;
      return this;
    }
  }
  static Farm_Game_FeedDog_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_TotalSell_Req : pb::GeneratedMessage<Farm_Game_TotalSell_Req, Farm_Game_TotalSell_Req.Builder> {
  private Farm_Game_TotalSell_Req() { }
  private static readonly Farm_Game_TotalSell_Req defaultInstance = new Farm_Game_TotalSell_Req().MakeReadOnly();
  private static readonly string[] _farmGameTotalSellReqFieldNames = new string[] { "Type" };
  private static readonly uint[] _farmGameTotalSellReqFieldTags = new uint[] { 8 };
  public static Farm_Game_TotalSell_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_TotalSell_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_TotalSell_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_TotalSell_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_TotalSell_Req, Farm_Game_TotalSell_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_TotalSell_Req__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private int type_;
  public bool HasType {
    get { return hasType; }
  }
  public int Type {
    get { return type_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameTotalSellReqFieldNames;
    if (hasType) {
      output.WriteInt32(1, field_names[0], Type);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_TotalSell_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_TotalSell_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_TotalSell_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_TotalSell_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_TotalSell_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_TotalSell_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_TotalSell_Req result;
    
    private Farm_Game_TotalSell_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_TotalSell_Req original = result;
        result = new Farm_Game_TotalSell_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_TotalSell_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_TotalSell_Req.Descriptor; }
    }
    
    public override Farm_Game_TotalSell_Req DefaultInstanceForType {
      get { return global::Farm_Game_TotalSell_Req.DefaultInstance; }
    }
    
    public override Farm_Game_TotalSell_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_TotalSell_Req) {
        return MergeFrom((Farm_Game_TotalSell_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_TotalSell_Req other) {
      if (other == global::Farm_Game_TotalSell_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameTotalSellReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameTotalSellReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadInt32(ref result.type_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    public int Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(int value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
  }
  static Farm_Game_TotalSell_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_InfoLog_Req : pb::GeneratedMessage<Farm_Game_InfoLog_Req, Farm_Game_InfoLog_Req.Builder> {
  private Farm_Game_InfoLog_Req() { }
  private static readonly Farm_Game_InfoLog_Req defaultInstance = new Farm_Game_InfoLog_Req().MakeReadOnly();
  private static readonly string[] _farmGameInfoLogReqFieldNames = new string[] { "uid" };
  private static readonly uint[] _farmGameInfoLogReqFieldTags = new uint[] { 8 };
  public static Farm_Game_InfoLog_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_InfoLog_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_InfoLog_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_InfoLog_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_InfoLog_Req, Farm_Game_InfoLog_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_InfoLog_Req__FieldAccessorTable; }
  }
  
  public const int UidFieldNumber = 1;
  private bool hasUid;
  private int uid_;
  public bool HasUid {
    get { return hasUid; }
  }
  public int Uid {
    get { return uid_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameInfoLogReqFieldNames;
    if (hasUid) {
      output.WriteInt32(1, field_names[0], Uid);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUid) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Uid);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_InfoLog_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_InfoLog_Req MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_InfoLog_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_InfoLog_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_InfoLog_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_InfoLog_Req result;
    
    private Farm_Game_InfoLog_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_InfoLog_Req original = result;
        result = new Farm_Game_InfoLog_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_InfoLog_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_InfoLog_Req.Descriptor; }
    }
    
    public override Farm_Game_InfoLog_Req DefaultInstanceForType {
      get { return global::Farm_Game_InfoLog_Req.DefaultInstance; }
    }
    
    public override Farm_Game_InfoLog_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_InfoLog_Req) {
        return MergeFrom((Farm_Game_InfoLog_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_InfoLog_Req other) {
      if (other == global::Farm_Game_InfoLog_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUid) {
        Uid = other.Uid;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameInfoLogReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameInfoLogReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUid = input.ReadInt32(ref result.uid_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUid {
      get { return result.hasUid; }
    }
    public int Uid {
      get { return result.Uid; }
      set { SetUid(value); }
    }
    public Builder SetUid(int value) {
      PrepareBuilder();
      result.hasUid = true;
      result.uid_ = value;
      return this;
    }
    public Builder ClearUid() {
      PrepareBuilder();
      result.hasUid = false;
      result.uid_ = 0;
      return this;
    }
  }
  static Farm_Game_InfoLog_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_InfoLog_Anw : pb::GeneratedMessage<Farm_Game_InfoLog_Anw, Farm_Game_InfoLog_Anw.Builder> {
  private Farm_Game_InfoLog_Anw() { }
  private static readonly Farm_Game_InfoLog_Anw defaultInstance = new Farm_Game_InfoLog_Anw().MakeReadOnly();
  private static readonly string[] _farmGameInfoLogAnwFieldNames = new string[] { "CompanyInfo", "LoginInfo", "expressInfo", "expressMoney", "info", "other2", "other3", "strategy" };
  private static readonly uint[] _farmGameInfoLogAnwFieldTags = new uint[] { 26, 10, 18, 32, 50, 58, 66, 42 };
  public static Farm_Game_InfoLog_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_InfoLog_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_InfoLog_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_InfoLog_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_InfoLog_Anw, Farm_Game_InfoLog_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_InfoLog_Anw__FieldAccessorTable; }
  }
  
  public const int LoginInfoFieldNumber = 1;
  private bool hasLoginInfo;
  private string loginInfo_ = "";
  public bool HasLoginInfo {
    get { return hasLoginInfo; }
  }
  public string LoginInfo {
    get { return loginInfo_; }
  }
  
  public const int ExpressInfoFieldNumber = 2;
  private bool hasExpressInfo;
  private string expressInfo_ = "";
  public bool HasExpressInfo {
    get { return hasExpressInfo; }
  }
  public string ExpressInfo {
    get { return expressInfo_; }
  }
  
  public const int CompanyInfoFieldNumber = 3;
  private bool hasCompanyInfo;
  private string companyInfo_ = "";
  public bool HasCompanyInfo {
    get { return hasCompanyInfo; }
  }
  public string CompanyInfo {
    get { return companyInfo_; }
  }
  
  public const int ExpressMoneyFieldNumber = 4;
  private bool hasExpressMoney;
  private int expressMoney_;
  public bool HasExpressMoney {
    get { return hasExpressMoney; }
  }
  public int ExpressMoney {
    get { return expressMoney_; }
  }
  
  public const int StrategyFieldNumber = 5;
  private bool hasStrategy;
  private string strategy_ = "";
  public bool HasStrategy {
    get { return hasStrategy; }
  }
  public string Strategy {
    get { return strategy_; }
  }
  
  public const int InfoFieldNumber = 6;
  private bool hasInfo;
  private string info_ = "";
  public bool HasInfo {
    get { return hasInfo; }
  }
  public string Info {
    get { return info_; }
  }
  
  public const int Other2FieldNumber = 7;
  private bool hasOther2;
  private string other2_ = "";
  public bool HasOther2 {
    get { return hasOther2; }
  }
  public string Other2 {
    get { return other2_; }
  }
  
  public const int Other3FieldNumber = 8;
  private bool hasOther3;
  private string other3_ = "";
  public bool HasOther3 {
    get { return hasOther3; }
  }
  public string Other3 {
    get { return other3_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameInfoLogAnwFieldNames;
    if (hasLoginInfo) {
      output.WriteString(1, field_names[1], LoginInfo);
    }
    if (hasExpressInfo) {
      output.WriteString(2, field_names[2], ExpressInfo);
    }
    if (hasCompanyInfo) {
      output.WriteString(3, field_names[0], CompanyInfo);
    }
    if (hasExpressMoney) {
      output.WriteInt32(4, field_names[3], ExpressMoney);
    }
    if (hasStrategy) {
      output.WriteString(5, field_names[7], Strategy);
    }
    if (hasInfo) {
      output.WriteString(6, field_names[4], Info);
    }
    if (hasOther2) {
      output.WriteString(7, field_names[5], Other2);
    }
    if (hasOther3) {
      output.WriteString(8, field_names[6], Other3);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasLoginInfo) {
      size += pb::CodedOutputStream.ComputeStringSize(1, LoginInfo);
    }
    if (hasExpressInfo) {
      size += pb::CodedOutputStream.ComputeStringSize(2, ExpressInfo);
    }
    if (hasCompanyInfo) {
      size += pb::CodedOutputStream.ComputeStringSize(3, CompanyInfo);
    }
    if (hasExpressMoney) {
      size += pb::CodedOutputStream.ComputeInt32Size(4, ExpressMoney);
    }
    if (hasStrategy) {
      size += pb::CodedOutputStream.ComputeStringSize(5, Strategy);
    }
    if (hasInfo) {
      size += pb::CodedOutputStream.ComputeStringSize(6, Info);
    }
    if (hasOther2) {
      size += pb::CodedOutputStream.ComputeStringSize(7, Other2);
    }
    if (hasOther3) {
      size += pb::CodedOutputStream.ComputeStringSize(8, Other3);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_InfoLog_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_InfoLog_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_InfoLog_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_InfoLog_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_InfoLog_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_InfoLog_Anw result;
    
    private Farm_Game_InfoLog_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_InfoLog_Anw original = result;
        result = new Farm_Game_InfoLog_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_InfoLog_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_InfoLog_Anw.Descriptor; }
    }
    
    public override Farm_Game_InfoLog_Anw DefaultInstanceForType {
      get { return global::Farm_Game_InfoLog_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_InfoLog_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_InfoLog_Anw) {
        return MergeFrom((Farm_Game_InfoLog_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_InfoLog_Anw other) {
      if (other == global::Farm_Game_InfoLog_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasLoginInfo) {
        LoginInfo = other.LoginInfo;
      }
      if (other.HasExpressInfo) {
        ExpressInfo = other.ExpressInfo;
      }
      if (other.HasCompanyInfo) {
        CompanyInfo = other.CompanyInfo;
      }
      if (other.HasExpressMoney) {
        ExpressMoney = other.ExpressMoney;
      }
      if (other.HasStrategy) {
        Strategy = other.Strategy;
      }
      if (other.HasInfo) {
        Info = other.Info;
      }
      if (other.HasOther2) {
        Other2 = other.Other2;
      }
      if (other.HasOther3) {
        Other3 = other.Other3;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameInfoLogAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameInfoLogAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasLoginInfo = input.ReadString(ref result.loginInfo_);
            break;
          }
          case 18: {
            result.hasExpressInfo = input.ReadString(ref result.expressInfo_);
            break;
          }
          case 26: {
            result.hasCompanyInfo = input.ReadString(ref result.companyInfo_);
            break;
          }
          case 32: {
            result.hasExpressMoney = input.ReadInt32(ref result.expressMoney_);
            break;
          }
          case 42: {
            result.hasStrategy = input.ReadString(ref result.strategy_);
            break;
          }
          case 50: {
            result.hasInfo = input.ReadString(ref result.info_);
            break;
          }
          case 58: {
            result.hasOther2 = input.ReadString(ref result.other2_);
            break;
          }
          case 66: {
            result.hasOther3 = input.ReadString(ref result.other3_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasLoginInfo {
      get { return result.hasLoginInfo; }
    }
    public string LoginInfo {
      get { return result.LoginInfo; }
      set { SetLoginInfo(value); }
    }
    public Builder SetLoginInfo(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLoginInfo = true;
      result.loginInfo_ = value;
      return this;
    }
    public Builder ClearLoginInfo() {
      PrepareBuilder();
      result.hasLoginInfo = false;
      result.loginInfo_ = "";
      return this;
    }
    
    public bool HasExpressInfo {
      get { return result.hasExpressInfo; }
    }
    public string ExpressInfo {
      get { return result.ExpressInfo; }
      set { SetExpressInfo(value); }
    }
    public Builder SetExpressInfo(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasExpressInfo = true;
      result.expressInfo_ = value;
      return this;
    }
    public Builder ClearExpressInfo() {
      PrepareBuilder();
      result.hasExpressInfo = false;
      result.expressInfo_ = "";
      return this;
    }
    
    public bool HasCompanyInfo {
      get { return result.hasCompanyInfo; }
    }
    public string CompanyInfo {
      get { return result.CompanyInfo; }
      set { SetCompanyInfo(value); }
    }
    public Builder SetCompanyInfo(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCompanyInfo = true;
      result.companyInfo_ = value;
      return this;
    }
    public Builder ClearCompanyInfo() {
      PrepareBuilder();
      result.hasCompanyInfo = false;
      result.companyInfo_ = "";
      return this;
    }
    
    public bool HasExpressMoney {
      get { return result.hasExpressMoney; }
    }
    public int ExpressMoney {
      get { return result.ExpressMoney; }
      set { SetExpressMoney(value); }
    }
    public Builder SetExpressMoney(int value) {
      PrepareBuilder();
      result.hasExpressMoney = true;
      result.expressMoney_ = value;
      return this;
    }
    public Builder ClearExpressMoney() {
      PrepareBuilder();
      result.hasExpressMoney = false;
      result.expressMoney_ = 0;
      return this;
    }
    
    public bool HasStrategy {
      get { return result.hasStrategy; }
    }
    public string Strategy {
      get { return result.Strategy; }
      set { SetStrategy(value); }
    }
    public Builder SetStrategy(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasStrategy = true;
      result.strategy_ = value;
      return this;
    }
    public Builder ClearStrategy() {
      PrepareBuilder();
      result.hasStrategy = false;
      result.strategy_ = "";
      return this;
    }
    
    public bool HasInfo {
      get { return result.hasInfo; }
    }
    public string Info {
      get { return result.Info; }
      set { SetInfo(value); }
    }
    public Builder SetInfo(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasInfo = true;
      result.info_ = value;
      return this;
    }
    public Builder ClearInfo() {
      PrepareBuilder();
      result.hasInfo = false;
      result.info_ = "";
      return this;
    }
    
    public bool HasOther2 {
      get { return result.hasOther2; }
    }
    public string Other2 {
      get { return result.Other2; }
      set { SetOther2(value); }
    }
    public Builder SetOther2(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOther2 = true;
      result.other2_ = value;
      return this;
    }
    public Builder ClearOther2() {
      PrepareBuilder();
      result.hasOther2 = false;
      result.other2_ = "";
      return this;
    }
    
    public bool HasOther3 {
      get { return result.hasOther3; }
    }
    public string Other3 {
      get { return result.Other3; }
      set { SetOther3(value); }
    }
    public Builder SetOther3(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOther3 = true;
      result.other3_ = value;
      return this;
    }
    public Builder ClearOther3() {
      PrepareBuilder();
      result.hasOther3 = false;
      result.other3_ = "";
      return this;
    }
  }
  static Farm_Game_InfoLog_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_OidExchange_Req : pb::GeneratedMessage<Farm_Game_OidExchange_Req, Farm_Game_OidExchange_Req.Builder> {
  private Farm_Game_OidExchange_Req() { }
  private static readonly Farm_Game_OidExchange_Req defaultInstance = new Farm_Game_OidExchange_Req().MakeReadOnly();
  private static readonly string[] _farmGameOidExchangeReqFieldNames = new string[] { "Pattern", "PayPattern", "PhoneNum", "PinPai", "RecieverName", "UserGameID", "adress", "beaty", "city", "county", "objs", "province" };
  private static readonly uint[] _farmGameOidExchangeReqFieldTags = new uint[] { 16, 64, 34, 104, 26, 8, 74, 50, 90, 98, 58, 82 };
  public static Farm_Game_OidExchange_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_OidExchange_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_OidExchange_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OidExchange_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_OidExchange_Req, Farm_Game_OidExchange_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OidExchange_Req__FieldAccessorTable; }
  }
  
  public const int UserGameIDFieldNumber = 1;
  private bool hasUserGameID;
  private int userGameID_;
  public bool HasUserGameID {
    get { return hasUserGameID; }
  }
  public int UserGameID {
    get { return userGameID_; }
  }
  
  public const int PatternFieldNumber = 2;
  private bool hasPattern;
  private int pattern_;
  public bool HasPattern {
    get { return hasPattern; }
  }
  public int Pattern {
    get { return pattern_; }
  }
  
  public const int RecieverNameFieldNumber = 3;
  private bool hasRecieverName;
  private string recieverName_ = "";
  public bool HasRecieverName {
    get { return hasRecieverName; }
  }
  public string RecieverName {
    get { return recieverName_; }
  }
  
  public const int PhoneNumFieldNumber = 4;
  private bool hasPhoneNum;
  private string phoneNum_ = "";
  public bool HasPhoneNum {
    get { return hasPhoneNum; }
  }
  public string PhoneNum {
    get { return phoneNum_; }
  }
  
  public const int BeatyFieldNumber = 6;
  private bool hasBeaty;
  private string beaty_ = "";
  public bool HasBeaty {
    get { return hasBeaty; }
  }
  public string Beaty {
    get { return beaty_; }
  }
  
  public const int ObjsFieldNumber = 7;
  private pbc::PopsicleList<global::PMsg_StagePropUnit> objs_ = new pbc::PopsicleList<global::PMsg_StagePropUnit>();
  public scg::IList<global::PMsg_StagePropUnit> ObjsList {
    get { return objs_; }
  }
  public int ObjsCount {
    get { return objs_.Count; }
  }
  public global::PMsg_StagePropUnit GetObjs(int index) {
    return objs_[index];
  }
  
  public const int PayPatternFieldNumber = 8;
  private bool hasPayPattern;
  private int payPattern_;
  public bool HasPayPattern {
    get { return hasPayPattern; }
  }
  public int PayPattern {
    get { return payPattern_; }
  }
  
  public const int AdressFieldNumber = 9;
  private bool hasAdress;
  private string adress_ = "";
  public bool HasAdress {
    get { return hasAdress; }
  }
  public string Adress {
    get { return adress_; }
  }
  
  public const int ProvinceFieldNumber = 10;
  private bool hasProvince;
  private string province_ = "";
  public bool HasProvince {
    get { return hasProvince; }
  }
  public string Province {
    get { return province_; }
  }
  
  public const int CityFieldNumber = 11;
  private bool hasCity;
  private string city_ = "";
  public bool HasCity {
    get { return hasCity; }
  }
  public string City {
    get { return city_; }
  }
  
  public const int CountyFieldNumber = 12;
  private bool hasCounty;
  private string county_ = "";
  public bool HasCounty {
    get { return hasCounty; }
  }
  public string County {
    get { return county_; }
  }
  
  public const int PinPaiFieldNumber = 13;
  private bool hasPinPai;
  private int pinPai_;
  public bool HasPinPai {
    get { return hasPinPai; }
  }
  public int PinPai {
    get { return pinPai_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameOidExchangeReqFieldNames;
    if (hasUserGameID) {
      output.WriteInt32(1, field_names[5], UserGameID);
    }
    if (hasPattern) {
      output.WriteInt32(2, field_names[0], Pattern);
    }
    if (hasRecieverName) {
      output.WriteString(3, field_names[4], RecieverName);
    }
    if (hasPhoneNum) {
      output.WriteString(4, field_names[2], PhoneNum);
    }
    if (hasBeaty) {
      output.WriteString(6, field_names[7], Beaty);
    }
    if (objs_.Count > 0) {
      output.WriteMessageArray(7, field_names[10], objs_);
    }
    if (hasPayPattern) {
      output.WriteInt32(8, field_names[1], PayPattern);
    }
    if (hasAdress) {
      output.WriteString(9, field_names[6], Adress);
    }
    if (hasProvince) {
      output.WriteString(10, field_names[11], Province);
    }
    if (hasCity) {
      output.WriteString(11, field_names[8], City);
    }
    if (hasCounty) {
      output.WriteString(12, field_names[9], County);
    }
    if (hasPinPai) {
      output.WriteInt32(13, field_names[3], PinPai);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserGameID) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, UserGameID);
    }
    if (hasPattern) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Pattern);
    }
    if (hasRecieverName) {
      size += pb::CodedOutputStream.ComputeStringSize(3, RecieverName);
    }
    if (hasPhoneNum) {
      size += pb::CodedOutputStream.ComputeStringSize(4, PhoneNum);
    }
    if (hasBeaty) {
      size += pb::CodedOutputStream.ComputeStringSize(6, Beaty);
    }
    foreach (global::PMsg_StagePropUnit element in ObjsList) {
      size += pb::CodedOutputStream.ComputeMessageSize(7, element);
    }
    if (hasPayPattern) {
      size += pb::CodedOutputStream.ComputeInt32Size(8, PayPattern);
    }
    if (hasAdress) {
      size += pb::CodedOutputStream.ComputeStringSize(9, Adress);
    }
    if (hasProvince) {
      size += pb::CodedOutputStream.ComputeStringSize(10, Province);
    }
    if (hasCity) {
      size += pb::CodedOutputStream.ComputeStringSize(11, City);
    }
    if (hasCounty) {
      size += pb::CodedOutputStream.ComputeStringSize(12, County);
    }
    if (hasPinPai) {
      size += pb::CodedOutputStream.ComputeInt32Size(13, PinPai);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_OidExchange_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_OidExchange_Req MakeReadOnly() {
    objs_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_OidExchange_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_OidExchange_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_OidExchange_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_OidExchange_Req result;
    
    private Farm_Game_OidExchange_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_OidExchange_Req original = result;
        result = new Farm_Game_OidExchange_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_OidExchange_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_OidExchange_Req.Descriptor; }
    }
    
    public override Farm_Game_OidExchange_Req DefaultInstanceForType {
      get { return global::Farm_Game_OidExchange_Req.DefaultInstance; }
    }
    
    public override Farm_Game_OidExchange_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_OidExchange_Req) {
        return MergeFrom((Farm_Game_OidExchange_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_OidExchange_Req other) {
      if (other == global::Farm_Game_OidExchange_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserGameID) {
        UserGameID = other.UserGameID;
      }
      if (other.HasPattern) {
        Pattern = other.Pattern;
      }
      if (other.HasRecieverName) {
        RecieverName = other.RecieverName;
      }
      if (other.HasPhoneNum) {
        PhoneNum = other.PhoneNum;
      }
      if (other.HasBeaty) {
        Beaty = other.Beaty;
      }
      if (other.objs_.Count != 0) {
        result.objs_.Add(other.objs_);
      }
      if (other.HasPayPattern) {
        PayPattern = other.PayPattern;
      }
      if (other.HasAdress) {
        Adress = other.Adress;
      }
      if (other.HasProvince) {
        Province = other.Province;
      }
      if (other.HasCity) {
        City = other.City;
      }
      if (other.HasCounty) {
        County = other.County;
      }
      if (other.HasPinPai) {
        PinPai = other.PinPai;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameOidExchangeReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameOidExchangeReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserGameID = input.ReadInt32(ref result.userGameID_);
            break;
          }
          case 16: {
            result.hasPattern = input.ReadInt32(ref result.pattern_);
            break;
          }
          case 26: {
            result.hasRecieverName = input.ReadString(ref result.recieverName_);
            break;
          }
          case 34: {
            result.hasPhoneNum = input.ReadString(ref result.phoneNum_);
            break;
          }
          case 50: {
            result.hasBeaty = input.ReadString(ref result.beaty_);
            break;
          }
          case 58: {
            input.ReadMessageArray(tag, field_name, result.objs_, global::PMsg_StagePropUnit.DefaultInstance, extensionRegistry);
            break;
          }
          case 64: {
            result.hasPayPattern = input.ReadInt32(ref result.payPattern_);
            break;
          }
          case 74: {
            result.hasAdress = input.ReadString(ref result.adress_);
            break;
          }
          case 82: {
            result.hasProvince = input.ReadString(ref result.province_);
            break;
          }
          case 90: {
            result.hasCity = input.ReadString(ref result.city_);
            break;
          }
          case 98: {
            result.hasCounty = input.ReadString(ref result.county_);
            break;
          }
          case 104: {
            result.hasPinPai = input.ReadInt32(ref result.pinPai_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserGameID {
      get { return result.hasUserGameID; }
    }
    public int UserGameID {
      get { return result.UserGameID; }
      set { SetUserGameID(value); }
    }
    public Builder SetUserGameID(int value) {
      PrepareBuilder();
      result.hasUserGameID = true;
      result.userGameID_ = value;
      return this;
    }
    public Builder ClearUserGameID() {
      PrepareBuilder();
      result.hasUserGameID = false;
      result.userGameID_ = 0;
      return this;
    }
    
    public bool HasPattern {
      get { return result.hasPattern; }
    }
    public int Pattern {
      get { return result.Pattern; }
      set { SetPattern(value); }
    }
    public Builder SetPattern(int value) {
      PrepareBuilder();
      result.hasPattern = true;
      result.pattern_ = value;
      return this;
    }
    public Builder ClearPattern() {
      PrepareBuilder();
      result.hasPattern = false;
      result.pattern_ = 0;
      return this;
    }
    
    public bool HasRecieverName {
      get { return result.hasRecieverName; }
    }
    public string RecieverName {
      get { return result.RecieverName; }
      set { SetRecieverName(value); }
    }
    public Builder SetRecieverName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasRecieverName = true;
      result.recieverName_ = value;
      return this;
    }
    public Builder ClearRecieverName() {
      PrepareBuilder();
      result.hasRecieverName = false;
      result.recieverName_ = "";
      return this;
    }
    
    public bool HasPhoneNum {
      get { return result.hasPhoneNum; }
    }
    public string PhoneNum {
      get { return result.PhoneNum; }
      set { SetPhoneNum(value); }
    }
    public Builder SetPhoneNum(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasPhoneNum = true;
      result.phoneNum_ = value;
      return this;
    }
    public Builder ClearPhoneNum() {
      PrepareBuilder();
      result.hasPhoneNum = false;
      result.phoneNum_ = "";
      return this;
    }
    
    public bool HasBeaty {
      get { return result.hasBeaty; }
    }
    public string Beaty {
      get { return result.Beaty; }
      set { SetBeaty(value); }
    }
    public Builder SetBeaty(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBeaty = true;
      result.beaty_ = value;
      return this;
    }
    public Builder ClearBeaty() {
      PrepareBuilder();
      result.hasBeaty = false;
      result.beaty_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::PMsg_StagePropUnit> ObjsList {
      get { return PrepareBuilder().objs_; }
    }
    public int ObjsCount {
      get { return result.ObjsCount; }
    }
    public global::PMsg_StagePropUnit GetObjs(int index) {
      return result.GetObjs(index);
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_[index] = value;
      return this;
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_.Add(value);
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjs(scg::IEnumerable<global::PMsg_StagePropUnit> values) {
      PrepareBuilder();
      result.objs_.Add(values);
      return this;
    }
    public Builder ClearObjs() {
      PrepareBuilder();
      result.objs_.Clear();
      return this;
    }
    
    public bool HasPayPattern {
      get { return result.hasPayPattern; }
    }
    public int PayPattern {
      get { return result.PayPattern; }
      set { SetPayPattern(value); }
    }
    public Builder SetPayPattern(int value) {
      PrepareBuilder();
      result.hasPayPattern = true;
      result.payPattern_ = value;
      return this;
    }
    public Builder ClearPayPattern() {
      PrepareBuilder();
      result.hasPayPattern = false;
      result.payPattern_ = 0;
      return this;
    }
    
    public bool HasAdress {
      get { return result.hasAdress; }
    }
    public string Adress {
      get { return result.Adress; }
      set { SetAdress(value); }
    }
    public Builder SetAdress(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasAdress = true;
      result.adress_ = value;
      return this;
    }
    public Builder ClearAdress() {
      PrepareBuilder();
      result.hasAdress = false;
      result.adress_ = "";
      return this;
    }
    
    public bool HasProvince {
      get { return result.hasProvince; }
    }
    public string Province {
      get { return result.Province; }
      set { SetProvince(value); }
    }
    public Builder SetProvince(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasProvince = true;
      result.province_ = value;
      return this;
    }
    public Builder ClearProvince() {
      PrepareBuilder();
      result.hasProvince = false;
      result.province_ = "";
      return this;
    }
    
    public bool HasCity {
      get { return result.hasCity; }
    }
    public string City {
      get { return result.City; }
      set { SetCity(value); }
    }
    public Builder SetCity(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCity = true;
      result.city_ = value;
      return this;
    }
    public Builder ClearCity() {
      PrepareBuilder();
      result.hasCity = false;
      result.city_ = "";
      return this;
    }
    
    public bool HasCounty {
      get { return result.hasCounty; }
    }
    public string County {
      get { return result.County; }
      set { SetCounty(value); }
    }
    public Builder SetCounty(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCounty = true;
      result.county_ = value;
      return this;
    }
    public Builder ClearCounty() {
      PrepareBuilder();
      result.hasCounty = false;
      result.county_ = "";
      return this;
    }
    
    public bool HasPinPai {
      get { return result.hasPinPai; }
    }
    public int PinPai {
      get { return result.PinPai; }
      set { SetPinPai(value); }
    }
    public Builder SetPinPai(int value) {
      PrepareBuilder();
      result.hasPinPai = true;
      result.pinPai_ = value;
      return this;
    }
    public Builder ClearPinPai() {
      PrepareBuilder();
      result.hasPinPai = false;
      result.pinPai_ = 0;
      return this;
    }
  }
  static Farm_Game_OidExchange_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_OidExchange_Anw : pb::GeneratedMessage<Farm_Game_OidExchange_Anw, Farm_Game_OidExchange_Anw.Builder> {
  private Farm_Game_OidExchange_Anw() { }
  private static readonly Farm_Game_OidExchange_Anw defaultInstance = new Farm_Game_OidExchange_Anw().MakeReadOnly();
  private static readonly string[] _farmGameOidExchangeAnwFieldNames = new string[] { "result" };
  private static readonly uint[] _farmGameOidExchangeAnwFieldTags = new uint[] { 8 };
  public static Farm_Game_OidExchange_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_OidExchange_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_OidExchange_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OidExchange_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_OidExchange_Anw, Farm_Game_OidExchange_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_OidExchange_Anw__FieldAccessorTable; }
  }
  
  public const int ResultFieldNumber = 1;
  private bool hasResult;
  private int result_;
  public bool HasResult {
    get { return hasResult; }
  }
  public int Result {
    get { return result_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameOidExchangeAnwFieldNames;
    if (hasResult) {
      output.WriteInt32(1, field_names[0], Result);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasResult) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Result);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_OidExchange_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_OidExchange_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_OidExchange_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_OidExchange_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_OidExchange_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_OidExchange_Anw result;
    
    private Farm_Game_OidExchange_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_OidExchange_Anw original = result;
        result = new Farm_Game_OidExchange_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_OidExchange_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_OidExchange_Anw.Descriptor; }
    }
    
    public override Farm_Game_OidExchange_Anw DefaultInstanceForType {
      get { return global::Farm_Game_OidExchange_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_OidExchange_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_OidExchange_Anw) {
        return MergeFrom((Farm_Game_OidExchange_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_OidExchange_Anw other) {
      if (other == global::Farm_Game_OidExchange_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasResult) {
        Result = other.Result;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameOidExchangeAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameOidExchangeAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasResult = input.ReadInt32(ref result.result_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasResult {
      get { return result.hasResult; }
    }
    public int Result {
      get { return result.Result; }
      set { SetResult(value); }
    }
    public Builder SetResult(int value) {
      PrepareBuilder();
      result.hasResult = true;
      result.result_ = value;
      return this;
    }
    public Builder ClearResult() {
      PrepareBuilder();
      result.hasResult = false;
      result.result_ = 0;
      return this;
    }
  }
  static Farm_Game_OidExchange_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Postage_Req : pb::GeneratedMessage<Farm_Game_Postage_Req, Farm_Game_Postage_Req.Builder> {
  private Farm_Game_Postage_Req() { }
  private static readonly Farm_Game_Postage_Req defaultInstance = new Farm_Game_Postage_Req().MakeReadOnly();
  private static readonly string[] _farmGamePostageReqFieldNames = new string[] { "objs" };
  private static readonly uint[] _farmGamePostageReqFieldTags = new uint[] { 10 };
  public static Farm_Game_Postage_Req DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Postage_Req DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Postage_Req ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Postage_Req__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Postage_Req, Farm_Game_Postage_Req.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Postage_Req__FieldAccessorTable; }
  }
  
  public const int ObjsFieldNumber = 1;
  private pbc::PopsicleList<global::PMsg_StagePropUnit> objs_ = new pbc::PopsicleList<global::PMsg_StagePropUnit>();
  public scg::IList<global::PMsg_StagePropUnit> ObjsList {
    get { return objs_; }
  }
  public int ObjsCount {
    get { return objs_.Count; }
  }
  public global::PMsg_StagePropUnit GetObjs(int index) {
    return objs_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGamePostageReqFieldNames;
    if (objs_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], objs_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::PMsg_StagePropUnit element in ObjsList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Postage_Req ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Postage_Req ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Postage_Req MakeReadOnly() {
    objs_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Postage_Req prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Postage_Req, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Postage_Req cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Postage_Req result;
    
    private Farm_Game_Postage_Req PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Postage_Req original = result;
        result = new Farm_Game_Postage_Req();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Postage_Req MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Postage_Req.Descriptor; }
    }
    
    public override Farm_Game_Postage_Req DefaultInstanceForType {
      get { return global::Farm_Game_Postage_Req.DefaultInstance; }
    }
    
    public override Farm_Game_Postage_Req BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Postage_Req) {
        return MergeFrom((Farm_Game_Postage_Req) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Postage_Req other) {
      if (other == global::Farm_Game_Postage_Req.DefaultInstance) return this;
      PrepareBuilder();
      if (other.objs_.Count != 0) {
        result.objs_.Add(other.objs_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGamePostageReqFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGamePostageReqFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.objs_, global::PMsg_StagePropUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::PMsg_StagePropUnit> ObjsList {
      get { return PrepareBuilder().objs_; }
    }
    public int ObjsCount {
      get { return result.ObjsCount; }
    }
    public global::PMsg_StagePropUnit GetObjs(int index) {
      return result.GetObjs(index);
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_[index] = value;
      return this;
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_.Add(value);
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjs(scg::IEnumerable<global::PMsg_StagePropUnit> values) {
      PrepareBuilder();
      result.objs_.Add(values);
      return this;
    }
    public Builder ClearObjs() {
      PrepareBuilder();
      result.objs_.Clear();
      return this;
    }
  }
  static Farm_Game_Postage_Req() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_Postage_Anw : pb::GeneratedMessage<Farm_Game_Postage_Anw, Farm_Game_Postage_Anw.Builder> {
  private Farm_Game_Postage_Anw() { }
  private static readonly Farm_Game_Postage_Anw defaultInstance = new Farm_Game_Postage_Anw().MakeReadOnly();
  private static readonly string[] _farmGamePostageAnwFieldNames = new string[] { "Postage" };
  private static readonly uint[] _farmGamePostageAnwFieldTags = new uint[] { 8 };
  public static Farm_Game_Postage_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_Postage_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_Postage_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Postage_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_Postage_Anw, Farm_Game_Postage_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_Postage_Anw__FieldAccessorTable; }
  }
  
  public const int PostageFieldNumber = 1;
  private bool hasPostage;
  private int postage_;
  public bool HasPostage {
    get { return hasPostage; }
  }
  public int Postage {
    get { return postage_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGamePostageAnwFieldNames;
    if (hasPostage) {
      output.WriteInt32(1, field_names[0], Postage);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasPostage) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Postage);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_Postage_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_Postage_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_Postage_Anw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_Postage_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_Postage_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_Postage_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_Postage_Anw result;
    
    private Farm_Game_Postage_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_Postage_Anw original = result;
        result = new Farm_Game_Postage_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_Postage_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_Postage_Anw.Descriptor; }
    }
    
    public override Farm_Game_Postage_Anw DefaultInstanceForType {
      get { return global::Farm_Game_Postage_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_Postage_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_Postage_Anw) {
        return MergeFrom((Farm_Game_Postage_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_Postage_Anw other) {
      if (other == global::Farm_Game_Postage_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPostage) {
        Postage = other.Postage;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGamePostageAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGamePostageAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPostage = input.ReadInt32(ref result.postage_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPostage {
      get { return result.hasPostage; }
    }
    public int Postage {
      get { return result.Postage; }
      set { SetPostage(value); }
    }
    public Builder SetPostage(int value) {
      PrepareBuilder();
      result.hasPostage = true;
      result.postage_ = value;
      return this;
    }
    public Builder ClearPostage() {
      PrepareBuilder();
      result.hasPostage = false;
      result.postage_ = 0;
      return this;
    }
  }
  static Farm_Game_Postage_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_PaySucc_Anw : pb::GeneratedMessage<Farm_Game_PaySucc_Anw, Farm_Game_PaySucc_Anw.Builder> {
  private Farm_Game_PaySucc_Anw() { }
  private static readonly Farm_Game_PaySucc_Anw defaultInstance = new Farm_Game_PaySucc_Anw().MakeReadOnly();
  private static readonly string[] _farmGamePaySuccAnwFieldNames = new string[] { "money", "objs", "ordernum", "time", "type" };
  private static readonly uint[] _farmGamePaySuccAnwFieldTags = new uint[] { 26, 42, 18, 34, 8 };
  public static Farm_Game_PaySucc_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_PaySucc_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_PaySucc_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_PaySucc_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_PaySucc_Anw, Farm_Game_PaySucc_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_PaySucc_Anw__FieldAccessorTable; }
  }
  
  public const int TypeFieldNumber = 1;
  private bool hasType;
  private int type_;
  public bool HasType {
    get { return hasType; }
  }
  public int Type {
    get { return type_; }
  }
  
  public const int OrdernumFieldNumber = 2;
  private bool hasOrdernum;
  private string ordernum_ = "";
  public bool HasOrdernum {
    get { return hasOrdernum; }
  }
  public string Ordernum {
    get { return ordernum_; }
  }
  
  public const int MoneyFieldNumber = 3;
  private bool hasMoney;
  private string money_ = "";
  public bool HasMoney {
    get { return hasMoney; }
  }
  public string Money {
    get { return money_; }
  }
  
  public const int TimeFieldNumber = 4;
  private bool hasTime;
  private string time_ = "";
  public bool HasTime {
    get { return hasTime; }
  }
  public string Time {
    get { return time_; }
  }
  
  public const int ObjsFieldNumber = 5;
  private pbc::PopsicleList<global::PMsg_StagePropUnit> objs_ = new pbc::PopsicleList<global::PMsg_StagePropUnit>();
  public scg::IList<global::PMsg_StagePropUnit> ObjsList {
    get { return objs_; }
  }
  public int ObjsCount {
    get { return objs_.Count; }
  }
  public global::PMsg_StagePropUnit GetObjs(int index) {
    return objs_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGamePaySuccAnwFieldNames;
    if (hasType) {
      output.WriteInt32(1, field_names[4], Type);
    }
    if (hasOrdernum) {
      output.WriteString(2, field_names[2], Ordernum);
    }
    if (hasMoney) {
      output.WriteString(3, field_names[0], Money);
    }
    if (hasTime) {
      output.WriteString(4, field_names[3], Time);
    }
    if (objs_.Count > 0) {
      output.WriteMessageArray(5, field_names[1], objs_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasType) {
      size += pb::CodedOutputStream.ComputeInt32Size(1, Type);
    }
    if (hasOrdernum) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Ordernum);
    }
    if (hasMoney) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Money);
    }
    if (hasTime) {
      size += pb::CodedOutputStream.ComputeStringSize(4, Time);
    }
    foreach (global::PMsg_StagePropUnit element in ObjsList) {
      size += pb::CodedOutputStream.ComputeMessageSize(5, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_PaySucc_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_PaySucc_Anw MakeReadOnly() {
    objs_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_PaySucc_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_PaySucc_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_PaySucc_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_PaySucc_Anw result;
    
    private Farm_Game_PaySucc_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_PaySucc_Anw original = result;
        result = new Farm_Game_PaySucc_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_PaySucc_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_PaySucc_Anw.Descriptor; }
    }
    
    public override Farm_Game_PaySucc_Anw DefaultInstanceForType {
      get { return global::Farm_Game_PaySucc_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_PaySucc_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_PaySucc_Anw) {
        return MergeFrom((Farm_Game_PaySucc_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_PaySucc_Anw other) {
      if (other == global::Farm_Game_PaySucc_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasType) {
        Type = other.Type;
      }
      if (other.HasOrdernum) {
        Ordernum = other.Ordernum;
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      if (other.HasTime) {
        Time = other.Time;
      }
      if (other.objs_.Count != 0) {
        result.objs_.Add(other.objs_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGamePaySuccAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGamePaySuccAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasType = input.ReadInt32(ref result.type_);
            break;
          }
          case 18: {
            result.hasOrdernum = input.ReadString(ref result.ordernum_);
            break;
          }
          case 26: {
            result.hasMoney = input.ReadString(ref result.money_);
            break;
          }
          case 34: {
            result.hasTime = input.ReadString(ref result.time_);
            break;
          }
          case 42: {
            input.ReadMessageArray(tag, field_name, result.objs_, global::PMsg_StagePropUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasType {
      get { return result.hasType; }
    }
    public int Type {
      get { return result.Type; }
      set { SetType(value); }
    }
    public Builder SetType(int value) {
      PrepareBuilder();
      result.hasType = true;
      result.type_ = value;
      return this;
    }
    public Builder ClearType() {
      PrepareBuilder();
      result.hasType = false;
      result.type_ = 0;
      return this;
    }
    
    public bool HasOrdernum {
      get { return result.hasOrdernum; }
    }
    public string Ordernum {
      get { return result.Ordernum; }
      set { SetOrdernum(value); }
    }
    public Builder SetOrdernum(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOrdernum = true;
      result.ordernum_ = value;
      return this;
    }
    public Builder ClearOrdernum() {
      PrepareBuilder();
      result.hasOrdernum = false;
      result.ordernum_ = "";
      return this;
    }
    
    public bool HasMoney {
      get { return result.hasMoney; }
    }
    public string Money {
      get { return result.Money; }
      set { SetMoney(value); }
    }
    public Builder SetMoney(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMoney = true;
      result.money_ = value;
      return this;
    }
    public Builder ClearMoney() {
      PrepareBuilder();
      result.hasMoney = false;
      result.money_ = "";
      return this;
    }
    
    public bool HasTime {
      get { return result.hasTime; }
    }
    public string Time {
      get { return result.Time; }
      set { SetTime(value); }
    }
    public Builder SetTime(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTime = true;
      result.time_ = value;
      return this;
    }
    public Builder ClearTime() {
      PrepareBuilder();
      result.hasTime = false;
      result.time_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::PMsg_StagePropUnit> ObjsList {
      get { return PrepareBuilder().objs_; }
    }
    public int ObjsCount {
      get { return result.ObjsCount; }
    }
    public global::PMsg_StagePropUnit GetObjs(int index) {
      return result.GetObjs(index);
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_[index] = value;
      return this;
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_.Add(value);
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjs(scg::IEnumerable<global::PMsg_StagePropUnit> values) {
      PrepareBuilder();
      result.objs_.Add(values);
      return this;
    }
    public Builder ClearObjs() {
      PrepareBuilder();
      result.objs_.Clear();
      return this;
    }
  }
  static Farm_Game_PaySucc_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_CheckOrder_REQ : pb::GeneratedMessage<Farm_Game_CheckOrder_REQ, Farm_Game_CheckOrder_REQ.Builder> {
  private Farm_Game_CheckOrder_REQ() { }
  private static readonly Farm_Game_CheckOrder_REQ defaultInstance = new Farm_Game_CheckOrder_REQ().MakeReadOnly();
  private static readonly string[] _farmGameCheckOrderREQFieldNames = new string[] {  };
  private static readonly uint[] _farmGameCheckOrderREQFieldTags = new uint[] {  };
  public static Farm_Game_CheckOrder_REQ DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_CheckOrder_REQ DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_CheckOrder_REQ ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_CheckOrder_REQ__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_CheckOrder_REQ, Farm_Game_CheckOrder_REQ.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_CheckOrder_REQ__FieldAccessorTable; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameCheckOrderREQFieldNames;
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_REQ ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_CheckOrder_REQ MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_CheckOrder_REQ prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_CheckOrder_REQ, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_CheckOrder_REQ cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_CheckOrder_REQ result;
    
    private Farm_Game_CheckOrder_REQ PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_CheckOrder_REQ original = result;
        result = new Farm_Game_CheckOrder_REQ();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_CheckOrder_REQ MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_CheckOrder_REQ.Descriptor; }
    }
    
    public override Farm_Game_CheckOrder_REQ DefaultInstanceForType {
      get { return global::Farm_Game_CheckOrder_REQ.DefaultInstance; }
    }
    
    public override Farm_Game_CheckOrder_REQ BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_CheckOrder_REQ) {
        return MergeFrom((Farm_Game_CheckOrder_REQ) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_CheckOrder_REQ other) {
      if (other == global::Farm_Game_CheckOrder_REQ.DefaultInstance) return this;
      PrepareBuilder();
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameCheckOrderREQFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameCheckOrderREQFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
  }
  static Farm_Game_CheckOrder_REQ() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_CheckOrder_Anw : pb::GeneratedMessage<Farm_Game_CheckOrder_Anw, Farm_Game_CheckOrder_Anw.Builder> {
  private Farm_Game_CheckOrder_Anw() { }
  private static readonly Farm_Game_CheckOrder_Anw defaultInstance = new Farm_Game_CheckOrder_Anw().MakeReadOnly();
  private static readonly string[] _farmGameCheckOrderAnwFieldNames = new string[] { "listInfo" };
  private static readonly uint[] _farmGameCheckOrderAnwFieldTags = new uint[] { 10 };
  public static Farm_Game_CheckOrder_Anw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_CheckOrder_Anw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_CheckOrder_Anw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_CheckOrder_Anw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_CheckOrder_Anw, Farm_Game_CheckOrder_Anw.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_CheckOrder_Anw__FieldAccessorTable; }
  }
  
  public const int ListInfoFieldNumber = 1;
  private pbc::PopsicleList<global::Farm_Game_LogisticsOrder> listInfo_ = new pbc::PopsicleList<global::Farm_Game_LogisticsOrder>();
  public scg::IList<global::Farm_Game_LogisticsOrder> ListInfoList {
    get { return listInfo_; }
  }
  public int ListInfoCount {
    get { return listInfo_.Count; }
  }
  public global::Farm_Game_LogisticsOrder GetListInfo(int index) {
    return listInfo_[index];
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameCheckOrderAnwFieldNames;
    if (listInfo_.Count > 0) {
      output.WriteMessageArray(1, field_names[0], listInfo_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    foreach (global::Farm_Game_LogisticsOrder element in ListInfoList) {
      size += pb::CodedOutputStream.ComputeMessageSize(1, element);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_CheckOrder_Anw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_CheckOrder_Anw MakeReadOnly() {
    listInfo_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_CheckOrder_Anw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_CheckOrder_Anw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_CheckOrder_Anw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_CheckOrder_Anw result;
    
    private Farm_Game_CheckOrder_Anw PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_CheckOrder_Anw original = result;
        result = new Farm_Game_CheckOrder_Anw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_CheckOrder_Anw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_CheckOrder_Anw.Descriptor; }
    }
    
    public override Farm_Game_CheckOrder_Anw DefaultInstanceForType {
      get { return global::Farm_Game_CheckOrder_Anw.DefaultInstance; }
    }
    
    public override Farm_Game_CheckOrder_Anw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_CheckOrder_Anw) {
        return MergeFrom((Farm_Game_CheckOrder_Anw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_CheckOrder_Anw other) {
      if (other == global::Farm_Game_CheckOrder_Anw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.listInfo_.Count != 0) {
        result.listInfo_.Add(other.listInfo_);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameCheckOrderAnwFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameCheckOrderAnwFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            input.ReadMessageArray(tag, field_name, result.listInfo_, global::Farm_Game_LogisticsOrder.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public pbc::IPopsicleList<global::Farm_Game_LogisticsOrder> ListInfoList {
      get { return PrepareBuilder().listInfo_; }
    }
    public int ListInfoCount {
      get { return result.ListInfoCount; }
    }
    public global::Farm_Game_LogisticsOrder GetListInfo(int index) {
      return result.GetListInfo(index);
    }
    public Builder SetListInfo(int index, global::Farm_Game_LogisticsOrder value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.listInfo_[index] = value;
      return this;
    }
    public Builder SetListInfo(int index, global::Farm_Game_LogisticsOrder.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.listInfo_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddListInfo(global::Farm_Game_LogisticsOrder value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.listInfo_.Add(value);
      return this;
    }
    public Builder AddListInfo(global::Farm_Game_LogisticsOrder.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.listInfo_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeListInfo(scg::IEnumerable<global::Farm_Game_LogisticsOrder> values) {
      PrepareBuilder();
      result.listInfo_.Add(values);
      return this;
    }
    public Builder ClearListInfo() {
      PrepareBuilder();
      result.listInfo_.Clear();
      return this;
    }
  }
  static Farm_Game_CheckOrder_Anw() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class Farm_Game_LogisticsOrder : pb::GeneratedMessage<Farm_Game_LogisticsOrder, Farm_Game_LogisticsOrder.Builder> {
  private Farm_Game_LogisticsOrder() { }
  private static readonly Farm_Game_LogisticsOrder defaultInstance = new Farm_Game_LogisticsOrder().MakeReadOnly();
  private static readonly string[] _farmGameLogisticsOrderFieldNames = new string[] { "Company", "Sendtime", "logisticsOrder", "money", "objs", "ordernum" };
  private static readonly uint[] _farmGameLogisticsOrderFieldTags = new uint[] { 50, 18, 10, 42, 58, 34 };
  public static Farm_Game_LogisticsOrder DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override Farm_Game_LogisticsOrder DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override Farm_Game_LogisticsOrder ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_LogisticsOrder__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<Farm_Game_LogisticsOrder, Farm_Game_LogisticsOrder.Builder> InternalFieldAccessors {
    get { return global::FarmGameProtocal.internal__static_Farm_Game_LogisticsOrder__FieldAccessorTable; }
  }
  
  public const int LogisticsOrderFieldNumber = 1;
  private bool hasLogisticsOrder;
  private string logisticsOrder_ = "";
  public bool HasLogisticsOrder {
    get { return hasLogisticsOrder; }
  }
  public string LogisticsOrder {
    get { return logisticsOrder_; }
  }
  
  public const int SendtimeFieldNumber = 2;
  private bool hasSendtime;
  private string sendtime_ = "";
  public bool HasSendtime {
    get { return hasSendtime; }
  }
  public string Sendtime {
    get { return sendtime_; }
  }
  
  public const int OrdernumFieldNumber = 4;
  private bool hasOrdernum;
  private string ordernum_ = "";
  public bool HasOrdernum {
    get { return hasOrdernum; }
  }
  public string Ordernum {
    get { return ordernum_; }
  }
  
  public const int MoneyFieldNumber = 5;
  private bool hasMoney;
  private string money_ = "";
  public bool HasMoney {
    get { return hasMoney; }
  }
  public string Money {
    get { return money_; }
  }
  
  public const int ObjsFieldNumber = 7;
  private pbc::PopsicleList<global::PMsg_StagePropUnit> objs_ = new pbc::PopsicleList<global::PMsg_StagePropUnit>();
  public scg::IList<global::PMsg_StagePropUnit> ObjsList {
    get { return objs_; }
  }
  public int ObjsCount {
    get { return objs_.Count; }
  }
  public global::PMsg_StagePropUnit GetObjs(int index) {
    return objs_[index];
  }
  
  public const int CompanyFieldNumber = 6;
  private bool hasCompany;
  private string company_ = "";
  public bool HasCompany {
    get { return hasCompany; }
  }
  public string Company {
    get { return company_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _farmGameLogisticsOrderFieldNames;
    if (hasLogisticsOrder) {
      output.WriteString(1, field_names[2], LogisticsOrder);
    }
    if (hasSendtime) {
      output.WriteString(2, field_names[1], Sendtime);
    }
    if (hasOrdernum) {
      output.WriteString(4, field_names[5], Ordernum);
    }
    if (hasMoney) {
      output.WriteString(5, field_names[3], Money);
    }
    if (hasCompany) {
      output.WriteString(6, field_names[0], Company);
    }
    if (objs_.Count > 0) {
      output.WriteMessageArray(7, field_names[4], objs_);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasLogisticsOrder) {
      size += pb::CodedOutputStream.ComputeStringSize(1, LogisticsOrder);
    }
    if (hasSendtime) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Sendtime);
    }
    if (hasOrdernum) {
      size += pb::CodedOutputStream.ComputeStringSize(4, Ordernum);
    }
    if (hasMoney) {
      size += pb::CodedOutputStream.ComputeStringSize(5, Money);
    }
    foreach (global::PMsg_StagePropUnit element in ObjsList) {
      size += pb::CodedOutputStream.ComputeMessageSize(7, element);
    }
    if (hasCompany) {
      size += pb::CodedOutputStream.ComputeStringSize(6, Company);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static Farm_Game_LogisticsOrder ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static Farm_Game_LogisticsOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private Farm_Game_LogisticsOrder MakeReadOnly() {
    objs_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(Farm_Game_LogisticsOrder prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<Farm_Game_LogisticsOrder, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(Farm_Game_LogisticsOrder cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private Farm_Game_LogisticsOrder result;
    
    private Farm_Game_LogisticsOrder PrepareBuilder() {
      if (resultIsReadOnly) {
        Farm_Game_LogisticsOrder original = result;
        result = new Farm_Game_LogisticsOrder();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override Farm_Game_LogisticsOrder MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::Farm_Game_LogisticsOrder.Descriptor; }
    }
    
    public override Farm_Game_LogisticsOrder DefaultInstanceForType {
      get { return global::Farm_Game_LogisticsOrder.DefaultInstance; }
    }
    
    public override Farm_Game_LogisticsOrder BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is Farm_Game_LogisticsOrder) {
        return MergeFrom((Farm_Game_LogisticsOrder) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(Farm_Game_LogisticsOrder other) {
      if (other == global::Farm_Game_LogisticsOrder.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasLogisticsOrder) {
        LogisticsOrder = other.LogisticsOrder;
      }
      if (other.HasSendtime) {
        Sendtime = other.Sendtime;
      }
      if (other.HasOrdernum) {
        Ordernum = other.Ordernum;
      }
      if (other.HasMoney) {
        Money = other.Money;
      }
      if (other.objs_.Count != 0) {
        result.objs_.Add(other.objs_);
      }
      if (other.HasCompany) {
        Company = other.Company;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_farmGameLogisticsOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _farmGameLogisticsOrderFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 10: {
            result.hasLogisticsOrder = input.ReadString(ref result.logisticsOrder_);
            break;
          }
          case 18: {
            result.hasSendtime = input.ReadString(ref result.sendtime_);
            break;
          }
          case 34: {
            result.hasOrdernum = input.ReadString(ref result.ordernum_);
            break;
          }
          case 42: {
            result.hasMoney = input.ReadString(ref result.money_);
            break;
          }
          case 50: {
            result.hasCompany = input.ReadString(ref result.company_);
            break;
          }
          case 58: {
            input.ReadMessageArray(tag, field_name, result.objs_, global::PMsg_StagePropUnit.DefaultInstance, extensionRegistry);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasLogisticsOrder {
      get { return result.hasLogisticsOrder; }
    }
    public string LogisticsOrder {
      get { return result.LogisticsOrder; }
      set { SetLogisticsOrder(value); }
    }
    public Builder SetLogisticsOrder(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLogisticsOrder = true;
      result.logisticsOrder_ = value;
      return this;
    }
    public Builder ClearLogisticsOrder() {
      PrepareBuilder();
      result.hasLogisticsOrder = false;
      result.logisticsOrder_ = "";
      return this;
    }
    
    public bool HasSendtime {
      get { return result.hasSendtime; }
    }
    public string Sendtime {
      get { return result.Sendtime; }
      set { SetSendtime(value); }
    }
    public Builder SetSendtime(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSendtime = true;
      result.sendtime_ = value;
      return this;
    }
    public Builder ClearSendtime() {
      PrepareBuilder();
      result.hasSendtime = false;
      result.sendtime_ = "";
      return this;
    }
    
    public bool HasOrdernum {
      get { return result.hasOrdernum; }
    }
    public string Ordernum {
      get { return result.Ordernum; }
      set { SetOrdernum(value); }
    }
    public Builder SetOrdernum(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasOrdernum = true;
      result.ordernum_ = value;
      return this;
    }
    public Builder ClearOrdernum() {
      PrepareBuilder();
      result.hasOrdernum = false;
      result.ordernum_ = "";
      return this;
    }
    
    public bool HasMoney {
      get { return result.hasMoney; }
    }
    public string Money {
      get { return result.Money; }
      set { SetMoney(value); }
    }
    public Builder SetMoney(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMoney = true;
      result.money_ = value;
      return this;
    }
    public Builder ClearMoney() {
      PrepareBuilder();
      result.hasMoney = false;
      result.money_ = "";
      return this;
    }
    
    public pbc::IPopsicleList<global::PMsg_StagePropUnit> ObjsList {
      get { return PrepareBuilder().objs_; }
    }
    public int ObjsCount {
      get { return result.ObjsCount; }
    }
    public global::PMsg_StagePropUnit GetObjs(int index) {
      return result.GetObjs(index);
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_[index] = value;
      return this;
    }
    public Builder SetObjs(int index, global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.objs_.Add(value);
      return this;
    }
    public Builder AddObjs(global::PMsg_StagePropUnit.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.objs_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeObjs(scg::IEnumerable<global::PMsg_StagePropUnit> values) {
      PrepareBuilder();
      result.objs_.Add(values);
      return this;
    }
    public Builder ClearObjs() {
      PrepareBuilder();
      result.objs_.Clear();
      return this;
    }
    
    public bool HasCompany {
      get { return result.hasCompany; }
    }
    public string Company {
      get { return result.Company; }
      set { SetCompany(value); }
    }
    public Builder SetCompany(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasCompany = true;
      result.company_ = value;
      return this;
    }
    public Builder ClearCompany() {
      PrepareBuilder();
      result.hasCompany = false;
      result.company_ = "";
      return this;
    }
  }
  static Farm_Game_LogisticsOrder() {
    object.ReferenceEquals(global::FarmGameProtocal.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
